
 /----------------------------------------------------------------------------\
 |                                                                            |
 |  yosys -- Yosys Open SYnthesis Suite                                       |
 |                                                                            |
 |  Copyright (C) 2012 - 2019  Clifford Wolf <clifford@clifford.at>           |
 |                                                                            |
 |  Permission to use, copy, modify, and/or distribute this software for any  |
 |  purpose with or without fee is hereby granted, provided that the above    |
 |  copyright notice and this permission notice appear in all copies.         |
 |                                                                            |
 |  THE SOFTWARE IS PROVIDED "AS IS" AND THE AUTHOR DISCLAIMS ALL WARRANTIES  |
 |  WITH REGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF          |
 |  MERCHANTABILITY AND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR   |
 |  ANY SPECIAL, DIRECT, INDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES    |
 |  WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN     |
 |  ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF   |
 |  OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.            |
 |                                                                            |
 \----------------------------------------------------------------------------/

 Yosys 0.9 (git sha1 1979e0b)


-- Executing script file `/home/vpai/tcl_project/Output/openMSP430.ys' --

1. Executing Liberty frontend.
Imported 32 cell types from liberty file.

2. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_mem_backbone.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_mem_backbone.v' to AST representation.
Generating RTLIL representation for module `\omsp_mem_backbone'.
Successfully finished Verilog frontend.

3. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_dbg_uart.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_dbg_uart.v' to AST representation.
Generating RTLIL representation for module `\omsp_dbg_uart'.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_dbg_uart.v:160 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

4. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_dbg.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_dbg.v' to AST representation.
Generating RTLIL representation for module `\omsp_dbg'.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_dbg.v:240 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_dbg.v:746 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

5. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_sfr.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_sfr.v' to AST representation.
Generating RTLIL representation for module `\omsp_sfr'.
Successfully finished Verilog frontend.

6. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_clock_mux.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_clock_mux.v' to AST representation.
Generating RTLIL representation for module `\omsp_clock_mux'.
Successfully finished Verilog frontend.

7. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_watchdog.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_watchdog.v' to AST representation.
Generating RTLIL representation for module `\omsp_watchdog'.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_watchdog.v:512 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

8. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_alu.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_alu.v' to AST representation.
Generating RTLIL representation for module `\omsp_alu'.
Successfully finished Verilog frontend.

9. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_clock_gate.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_clock_gate.v' to AST representation.
Generating RTLIL representation for module `\omsp_clock_gate'.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_clock_gate.v:76 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

10. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_and_gate.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_and_gate.v' to AST representation.
Generating RTLIL representation for module `\omsp_and_gate'.
Successfully finished Verilog frontend.

11. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_dbg_i2c.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_dbg_i2c.v' to AST representation.
Generating RTLIL representation for module `\omsp_dbg_i2c'.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_dbg_i2c.v:239 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_dbg_i2c.v:357 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

12. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_multiplier.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_multiplier.v' to AST representation.
Generating RTLIL representation for module `\omsp_multiplier'.
Successfully finished Verilog frontend.

13. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_sync_reset.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_sync_reset.v' to AST representation.
Generating RTLIL representation for module `\omsp_sync_reset'.
Successfully finished Verilog frontend.

14. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_execution_unit.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_execution_unit.v' to AST representation.
Generating RTLIL representation for module `\omsp_execution_unit'.
Successfully finished Verilog frontend.

15. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_sync_cell.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_sync_cell.v' to AST representation.
Generating RTLIL representation for module `\omsp_sync_cell'.
Successfully finished Verilog frontend.

16. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/openMSP430_undefines.v
Parsing Verilog input from `/home/vpai/tcl_project/source/openMSP430_undefines.v' to AST representation.
Successfully finished Verilog frontend.

17. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_scan_mux.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_scan_mux.v' to AST representation.
Generating RTLIL representation for module `\omsp_scan_mux'.
Successfully finished Verilog frontend.

18. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_dbg_hwbrk.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_dbg_hwbrk.v' to AST representation.
Generating RTLIL representation for module `\omsp_dbg_hwbrk'.
Successfully finished Verilog frontend.

19. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/openMSP430_defines.v
Parsing Verilog input from `/home/vpai/tcl_project/source/openMSP430_defines.v' to AST representation.
Successfully finished Verilog frontend.

20. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/openMSP430.v
Parsing Verilog input from `/home/vpai/tcl_project/source/openMSP430.v' to AST representation.
Generating RTLIL representation for module `\openMSP430'.
Successfully finished Verilog frontend.

21. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_register_file.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_register_file.v' to AST representation.
Generating RTLIL representation for module `\omsp_register_file'.
Successfully finished Verilog frontend.

22. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_frontend.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_frontend.v' to AST representation.
Generating RTLIL representation for module `\omsp_frontend'.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_frontend.v:254 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_frontend.v:691 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_frontend.v:742 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_frontend.v:768 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Note: Assuming pure combinatorial block at /home/vpai/tcl_project/source/omsp_frontend.v:879 in
compliance with IEC 62142(E):2005 / IEEE Std. 1364.1(E):2002. Recommending
use of @* instead of @(...) for better match of synthesis and simulation.
Successfully finished Verilog frontend.

23. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_wakeup_cell.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_wakeup_cell.v' to AST representation.
Generating RTLIL representation for module `\omsp_wakeup_cell'.
Successfully finished Verilog frontend.

24. Executing Verilog-2005 frontend: /home/vpai/tcl_project/source/omsp_clock_module.v
Parsing Verilog input from `/home/vpai/tcl_project/source/omsp_clock_module.v' to AST representation.
Generating RTLIL representation for module `\omsp_clock_module'.
Successfully finished Verilog frontend.

25. Executing HIERARCHY pass (managing design hierarchy).

25.1. Analyzing design hierarchy..
Top module:  \openMSP430
Used module:     \omsp_dbg
Used module:         \omsp_dbg_i2c
Used module:             \omsp_sync_cell
Used module:     \omsp_multiplier
Used module:     \omsp_watchdog
Used module:     \omsp_sfr
Used module:     \omsp_mem_backbone
Used module:     \omsp_execution_unit
Used module:         \omsp_alu
Used module:         \omsp_register_file
Used module:     \omsp_frontend
Used module:     \omsp_clock_module
Used module:         \omsp_sync_reset

25.2. Analyzing design hierarchy..
Top module:  \openMSP430
Used module:     \omsp_dbg
Used module:         \omsp_dbg_i2c
Used module:             \omsp_sync_cell
Used module:     \omsp_multiplier
Used module:     \omsp_watchdog
Used module:     \omsp_sfr
Used module:     \omsp_mem_backbone
Used module:     \omsp_execution_unit
Used module:         \omsp_alu
Used module:         \omsp_register_file
Used module:     \omsp_frontend
Used module:     \omsp_clock_module
Used module:         \omsp_sync_reset
Removing unused module `\omsp_wakeup_cell'.
Removing unused module `\omsp_dbg_hwbrk'.
Removing unused module `\omsp_scan_mux'.
Removing unused module `\omsp_and_gate'.
Removing unused module `\omsp_clock_gate'.
Removing unused module `\omsp_clock_mux'.
Removing unused module `\omsp_dbg_uart'.
Removed 7 unused modules.

26. Executing SYNTH pass.

26.1. Executing HIERARCHY pass (managing design hierarchy).

26.1.1. Analyzing design hierarchy..
Top module:  \openMSP430
Used module:     \omsp_dbg
Used module:         \omsp_dbg_i2c
Used module:             \omsp_sync_cell
Used module:     \omsp_multiplier
Used module:     \omsp_watchdog
Used module:     \omsp_sfr
Used module:     \omsp_mem_backbone
Used module:     \omsp_execution_unit
Used module:         \omsp_alu
Used module:         \omsp_register_file
Used module:     \omsp_frontend
Used module:     \omsp_clock_module
Used module:         \omsp_sync_reset

26.1.2. Analyzing design hierarchy..
Top module:  \openMSP430
Used module:     \omsp_dbg
Used module:         \omsp_dbg_i2c
Used module:             \omsp_sync_cell
Used module:     \omsp_multiplier
Used module:     \omsp_watchdog
Used module:     \omsp_sfr
Used module:     \omsp_mem_backbone
Used module:     \omsp_execution_unit
Used module:         \omsp_alu
Used module:         \omsp_register_file
Used module:     \omsp_frontend
Used module:     \omsp_clock_module
Used module:         \omsp_sync_reset
Removed 0 unused modules.

26.2. Executing PROC pass (convert processes to netlists).

26.2.1. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Cleaned up 0 empty switches.

26.2.2. Executing PROC_RMDEAD pass (remove dead branches from decision trees).
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_sync_cell.v:72$1048 in module omsp_sync_cell.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:407$1046 in module omsp_execution_unit.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:392$1044 in module omsp_execution_unit.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:387$1042 in module omsp_execution_unit.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:378$1038 in module omsp_execution_unit.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:364$1028 in module omsp_execution_unit.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_sync_reset.v:70$817 in module omsp_sync_reset.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_multiplier.v:381$806 in module omsp_multiplier.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_multiplier.v:323$802 in module omsp_multiplier.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_multiplier.v:312$800 in module omsp_multiplier.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_multiplier.v:272$786 in module omsp_multiplier.
Marked 3 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_multiplier.v:253$784 in module omsp_multiplier.
Marked 3 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_multiplier.v:224$782 in module omsp_multiplier.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_multiplier.v:197$781 in module omsp_multiplier.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_multiplier.v:172$780 in module omsp_multiplier.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:456$730 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:447$723 in module omsp_dbg_i2c.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:437$722 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:432$721 in module omsp_dbg_i2c.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:412$720 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:394$713 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:357$681 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:331$673 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:305$666 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:273$627 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:239$604 in module omsp_dbg_i2c.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:207$598 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:174$595 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:163$589 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:153$583 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:131$572 in module omsp_dbg_i2c.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:126$571 in module omsp_dbg_i2c.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:567$1213 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:543$1210 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:519$1207 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:495$1204 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:471$1201 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:447$1198 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:423$1195 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:399$1192 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:375$1189 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:351$1186 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:327$1183 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:303$1180 in module omsp_register_file.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:275$1177 in module omsp_register_file.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:245$1171 in module omsp_register_file.
Marked 3 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_register_file.v:162$1152 in module omsp_register_file.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550 in module omsp_alu.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538 in module omsp_alu.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526 in module omsp_alu.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514 in module omsp_alu.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_watchdog.v:550$408 in module omsp_watchdog.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_watchdog.v:534$405 in module omsp_watchdog.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_watchdog.v:512$399 in module omsp_watchdog.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_watchdog.v:502$398 in module omsp_watchdog.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_watchdog.v:192$384 in module omsp_watchdog.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1243$1931 in module omsp_clock_module.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1142$1925 in module omsp_clock_module.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1138$1923 in module omsp_clock_module.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_clock_module.v:954$1907 in module omsp_clock_module.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_clock_module.v:950$1903 in module omsp_clock_module.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_clock_module.v:632$1887 in module omsp_clock_module.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_clock_module.v:287$1877 in module omsp_clock_module.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_clock_module.v:248$1869 in module omsp_clock_module.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_sfr.v:182$335 in module omsp_sfr.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:788$308 in module omsp_dbg.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:759$281 in module omsp_dbg.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:746$276 in module omsp_dbg.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:746$276 in module omsp_dbg.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:726$268 in module omsp_dbg.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:715$264 in module omsp_dbg.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:696$254 in module omsp_dbg.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:679$245 in module omsp_dbg.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:646$234 in module omsp_dbg.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:446$211 in module omsp_dbg.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:433$204 in module omsp_dbg.
Marked 3 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:414$188 in module omsp_dbg.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:396$183 in module omsp_dbg.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:389$182 in module omsp_dbg.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:354$178 in module omsp_dbg.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:328$169 in module omsp_dbg.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_dbg.v:240$166 in module omsp_dbg.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1846 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1846 in module omsp_frontend.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1841 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1841 in module omsp_frontend.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1836 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1836 in module omsp_frontend.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1831 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1831 in module omsp_frontend.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1826 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1826 in module omsp_frontend.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1821 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1821 in module omsp_frontend.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1816 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1816 in module omsp_frontend.
Removed 1 dead cases from process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:161$1811 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:161$1811 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:1000$1810 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:913$1773 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:879$1763 in module omsp_frontend.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:860$1750 in module omsp_frontend.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:854$1744 in module omsp_frontend.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:848$1741 in module omsp_frontend.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:842$1738 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:812$1718 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:805$1703 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:790$1702 in module omsp_frontend.
Marked 6 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:768$1698 in module omsp_frontend.
Marked 6 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:742$1697 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:727$1696 in module omsp_frontend.
Marked 8 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:691$1691 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:654$1685 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:636$1679 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:621$1678 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:588$1675 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:565$1674 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:540$1671 in module omsp_frontend.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:501$1656 in module omsp_frontend.
Marked 3 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:474$1649 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:432$1623 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:426$1622 in module omsp_frontend.
Marked 65 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:302$1402 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:287$1399 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:276$1384 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_frontend.v:254$1358 in module omsp_frontend.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:375$69 in module omsp_mem_backbone.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:360$66 in module omsp_mem_backbone.
Marked 2 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:346$64 in module omsp_mem_backbone.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:336$63 in module omsp_mem_backbone.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:318$55 in module omsp_mem_backbone.
Marked 1 switch rules as full_case in process $proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:306$54 in module omsp_mem_backbone.
Removed a total of 9 dead cases.

26.2.3. Executing PROC_INIT pass (extract init attributes).

26.2.4. Executing PROC_ARST pass (detect async resets in processes).
Found async reset \rst in `\omsp_sync_cell.$proc$/home/vpai/tcl_project/source/omsp_sync_cell.v:72$1048'.
Found async reset \puc_rst in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:407$1046'.
Found async reset \puc_rst in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:392$1044'.
Found async reset \puc_rst in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:387$1042'.
Found async reset \puc_rst in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:378$1038'.
Found async reset \puc_rst in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:364$1028'.
Found async reset \rst_a in `\omsp_sync_reset.$proc$/home/vpai/tcl_project/source/omsp_sync_reset.v:70$817'.
Found async reset \puc_rst in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:381$806'.
Found async reset \puc_rst in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:323$802'.
Found async reset \puc_rst in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:312$800'.
Found async reset \puc_rst in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:272$786'.
Found async reset \puc_rst in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:253$784'.
Found async reset \puc_rst in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:224$782'.
Found async reset \puc_rst in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:197$781'.
Found async reset \puc_rst in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:172$780'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:456$730'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:447$723'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:437$722'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:432$721'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:412$720'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:394$713'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:331$673'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:305$666'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:273$627'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:207$598'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:174$595'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:163$589'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:153$583'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:131$572'.
Found async reset \dbg_rst in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:126$571'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:567$1213'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:543$1210'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:519$1207'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:495$1204'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:471$1201'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:447$1198'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:423$1195'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:399$1192'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:375$1189'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:351$1186'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:327$1183'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:303$1180'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:275$1177'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:245$1171'.
Found async reset \puc_rst in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:162$1152'.
Found async reset \por in `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:550$408'.
Found async reset \por in `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:534$405'.
Found async reset \puc_rst in `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:502$398'.
Found async reset \puc_rst in `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:192$384'.
Found async reset \por in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1243$1931'.
Found async reset \puc_rst in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1142$1925'.
Found async reset \puc_rst in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1138$1923'.
Found async reset \puc_rst in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:954$1907'.
Found async reset \puc_rst in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:950$1903'.
Found async reset \por in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:632$1887'.
Found async reset \puc_rst in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:287$1877'.
Found async reset \puc_rst in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:248$1869'.
Found async reset \puc_rst in `\omsp_sfr.$proc$/home/vpai/tcl_project/source/omsp_sfr.v:182$335'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:788$308'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:759$281'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:726$268'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:715$264'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:696$254'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:679$245'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:646$234'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:446$211'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:433$204'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:414$188'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:396$183'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:389$182'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:354$178'.
Found async reset \dbg_rst in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:328$169'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:1000$1810'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:913$1773'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:860$1750'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:854$1744'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:848$1741'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:842$1738'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:812$1718'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:805$1703'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:790$1702'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:727$1696'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:654$1685'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:636$1679'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:621$1678'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:588$1675'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:565$1674'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:540$1671'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:501$1656'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:474$1649'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:432$1623'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:426$1622'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:302$1402'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:287$1399'.
Found async reset \puc_rst in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:276$1384'.
Found async reset \puc_rst in `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:375$69'.
Found async reset \puc_rst in `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:360$66'.
Found async reset \puc_rst in `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:346$64'.
Found async reset \puc_rst in `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:336$63'.
Found async reset \puc_rst in `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:318$55'.
Found async reset \puc_rst in `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:306$54'.

26.2.5. Executing PROC_MUX pass (convert decision trees to multiplexers).
Creating decoders for process `\omsp_sync_cell.$proc$/home/vpai/tcl_project/source/omsp_sync_cell.v:72$1048'.
     1/1: $0\data_sync[1:0]
Creating decoders for process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:407$1046'.
     1/1: $0\mdb_in_buf[15:0]
Creating decoders for process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:392$1044'.
     1/1: $0\mdb_in_buf_valid[0:0]
Creating decoders for process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:387$1042'.
     1/1: $0\mdb_in_buf_en[0:0]
Creating decoders for process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:378$1038'.
     1/1: $0\mab_lsb[0:0]
Creating decoders for process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:364$1028'.
     1/1: $0\mdb_out_nxt[15:0]
Creating decoders for process `\omsp_sync_reset.$proc$/home/vpai/tcl_project/source/omsp_sync_reset.v:70$817'.
     1/1: $0\data_sync[1:0]
Creating decoders for process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:381$806'.
     1/1: $0\cycle[1:0]
Creating decoders for process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:323$802'.
     1/1: $0\acc_sel[0:0]
Creating decoders for process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:312$800'.
     1/1: $0\sign_sel[0:0]
Creating decoders for process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:272$786'.
     1/1: $0\sumext_s[1:0]
Creating decoders for process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:253$784'.
     1/1: $0\reshi[15:0]
Creating decoders for process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:224$782'.
     1/1: $0\reslo[15:0]
Creating decoders for process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:197$781'.
     1/1: $0\op2[15:0]
Creating decoders for process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:172$780'.
     1/1: $0\op1[15:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:456$730'.
     1/1: $0\dbg_rd[0:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:447$723'.
     1/1: $0\dbg_wr[0:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:437$722'.
     1/1: $0\dbg_din_hi[7:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:432$721'.
     1/1: $0\dbg_din_lo[7:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:412$720'.
     1/2: $0\dbg_bw[0:0]
     2/2: $0\dbg_addr[5:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:394$713'.
     1/1: $0\dbg_state[2:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:357$681'.
     1/2: $1\dbg_state_nxt[2:0]
     2/2: $0\dbg_state_nxt[2:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:331$673'.
     1/1: $0\dbg_i2c_sda_out[0:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:305$666'.
     1/1: $0\shift_buf[8:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:273$627'.
     1/1: $0\i2c_state[2:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:239$604'.
     1/2: $1\i2c_state_nxt[2:0]
     2/2: $0\i2c_state_nxt[2:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:207$598'.
     1/1: $0\i2c_active_seq[0:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:174$595'.
     1/1: $0\scl_re_dly[1:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:163$589'.
     1/1: $0\scl_dly[0:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:153$583'.
     1/1: $0\sda_in_dly[0:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:131$572'.
     1/1: $0\sda_in_buf[1:0]
Creating decoders for process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:126$571'.
     1/1: $0\scl_buf[1:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:567$1213'.
     1/1: $0\r15[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:543$1210'.
     1/1: $0\r14[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:519$1207'.
     1/1: $0\r13[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:495$1204'.
     1/1: $0\r12[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:471$1201'.
     1/1: $0\r11[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:447$1198'.
     1/1: $0\r10[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:423$1195'.
     1/1: $0\r9[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:399$1192'.
     1/1: $0\r8[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:375$1189'.
     1/1: $0\r7[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:351$1186'.
     1/1: $0\r6[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:327$1183'.
     1/1: $0\r5[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:303$1180'.
     1/1: $0\r4[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:275$1177'.
     1/1: $0\r3[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:245$1171'.
     1/1: $0\r2[15:0]
Creating decoders for process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:162$1152'.
     1/1: $0\r1[15:0]
Creating decoders for process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
     1/7: $1$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\bcd_add[4:0]$560
     2/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$415$\bcd_add[4:0]$551
     3/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\bcd_add[4:0]$552
     4/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\Z_[4:0]$556
     5/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\C_[0:0]$555
     6/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\Y[3:0]$554
     7/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\X[3:0]$553
Creating decoders for process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
     1/7: $1$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\bcd_add[4:0]$548
     2/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$414$\bcd_add[4:0]$539
     3/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\bcd_add[4:0]$540
     4/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\Z_[4:0]$544
     5/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\C_[0:0]$543
     6/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\Y[3:0]$542
     7/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\X[3:0]$541
Creating decoders for process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
     1/7: $1$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\bcd_add[4:0]$536
     2/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$413$\bcd_add[4:0]$527
     3/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\bcd_add[4:0]$528
     4/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\Z_[4:0]$532
     5/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\C_[0:0]$531
     6/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\Y[3:0]$530
     7/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\X[3:0]$529
Creating decoders for process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
     1/7: $1$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\bcd_add[4:0]$524
     2/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$412$\bcd_add[4:0]$515
     3/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\bcd_add[4:0]$516
     4/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\Z_[4:0]$520
     5/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\C_[0:0]$519
     6/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\Y[3:0]$518
     7/7: $0$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\X[3:0]$517
Creating decoders for process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:550$408'.
     1/1: $0\wdt_reset[0:0]
Creating decoders for process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:534$405'.
     1/1: $0\wdtifg[0:0]
Creating decoders for process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:512$399'.
     1/2: $1\wdtqn[0:0]
     2/2: $0\wdtqn[0:0]
Creating decoders for process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:502$398'.
     1/1: $0\wdtcnt[15:0]
Creating decoders for process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:192$384'.
     1/1: $0\wdtctl[7:0]
Creating decoders for process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1243$1931'.
     1/1: $0\dbg_rst_noscan[0:0]
Creating decoders for process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1142$1925'.
     1/1: $0\smclk_div[2:0]
Creating decoders for process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1138$1923'.
     1/1: $0\smclk_en[0:0]
Creating decoders for process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:954$1907'.
     1/1: $0\aclk_en[0:0]
Creating decoders for process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:950$1903'.
     1/1: $0\aclk_div[2:0]
Creating decoders for process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:632$1887'.
     1/1: $0\lfxt_clk_dly[0:0]
Creating decoders for process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:287$1877'.
     1/1: $0\bcsctl2[7:0]
Creating decoders for process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:248$1869'.
     1/1: $0\bcsctl1[7:0]
Creating decoders for process `\omsp_sfr.$proc$/home/vpai/tcl_project/source/omsp_sfr.v:182$335'.
     1/1: $0\wdtie[0:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:788$308'.
     1/1: $0\dbg_mem_rd_dly[0:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:759$281'.
     1/1: $0\mem_state[1:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:746$276'.
     1/2: $1\mem_state_nxt[1:0]
     2/2: $0\mem_state_nxt[1:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:726$268'.
     1/1: $0\mem_startb[0:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:715$264'.
     1/1: $0\mem_burst[0:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:696$254'.
     1/1: $0\halt_flag[0:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:679$245'.
     1/1: $0\inc_step[1:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:646$234'.
     1/1: $0\dbg_rd_rdy[0:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:446$211'.
     1/1: $0\mem_cnt[15:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:433$204'.
     1/1: $0\mem_addr[15:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:414$188'.
     1/1: $0\mem_data[15:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:396$183'.
     1/1: $0\mem_start[0:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:389$182'.
     1/1: $0\mem_ctl[2:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:354$178'.
     1/1: $0\cpu_stat[1:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:328$169'.
     1/1: $0\cpu_ctl[3:0]
Creating decoders for process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:240$166'.
     1/2: $1\reg_dec[24:0]
     2/2: $0\reg_dec[24:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1846'.
     1/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [14]
     2/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [13]
     3/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [11]
     4/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [9]
     5/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [7]
     6/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [5]
     7/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [3]
     8/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [1]
     9/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [15]
    10/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [10]
    11/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [6]
    12/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [2]
    13/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [12]
    14/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [4]
    15/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [8]
    16/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1850 [0]
    17/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1347$\one_hot16[15:0]$1847
    18/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16[15:0]$1848
    19/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\binary[3:0]$1849
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1841'.
     1/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [14]
     2/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [13]
     3/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [11]
     4/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [9]
     5/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [7]
     6/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [5]
     7/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [3]
     8/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [1]
     9/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [15]
    10/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [10]
    11/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [6]
    12/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [2]
    13/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [12]
    14/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [4]
    15/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [8]
    16/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1845 [0]
    17/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842
    18/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16[15:0]$1843
    19/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\binary[3:0]$1844
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1836'.
     1/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [14]
     2/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [13]
     3/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [11]
     4/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [9]
     5/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [7]
     6/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [5]
     7/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [3]
     8/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [1]
     9/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [15]
    10/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [10]
    11/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [6]
    12/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [2]
    13/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [12]
    14/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [4]
    15/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [8]
    16/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1840 [0]
    17/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837
    18/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16[15:0]$1838
    19/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\binary[3:0]$1839
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1831'.
     1/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [14]
     2/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [13]
     3/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [11]
     4/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [9]
     5/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [7]
     6/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [5]
     7/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [3]
     8/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [1]
     9/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [15]
    10/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [10]
    11/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [6]
    12/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [2]
    13/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [12]
    14/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [4]
    15/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [8]
    16/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1835 [0]
    17/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832
    18/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16[15:0]$1833
    19/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\binary[3:0]$1834
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1826'.
     1/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [14]
     2/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [13]
     3/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [11]
     4/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [9]
     5/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [7]
     6/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [5]
     7/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [3]
     8/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [1]
     9/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [15]
    10/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [10]
    11/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [6]
    12/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [2]
    13/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [12]
    14/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [4]
    15/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [8]
    16/19: $1$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1830 [0]
    17/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827
    18/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16[15:0]$1828
    19/19: $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\binary[3:0]$1829
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1821'.
     1/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1825 [6]
     2/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1825 [5]
     3/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1825 [3]
     4/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1825 [1]
     5/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1825 [7]
     6/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1825 [2]
     7/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1825 [4]
     8/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1825 [0]
     9/11: $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1342$\one_hot8[7:0]$1822
    10/11: $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8[7:0]$1823
    11/11: $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\binary[2:0]$1824
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1816'.
     1/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1820 [6]
     2/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1820 [5]
     3/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1820 [3]
     4/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1820 [1]
     5/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1820 [7]
     6/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1820 [2]
     7/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1820 [4]
     8/11: $1$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1820 [0]
     9/11: $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1341$\one_hot8[7:0]$1817
    10/11: $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8[7:0]$1818
    11/11: $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\binary[2:0]$1819
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:161$1811'.
     1/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [62]
     2/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [61]
     3/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [59]
     4/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [57]
     5/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [55]
     6/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [53]
     7/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [51]
     8/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [49]
     9/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [47]
    10/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [45]
    11/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [43]
    12/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [41]
    13/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [39]
    14/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [37]
    15/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [35]
    16/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [33]
    17/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [31]
    18/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [29]
    19/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [27]
    20/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [25]
    21/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [23]
    22/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [21]
    23/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [19]
    24/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [17]
    25/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [15]
    26/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [13]
    27/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [11]
    28/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [9]
    29/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [7]
    30/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [5]
    31/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [3]
    32/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [1]
    33/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [63]
    34/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [58]
    35/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [54]
    36/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [50]
    37/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [46]
    38/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [42]
    39/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [38]
    40/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [34]
    41/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [30]
    42/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [26]
    43/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [22]
    44/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [18]
    45/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [14]
    46/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [10]
    47/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [6]
    48/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [2]
    49/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [60]
    50/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [52]
    51/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [44]
    52/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [36]
    53/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [28]
    54/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [20]
    55/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [12]
    56/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [4]
    57/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [56]
    58/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [40]
    59/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [24]
    60/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [8]
    61/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [48]
    62/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [16]
    63/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [32]
    64/67: $1$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1815 [0]
    65/67: $0$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1340$\one_hot64[63:0]$1812
    66/67: $0$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64[63:0]$1813
    67/67: $0$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\binary[5:0]$1814
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:1000$1810'.
     1/1: $0\inst_alu[11:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:913$1773'.
     1/1: $0\e_state[3:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:879$1763'.
     1/2: $1\e_state_nxt[3:0]
     2/2: $0\e_state_nxt[3:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:860$1750'.
     1/1: $0\exec_dext_rdy[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:854$1744'.
     1/1: $0\exec_src_wr[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:848$1741'.
     1/1: $0\exec_dst_wr[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:842$1738'.
     1/1: $0\exec_jmp[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:812$1718'.
     1/1: $0\inst_sz[1:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:805$1703'.
     1/1: $0\inst_bw[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:790$1702'.
     1/1: $0\inst_ad[7:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:768$1698'.
     1/7: $6\inst_ad_nxt[7:0]
     2/7: $5\inst_ad_nxt[7:0]
     3/7: $4\inst_ad_nxt[7:0]
     4/7: $3\inst_ad_nxt[7:0]
     5/7: $2\inst_ad_nxt[7:0]
     6/7: $1\inst_ad_nxt[7:0]
     7/7: $0\inst_ad_nxt[7:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:742$1697'.
     1/7: $6\sconst_nxt[15:0]
     2/7: $5\sconst_nxt[15:0]
     3/7: $4\sconst_nxt[15:0]
     4/7: $3\sconst_nxt[15:0]
     5/7: $2\sconst_nxt[15:0]
     6/7: $1\sconst_nxt[15:0]
     7/7: $0\sconst_nxt[15:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:727$1696'.
     1/1: $0\inst_as[7:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:691$1691'.
     1/9: $8\inst_as_nxt[12:0]
     2/9: $7\inst_as_nxt[12:0]
     3/9: $6\inst_as_nxt[12:0]
     4/9: $5\inst_as_nxt[12:0]
     5/9: $4\inst_as_nxt[12:0]
     6/9: $3\inst_as_nxt[12:0]
     7/9: $2\inst_as_nxt[12:0]
     8/9: $1\inst_as_nxt[12:0]
     9/9: $0\inst_as_nxt[12:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:654$1685'.
     1/1: $0\inst_src_bin[3:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:636$1679'.
     1/1: $0\inst_dest_bin[3:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:621$1678'.
     1/1: $0\inst_mov[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:588$1675'.
     1/1: $0\inst_jmp_bin[2:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:565$1674'.
     1/1: $0\inst_so[7:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:540$1671'.
     1/1: $0\inst_type[2:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:501$1656'.
     1/1: $0\inst_dext[15:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:474$1649'.
     1/1: $0\inst_sext[15:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:432$1623'.
     1/1: $0\pmem_busy[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:426$1622'.
     1/1: $0\pc[15:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415'.
     1/73: $65$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1613
     2/73: $64$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1610
     3/73: $63$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1607
     4/73: $62$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1604
     5/73: $61$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1601
     6/73: $60$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1598
     7/73: $59$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1595
     8/73: $58$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1592
     9/73: $57$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1589
    10/73: $56$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1586
    11/73: $55$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1583
    12/73: $54$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1580
    13/73: $53$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1577
    14/73: $52$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1574
    15/73: $51$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1571
    16/73: $50$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1568
    17/73: $49$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1565
    18/73: $48$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1562
    19/73: $47$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1559
    20/73: $46$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1556
    21/73: $45$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1553
    22/73: $44$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1550
    23/73: $43$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1547
    24/73: $42$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1544
    25/73: $41$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1541
    26/73: $40$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1538
    27/73: $39$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1535
    28/73: $38$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1532
    29/73: $37$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1529
    30/73: $36$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1526
    31/73: $35$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1523
    32/73: $34$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1520
    33/73: $33$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1517
    34/73: $32$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1514
    35/73: $31$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1511
    36/73: $30$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1508
    37/73: $29$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1505
    38/73: $28$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1502
    39/73: $27$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1499
    40/73: $26$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1496
    41/73: $25$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1493
    42/73: $24$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1490
    43/73: $23$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1487
    44/73: $22$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1484
    45/73: $21$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1481
    46/73: $20$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1478
    47/73: $19$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1475
    48/73: $18$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1472
    49/73: $17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469
    50/73: $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466
    51/73: $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463
    52/73: $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460
    53/73: $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457
    54/73: $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454
    55/73: $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451
    56/73: $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448
    57/73: $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445
    58/73: $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442
    59/73: $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439
    60/73: $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436
    61/73: $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433
    62/73: $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430
    63/73: $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427
    64/73: $2$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\ii[31:0]$1424
    65/73: $2$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1422
    66/73: $2$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\irq_all[62:0]$1423
    67/73: $1$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\ii[31:0]$1421
    68/73: $1$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\irq_all[62:0]$1420
    69/73: $1$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1419
    70/73: $0$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\ii[31:0]$1418
    71/73: $0$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\irq_all[62:0]$1417
    72/73: $0$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1416
    73/73: $0\irq_num[5:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:302$1402'.
     1/1: $0\inst_irq_rst[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:287$1399'.
     1/1: $0\cpu_halt_st[0:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:276$1384'.
     1/1: $0\i_state[2:0]
Creating decoders for process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:254$1358'.
     1/2: $1\i_state_nxt[2:0]
     2/2: $0\i_state_nxt[2:0]
Creating decoders for process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:375$69'.
     1/1: $0\ext_mem_din_sel[1:0]
Creating decoders for process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:360$66'.
     1/1: $0\eu_mdb_in_sel[1:0]
Creating decoders for process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:346$64'.
     1/1: $0\pmem_dout_bckup_sel[0:0]
Creating decoders for process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:336$63'.
     1/1: $0\pmem_dout_bckup[15:0]
Creating decoders for process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:318$55'.
     1/1: $0\fe_pmem_en_dly[0:0]
Creating decoders for process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:306$54'.
     1/1: $0\per_dout_val[15:0]

26.2.6. Executing PROC_DLATCH pass (convert process syncs to latches).
No latch inferred for signal `\omsp_dbg_i2c.\dbg_state_nxt' from process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:357$681'.
No latch inferred for signal `\omsp_dbg_i2c.\i2c_state_nxt' from process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:239$604'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$415$\bcd_add' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\bcd_add' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\X' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\Y' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\C_' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:188$419$\Z_' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$414$\bcd_add' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\bcd_add' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\X' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\Y' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\C_' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:187$418$\Z_' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$413$\bcd_add' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\bcd_add' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\X' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\Y' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\C_' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:186$417$\Z_' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$412$\bcd_add' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\bcd_add' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\X' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\Y' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\C_' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
No latch inferred for signal `\omsp_alu.$func$\bcd_add$/home/vpai/tcl_project/source/omsp_alu.v:185$416$\Z_' from process `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
No latch inferred for signal `\omsp_watchdog.\wdtqn' from process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:512$399'.
No latch inferred for signal `\omsp_dbg.\mem_state_nxt' from process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:746$276'.
No latch inferred for signal `\omsp_dbg.\reg_dec' from process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:240$166'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1347$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1846'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1846'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:665$1355$\binary' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1846'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1841'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1841'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1354$\binary' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1841'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1836'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1836'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1353$\binary' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1836'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1831'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1831'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1352$\binary' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1831'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1826'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\one_hot16' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1826'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1351$\binary' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1826'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1342$\one_hot8' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1821'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\one_hot8' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1821'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1350$\binary' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1821'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1341$\one_hot8' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1816'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\one_hot8' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1816'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1349$\binary' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1816'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1340$\one_hot64' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:161$1811'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\one_hot64' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:161$1811'.
No latch inferred for signal `\omsp_frontend.$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1348$\binary' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:161$1811'.
No latch inferred for signal `\omsp_frontend.\e_state_nxt' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:879$1763'.
No latch inferred for signal `\omsp_frontend.\inst_ad_nxt' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:768$1698'.
No latch inferred for signal `\omsp_frontend.\sconst_nxt' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:742$1697'.
No latch inferred for signal `\omsp_frontend.\inst_as_nxt' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:691$1691'.
No latch inferred for signal `\omsp_frontend.\i_state_nxt' from process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:254$1358'.

26.2.7. Executing PROC_DFF pass (convert process syncs to FFs).
Creating register for signal `\omsp_sync_cell.\data_sync' using process `\omsp_sync_cell.$proc$/home/vpai/tcl_project/source/omsp_sync_cell.v:72$1048'.
  created $adff cell `$procdff$8532' with positive edge clock and positive level reset.
Creating register for signal `\omsp_execution_unit.\mdb_in_buf' using process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:407$1046'.
  created $adff cell `$procdff$8533' with positive edge clock and positive level reset.
Creating register for signal `\omsp_execution_unit.\mdb_in_buf_valid' using process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:392$1044'.
  created $adff cell `$procdff$8534' with positive edge clock and positive level reset.
Creating register for signal `\omsp_execution_unit.\mdb_in_buf_en' using process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:387$1042'.
  created $adff cell `$procdff$8535' with positive edge clock and positive level reset.
Creating register for signal `\omsp_execution_unit.\mab_lsb' using process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:378$1038'.
  created $adff cell `$procdff$8536' with positive edge clock and positive level reset.
Creating register for signal `\omsp_execution_unit.\mdb_out_nxt' using process `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:364$1028'.
  created $adff cell `$procdff$8537' with positive edge clock and positive level reset.
Creating register for signal `\omsp_sync_reset.\data_sync' using process `\omsp_sync_reset.$proc$/home/vpai/tcl_project/source/omsp_sync_reset.v:70$817'.
  created $adff cell `$procdff$8538' with positive edge clock and positive level reset.
Creating register for signal `\omsp_multiplier.\cycle' using process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:381$806'.
  created $adff cell `$procdff$8539' with positive edge clock and positive level reset.
Creating register for signal `\omsp_multiplier.\acc_sel' using process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:323$802'.
  created $adff cell `$procdff$8540' with positive edge clock and positive level reset.
Creating register for signal `\omsp_multiplier.\sign_sel' using process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:312$800'.
  created $adff cell `$procdff$8541' with positive edge clock and positive level reset.
Creating register for signal `\omsp_multiplier.\sumext_s' using process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:272$786'.
  created $adff cell `$procdff$8542' with positive edge clock and positive level reset.
Creating register for signal `\omsp_multiplier.\reshi' using process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:253$784'.
  created $adff cell `$procdff$8543' with positive edge clock and positive level reset.
Creating register for signal `\omsp_multiplier.\reslo' using process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:224$782'.
  created $adff cell `$procdff$8544' with positive edge clock and positive level reset.
Creating register for signal `\omsp_multiplier.\op2' using process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:197$781'.
  created $adff cell `$procdff$8545' with positive edge clock and positive level reset.
Creating register for signal `\omsp_multiplier.\op1' using process `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:172$780'.
  created $adff cell `$procdff$8546' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\dbg_rd' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:456$730'.
  created $adff cell `$procdff$8547' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\dbg_wr' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:447$723'.
  created $adff cell `$procdff$8548' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\dbg_din_hi' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:437$722'.
  created $adff cell `$procdff$8549' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\dbg_din_lo' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:432$721'.
  created $adff cell `$procdff$8550' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\dbg_addr' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:412$720'.
  created $adff cell `$procdff$8551' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\dbg_bw' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:412$720'.
  created $adff cell `$procdff$8552' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\dbg_state' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:394$713'.
  created $adff cell `$procdff$8553' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\dbg_i2c_sda_out' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:331$673'.
  created $adff cell `$procdff$8554' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\shift_buf' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:305$666'.
  created $adff cell `$procdff$8555' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\i2c_state' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:273$627'.
  created $adff cell `$procdff$8556' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\i2c_active_seq' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:207$598'.
  created $adff cell `$procdff$8557' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\scl_re_dly' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:174$595'.
  created $adff cell `$procdff$8558' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\scl_dly' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:163$589'.
  created $adff cell `$procdff$8559' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\sda_in_dly' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:153$583'.
  created $adff cell `$procdff$8560' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\sda_in_buf' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:131$572'.
  created $adff cell `$procdff$8561' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg_i2c.\scl_buf' using process `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:126$571'.
  created $adff cell `$procdff$8562' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r15' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:567$1213'.
  created $adff cell `$procdff$8563' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r14' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:543$1210'.
  created $adff cell `$procdff$8564' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r13' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:519$1207'.
  created $adff cell `$procdff$8565' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r12' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:495$1204'.
  created $adff cell `$procdff$8566' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r11' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:471$1201'.
  created $adff cell `$procdff$8567' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r10' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:447$1198'.
  created $adff cell `$procdff$8568' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r9' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:423$1195'.
  created $adff cell `$procdff$8569' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r8' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:399$1192'.
  created $adff cell `$procdff$8570' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r7' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:375$1189'.
  created $adff cell `$procdff$8571' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r6' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:351$1186'.
  created $adff cell `$procdff$8572' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r5' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:327$1183'.
  created $adff cell `$procdff$8573' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r4' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:303$1180'.
  created $adff cell `$procdff$8574' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r3' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:275$1177'.
  created $adff cell `$procdff$8575' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r2' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:245$1171'.
  created $adff cell `$procdff$8576' with positive edge clock and positive level reset.
Creating register for signal `\omsp_register_file.\r1' using process `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:162$1152'.
  created $adff cell `$procdff$8577' with positive edge clock and positive level reset.
Creating register for signal `\omsp_watchdog.\wdt_reset' using process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:550$408'.
  created $adff cell `$procdff$8578' with positive edge clock and positive level reset.
Creating register for signal `\omsp_watchdog.\wdtifg' using process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:534$405'.
  created $adff cell `$procdff$8579' with positive edge clock and positive level reset.
Creating register for signal `\omsp_watchdog.\wdtcnt' using process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:502$398'.
  created $adff cell `$procdff$8580' with positive edge clock and positive level reset.
Creating register for signal `\omsp_watchdog.\wdtctl' using process `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:192$384'.
  created $adff cell `$procdff$8581' with positive edge clock and positive level reset.
Creating register for signal `\omsp_clock_module.\dbg_rst_noscan' using process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1243$1931'.
  created $adff cell `$procdff$8582' with positive edge clock and positive level reset.
Creating register for signal `\omsp_clock_module.\smclk_div' using process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1142$1925'.
  created $adff cell `$procdff$8583' with positive edge clock and positive level reset.
Creating register for signal `\omsp_clock_module.\smclk_en' using process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1138$1923'.
  created $adff cell `$procdff$8584' with positive edge clock and positive level reset.
Creating register for signal `\omsp_clock_module.\aclk_en' using process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:954$1907'.
  created $adff cell `$procdff$8585' with positive edge clock and positive level reset.
Creating register for signal `\omsp_clock_module.\aclk_div' using process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:950$1903'.
  created $adff cell `$procdff$8586' with positive edge clock and positive level reset.
Creating register for signal `\omsp_clock_module.\lfxt_clk_dly' using process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:632$1887'.
  created $adff cell `$procdff$8587' with positive edge clock and positive level reset.
Creating register for signal `\omsp_clock_module.\bcsctl2' using process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:287$1877'.
  created $adff cell `$procdff$8588' with positive edge clock and positive level reset.
Creating register for signal `\omsp_clock_module.\bcsctl1' using process `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:248$1869'.
  created $adff cell `$procdff$8589' with positive edge clock and positive level reset.
Creating register for signal `\omsp_sfr.\wdtie' using process `\omsp_sfr.$proc$/home/vpai/tcl_project/source/omsp_sfr.v:182$335'.
  created $adff cell `$procdff$8590' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\dbg_mem_rd_dly' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:788$308'.
  created $adff cell `$procdff$8591' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\mem_state' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:759$281'.
  created $adff cell `$procdff$8592' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\mem_startb' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:726$268'.
  created $adff cell `$procdff$8593' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\mem_burst' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:715$264'.
  created $adff cell `$procdff$8594' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\halt_flag' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:696$254'.
  created $adff cell `$procdff$8595' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\inc_step' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:679$245'.
  created $adff cell `$procdff$8596' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\dbg_rd_rdy' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:646$234'.
  created $adff cell `$procdff$8597' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\mem_cnt' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:446$211'.
  created $adff cell `$procdff$8598' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\mem_addr' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:433$204'.
  created $adff cell `$procdff$8599' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\mem_data' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:414$188'.
  created $adff cell `$procdff$8600' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\mem_start' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:396$183'.
  created $adff cell `$procdff$8601' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\mem_ctl' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:389$182'.
  created $adff cell `$procdff$8602' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\cpu_stat' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:354$178'.
  created $adff cell `$procdff$8603' with positive edge clock and positive level reset.
Creating register for signal `\omsp_dbg.\cpu_ctl' using process `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:328$169'.
  created $adff cell `$procdff$8604' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_alu' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:1000$1810'.
  created $adff cell `$procdff$8605' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\e_state' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:913$1773'.
  created $adff cell `$procdff$8606' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\exec_dext_rdy' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:860$1750'.
  created $adff cell `$procdff$8607' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\exec_src_wr' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:854$1744'.
  created $adff cell `$procdff$8608' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\exec_dst_wr' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:848$1741'.
  created $adff cell `$procdff$8609' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\exec_jmp' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:842$1738'.
  created $adff cell `$procdff$8610' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_sz' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:812$1718'.
  created $adff cell `$procdff$8611' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_bw' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:805$1703'.
  created $adff cell `$procdff$8612' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_ad' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:790$1702'.
  created $adff cell `$procdff$8613' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_as' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:727$1696'.
  created $adff cell `$procdff$8614' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_src_bin' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:654$1685'.
  created $adff cell `$procdff$8615' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_dest_bin' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:636$1679'.
  created $adff cell `$procdff$8616' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_mov' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:621$1678'.
  created $adff cell `$procdff$8617' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_jmp_bin' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:588$1675'.
  created $adff cell `$procdff$8618' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_so' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:565$1674'.
  created $adff cell `$procdff$8619' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_type' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:540$1671'.
  created $adff cell `$procdff$8620' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_dext' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:501$1656'.
  created $adff cell `$procdff$8621' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_sext' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:474$1649'.
  created $adff cell `$procdff$8622' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\pmem_busy' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:432$1623'.
  created $adff cell `$procdff$8623' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\pc' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:426$1622'.
  created $adff cell `$procdff$8624' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\irq_num' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415'.
  created $adff cell `$procdff$8625' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415'.
  created $adff cell `$procdff$8626' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\irq_all' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415'.
  created $adff cell `$procdff$8627' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\ii' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415'.
  created $adff cell `$procdff$8628' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\inst_irq_rst' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:302$1402'.
  created $adff cell `$procdff$8629' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\cpu_halt_st' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:287$1399'.
  created $adff cell `$procdff$8630' with positive edge clock and positive level reset.
Creating register for signal `\omsp_frontend.\i_state' using process `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:276$1384'.
  created $adff cell `$procdff$8631' with positive edge clock and positive level reset.
Creating register for signal `\omsp_mem_backbone.\ext_mem_din_sel' using process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:375$69'.
  created $adff cell `$procdff$8632' with positive edge clock and positive level reset.
Creating register for signal `\omsp_mem_backbone.\eu_mdb_in_sel' using process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:360$66'.
  created $adff cell `$procdff$8633' with positive edge clock and positive level reset.
Creating register for signal `\omsp_mem_backbone.\pmem_dout_bckup_sel' using process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:346$64'.
  created $adff cell `$procdff$8634' with positive edge clock and positive level reset.
Creating register for signal `\omsp_mem_backbone.\pmem_dout_bckup' using process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:336$63'.
  created $adff cell `$procdff$8635' with positive edge clock and positive level reset.
Creating register for signal `\omsp_mem_backbone.\fe_pmem_en_dly' using process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:318$55'.
  created $adff cell `$procdff$8636' with positive edge clock and positive level reset.
Creating register for signal `\omsp_mem_backbone.\per_dout_val' using process `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:306$54'.
  created $adff cell `$procdff$8637' with positive edge clock and positive level reset.

26.2.8. Executing PROC_CLEAN pass (remove empty switches from decision trees).
Removing empty process `omsp_sync_cell.$proc$/home/vpai/tcl_project/source/omsp_sync_cell.v:72$1048'.
Found and cleaned up 1 empty switch in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:407$1046'.
Removing empty process `omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:407$1046'.
Found and cleaned up 2 empty switches in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:392$1044'.
Removing empty process `omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:392$1044'.
Removing empty process `omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:387$1042'.
Found and cleaned up 1 empty switch in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:378$1038'.
Removing empty process `omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:378$1038'.
Found and cleaned up 2 empty switches in `\omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:364$1028'.
Removing empty process `omsp_execution_unit.$proc$/home/vpai/tcl_project/source/omsp_execution_unit.v:364$1028'.
Removing empty process `omsp_sync_reset.$proc$/home/vpai/tcl_project/source/omsp_sync_reset.v:70$817'.
Removing empty process `omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:381$806'.
Found and cleaned up 1 empty switch in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:323$802'.
Removing empty process `omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:323$802'.
Found and cleaned up 1 empty switch in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:312$800'.
Removing empty process `omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:312$800'.
Found and cleaned up 2 empty switches in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:272$786'.
Removing empty process `omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:272$786'.
Found and cleaned up 3 empty switches in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:253$784'.
Removing empty process `omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:253$784'.
Found and cleaned up 3 empty switches in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:224$782'.
Removing empty process `omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:224$782'.
Found and cleaned up 1 empty switch in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:197$781'.
Removing empty process `omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:197$781'.
Found and cleaned up 1 empty switch in `\omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:172$780'.
Removing empty process `omsp_multiplier.$proc$/home/vpai/tcl_project/source/omsp_multiplier.v:172$780'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:456$730'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:447$723'.
Found and cleaned up 2 empty switches in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:437$722'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:437$722'.
Found and cleaned up 1 empty switch in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:432$721'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:432$721'.
Found and cleaned up 2 empty switches in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:412$720'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:412$720'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:394$713'.
Found and cleaned up 1 empty switch in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:357$681'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:357$681'.
Found and cleaned up 1 empty switch in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:331$673'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:331$673'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:305$666'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:273$627'.
Found and cleaned up 1 empty switch in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:239$604'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:239$604'.
Found and cleaned up 2 empty switches in `\omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:207$598'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:207$598'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:174$595'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:163$589'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:153$583'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:131$572'.
Removing empty process `omsp_dbg_i2c.$proc$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:126$571'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:567$1213'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:567$1213'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:543$1210'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:543$1210'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:519$1207'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:519$1207'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:495$1204'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:495$1204'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:471$1201'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:471$1201'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:447$1198'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:447$1198'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:423$1195'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:423$1195'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:399$1192'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:399$1192'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:375$1189'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:375$1189'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:351$1186'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:351$1186'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:327$1183'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:327$1183'.
Found and cleaned up 2 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:303$1180'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:303$1180'.
Found and cleaned up 1 empty switch in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:275$1177'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:275$1177'.
Found and cleaned up 1 empty switch in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:245$1171'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:245$1171'.
Found and cleaned up 3 empty switches in `\omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:162$1152'.
Removing empty process `omsp_register_file.$proc$/home/vpai/tcl_project/source/omsp_register_file.v:162$1152'.
Found and cleaned up 1 empty switch in `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
Removing empty process `omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$550'.
Found and cleaned up 1 empty switch in `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
Removing empty process `omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$538'.
Found and cleaned up 1 empty switch in `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
Removing empty process `omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$526'.
Found and cleaned up 1 empty switch in `\omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
Removing empty process `omsp_alu.$proc$/home/vpai/tcl_project/source/omsp_alu.v:92$514'.
Removing empty process `omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:550$408'.
Found and cleaned up 2 empty switches in `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:534$405'.
Removing empty process `omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:534$405'.
Found and cleaned up 1 empty switch in `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:512$399'.
Removing empty process `omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:512$399'.
Found and cleaned up 2 empty switches in `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:502$398'.
Removing empty process `omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:502$398'.
Found and cleaned up 1 empty switch in `\omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:192$384'.
Removing empty process `omsp_watchdog.$proc$/home/vpai/tcl_project/source/omsp_watchdog.v:192$384'.
Removing empty process `omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1243$1931'.
Found and cleaned up 1 empty switch in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1142$1925'.
Removing empty process `omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1142$1925'.
Removing empty process `omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:1138$1923'.
Removing empty process `omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:954$1907'.
Found and cleaned up 1 empty switch in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:950$1903'.
Removing empty process `omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:950$1903'.
Removing empty process `omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:632$1887'.
Found and cleaned up 1 empty switch in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:287$1877'.
Removing empty process `omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:287$1877'.
Found and cleaned up 1 empty switch in `\omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:248$1869'.
Removing empty process `omsp_clock_module.$proc$/home/vpai/tcl_project/source/omsp_clock_module.v:248$1869'.
Found and cleaned up 1 empty switch in `\omsp_sfr.$proc$/home/vpai/tcl_project/source/omsp_sfr.v:182$335'.
Removing empty process `omsp_sfr.$proc$/home/vpai/tcl_project/source/omsp_sfr.v:182$335'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:788$308'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:759$281'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:746$276'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:746$276'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:726$268'.
Found and cleaned up 2 empty switches in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:715$264'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:715$264'.
Found and cleaned up 2 empty switches in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:696$254'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:696$254'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:679$245'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:679$245'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:646$234'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:646$234'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:446$211'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:446$211'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:433$204'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:433$204'.
Found and cleaned up 3 empty switches in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:414$188'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:414$188'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:396$183'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:389$182'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:389$182'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:354$178'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:354$178'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:328$169'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:328$169'.
Found and cleaned up 1 empty switch in `\omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:240$166'.
Removing empty process `omsp_dbg.$proc$/home/vpai/tcl_project/source/omsp_dbg.v:240$166'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1846'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1846'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1841'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1841'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1836'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1836'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1831'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1831'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1826'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:170$1826'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1821'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1821'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1816'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:179$1816'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:161$1811'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:161$1811'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:1000$1810'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:1000$1810'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:913$1773'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:879$1763'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:879$1763'.
Found and cleaned up 2 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:860$1750'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:860$1750'.
Found and cleaned up 2 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:854$1744'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:854$1744'.
Found and cleaned up 2 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:848$1741'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:848$1741'.
Found and cleaned up 2 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:842$1738'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:842$1738'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:812$1718'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:812$1718'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:805$1703'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:805$1703'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:790$1702'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:790$1702'.
Found and cleaned up 6 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:768$1698'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:768$1698'.
Found and cleaned up 6 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:742$1697'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:742$1697'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:727$1696'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:727$1696'.
Found and cleaned up 8 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:691$1691'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:691$1691'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:654$1685'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:654$1685'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:636$1679'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:636$1679'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:621$1678'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:621$1678'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:588$1675'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:588$1675'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:565$1674'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:565$1674'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:540$1671'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:540$1671'.
Found and cleaned up 2 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:501$1656'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:501$1656'.
Found and cleaned up 3 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:474$1649'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:474$1649'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:432$1623'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:426$1622'.
Found and cleaned up 64 empty switches in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:334$1415'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:302$1402'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:302$1402'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:287$1399'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:276$1384'.
Found and cleaned up 1 empty switch in `\omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:254$1358'.
Removing empty process `omsp_frontend.$proc$/home/vpai/tcl_project/source/omsp_frontend.v:254$1358'.
Removing empty process `omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:375$69'.
Removing empty process `omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:360$66'.
Found and cleaned up 2 empty switches in `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:346$64'.
Removing empty process `omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:346$64'.
Found and cleaned up 1 empty switch in `\omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:336$63'.
Removing empty process `omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:336$63'.
Removing empty process `omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:318$55'.
Removing empty process `omsp_mem_backbone.$proc$/home/vpai/tcl_project/source/omsp_mem_backbone.v:306$54'.
Cleaned up 210 empty switches.

26.3. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_sync_cell.
Optimizing module omsp_execution_unit.
<suppressed ~5 debug messages>
Optimizing module omsp_sync_reset.
Optimizing module omsp_multiplier.
<suppressed ~1 debug messages>
Optimizing module omsp_dbg_i2c.
<suppressed ~18 debug messages>
Optimizing module omsp_register_file.
<suppressed ~6 debug messages>
Optimizing module openMSP430.
Optimizing module omsp_alu.
<suppressed ~2 debug messages>
Optimizing module omsp_watchdog.
<suppressed ~3 debug messages>
Optimizing module omsp_clock_module.
<suppressed ~23 debug messages>
Optimizing module omsp_sfr.
<suppressed ~8 debug messages>
Optimizing module omsp_dbg.
<suppressed ~18 debug messages>
Optimizing module omsp_frontend.
<suppressed ~179 debug messages>
Optimizing module omsp_mem_backbone.

26.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \openMSP430..
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Removed 30 unused cells and 1173 unused wires.
<suppressed ~53 debug messages>

26.5. Executing CHECK pass (checking for obvious problems).
checking module omsp_alu..
checking module omsp_clock_module..
checking module omsp_dbg..
checking module omsp_dbg_i2c..
checking module omsp_execution_unit..
checking module omsp_frontend..
checking module omsp_mem_backbone..
checking module omsp_multiplier..
checking module omsp_register_file..
checking module omsp_sfr..
checking module omsp_sync_cell..
checking module omsp_sync_reset..
checking module omsp_watchdog..
checking module openMSP430..
found and reported 0 problems.

26.6. Executing OPT pass (performing simple optimizations).

26.6.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.6.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
<suppressed ~12 debug messages>
Finding identical cells in module `\omsp_clock_module'.
<suppressed ~6 debug messages>
Finding identical cells in module `\omsp_dbg'.
<suppressed ~39 debug messages>
Finding identical cells in module `\omsp_dbg_i2c'.
<suppressed ~75 debug messages>
Finding identical cells in module `\omsp_execution_unit'.
<suppressed ~234 debug messages>
Finding identical cells in module `\omsp_frontend'.
<suppressed ~16260 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
<suppressed ~6 debug messages>
Finding identical cells in module `\omsp_multiplier'.
<suppressed ~3 debug messages>
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
<suppressed ~3 debug messages>
Finding identical cells in module `\openMSP430'.
Removed a total of 5546 cells.

26.6.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \omsp_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_clock_module..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_execution_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_frontend..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
    dead port 1/2 on $mux $procmux$7899.
    dead port 1/2 on $mux $procmux$7902.
    dead port 2/2 on $mux $procmux$7905.
    dead port 2/2 on $mux $procmux$7911.
    dead port 1/2 on $mux $procmux$7914.
    dead port 2/2 on $mux $procmux$7917.
    dead port 1/2 on $mux $procmux$7923.
    dead port 2/2 on $mux $procmux$7926.
    dead port 2/2 on $mux $procmux$7932.
    dead port 2/2 on $mux $procmux$7935.
    dead port 2/2 on $mux $procmux$7941.
    dead port 1/2 on $mux $procmux$7950.
    dead port 1/2 on $mux $procmux$7953.
    dead port 1/2 on $mux $procmux$7956.
    dead port 1/2 on $mux $procmux$7959.
    dead port 1/2 on $mux $procmux$7962.
    dead port 1/2 on $mux $procmux$7968.
    dead port 1/2 on $mux $procmux$7971.
    dead port 1/2 on $mux $procmux$7974.
    dead port 1/2 on $mux $procmux$7977.
    dead port 1/2 on $mux $procmux$7983.
    dead port 1/2 on $mux $procmux$7986.
    dead port 1/2 on $mux $procmux$7989.
    dead port 1/2 on $mux $procmux$7995.
    dead port 1/2 on $mux $procmux$7998.
    dead port 1/2 on $mux $procmux$8004.
    dead port 1/2 on $mux $procmux$8017.
    dead port 1/2 on $mux $procmux$8020.
    dead port 1/2 on $mux $procmux$8023.
    dead port 1/2 on $mux $procmux$8026.
    dead port 2/2 on $mux $procmux$8034.
    dead port 1/2 on $mux $procmux$8037.
    dead port 1/2 on $mux $procmux$8040.
    dead port 1/2 on $mux $procmux$8043.
    dead port 1/2 on $mux $procmux$8049.
    dead port 1/2 on $mux $procmux$8052.
    dead port 1/2 on $mux $procmux$8055.
    dead port 2/2 on $mux $procmux$8063.
    dead port 1/2 on $mux $procmux$8066.
    dead port 1/2 on $mux $procmux$8069.
    dead port 1/2 on $mux $procmux$8075.
    dead port 1/2 on $mux $procmux$8078.
    dead port 2/2 on $mux $procmux$8086.
    dead port 1/2 on $mux $procmux$8089.
    dead port 1/2 on $mux $procmux$8095.
    dead port 2/2 on $mux $procmux$8129.
Running muxtree optimizer on module \omsp_mem_backbone..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_register_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sfr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sync_cell..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_reset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 46 multiplexer ports.
<suppressed ~298 debug messages>

26.6.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \omsp_alu.
  Optimizing cells in module \omsp_clock_module.
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_clock_module.v:184$1861: { \per_we [0] \per_we [1] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_clock_module.v:948$1898: { \aclk_div [0] \aclk_div [1] \aclk_div [2] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_clock_module.v:947$1897: { \aclk_div [0] \aclk_div [1] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_clock_module.v:1136$1918: { \smclk_div [0] \smclk_div [1] \smclk_div [2] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_clock_module.v:1135$1917: { \smclk_div [0] \smclk_div [1] }
  Optimizing cells in module \omsp_clock_module.
  Optimizing cells in module \omsp_dbg.
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_dbg.v:711$258: { \mem_cnt [0] \mem_cnt [1] \mem_cnt [2] \mem_cnt [3] \mem_cnt [4] \mem_cnt [5] \mem_cnt [6] \mem_cnt [7] \mem_cnt [8] \mem_cnt [9] \mem_cnt [10] \mem_cnt [11] \mem_cnt [12] \mem_cnt [13] \mem_cnt [14] \mem_cnt [15] }
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_dbg.v:426$189: { \dbg_mem_wr [0] \dbg_mem_wr [1] }
    New ctrl vector for $pmux cell $procmux$2134: { $eq$/home/vpai/tcl_project/source/omsp_dbg.v:764$282_Y $procmux$2137_CMP $auto$opt_reduce.cc:132:opt_mux$8639 }
  Optimizing cells in module \omsp_dbg.
  Optimizing cells in module \omsp_dbg_i2c.
  Optimizing cells in module \omsp_execution_unit.
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_frontend.v:724$1695: { \inst_as_nxt [7] \inst_as_nxt [8] \inst_as_nxt [9] \inst_as_nxt [10] \inst_as_nxt [11] \inst_as_nxt [12] }
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_frontend.v:307$1403: { \irq [0] \irq [1] \irq [2] \irq [3] \irq [4] \irq [5] \irq [6] \irq [7] \irq [8] \irq [9] \irq [10] \irq [11] \irq [12] \irq [13] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1611: { $64$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1610 [0] $64$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1610 [1] $64$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1610 [2] $64$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1610 [3] $64$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1610 [4] $64$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1610 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1608: { $63$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1607 [0] $63$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1607 [1] $63$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1607 [2] $63$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1607 [3] $63$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1607 [4] $63$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1607 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1605: { $62$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1604 [0] $62$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1604 [1] $62$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1604 [2] $62$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1604 [3] $62$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1604 [4] $62$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1604 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1602: { $61$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1601 [0] $61$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1601 [1] $61$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1601 [2] $61$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1601 [3] $61$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1601 [4] $61$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1601 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1599: { $60$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1598 [0] $60$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1598 [1] $60$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1598 [2] $60$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1598 [3] $60$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1598 [4] $60$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1598 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1596: { $59$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1595 [0] $59$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1595 [1] $59$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1595 [2] $59$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1595 [3] $59$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1595 [4] $59$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1595 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1593: { $58$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1592 [0] $58$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1592 [1] $58$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1592 [2] $58$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1592 [3] $58$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1592 [4] $58$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1592 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1590: { $57$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1589 [0] $57$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1589 [1] $57$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1589 [2] $57$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1589 [3] $57$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1589 [4] $57$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1589 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1587: { $56$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1586 [0] $56$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1586 [1] $56$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1586 [2] $56$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1586 [3] $56$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1586 [4] $56$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1586 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1584: { $55$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1583 [0] $55$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1583 [1] $55$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1583 [2] $55$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1583 [3] $55$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1583 [4] $55$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1583 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1581: { $54$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1580 [0] $54$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1580 [1] $54$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1580 [2] $54$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1580 [3] $54$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1580 [4] $54$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1580 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1578: { $53$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1577 [0] $53$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1577 [1] $53$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1577 [2] $53$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1577 [3] $53$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1577 [4] $53$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1577 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1575: { $52$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1574 [0] $52$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1574 [1] $52$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1574 [2] $52$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1574 [3] $52$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1574 [4] $52$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1574 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1572: { $51$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1571 [0] $51$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1571 [1] $51$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1571 [2] $51$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1571 [3] $51$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1571 [4] $51$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1571 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1569: { $50$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1568 [0] $50$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1568 [1] $50$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1568 [2] $50$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1568 [3] $50$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1568 [4] $50$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1568 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1566: { $49$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1565 [0] $49$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1565 [1] $49$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1565 [2] $49$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1565 [3] $49$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1565 [4] $49$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1565 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1563: { $48$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1562 [0] $48$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1562 [1] $48$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1562 [2] $48$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1562 [3] $48$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1562 [4] $48$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1562 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1560: { $47$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1559 [0] $47$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1559 [1] $47$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1559 [2] $47$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1559 [3] $47$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1559 [4] $47$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1559 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1557: { $46$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1556 [0] $46$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1556 [1] $46$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1556 [2] $46$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1556 [3] $46$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1556 [4] $46$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1556 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1554: { $45$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1553 [0] $45$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1553 [1] $45$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1553 [2] $45$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1553 [3] $45$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1553 [4] $45$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1553 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1551: { $44$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1550 [0] $44$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1550 [1] $44$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1550 [2] $44$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1550 [3] $44$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1550 [4] $44$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1550 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1548: { $43$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1547 [0] $43$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1547 [1] $43$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1547 [2] $43$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1547 [3] $43$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1547 [4] $43$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1547 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1545: { $42$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1544 [0] $42$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1544 [1] $42$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1544 [2] $42$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1544 [3] $42$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1544 [4] $42$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1544 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1542: { $41$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1541 [0] $41$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1541 [1] $41$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1541 [2] $41$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1541 [3] $41$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1541 [4] $41$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1541 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1539: { $40$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1538 [0] $40$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1538 [1] $40$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1538 [2] $40$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1538 [3] $40$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1538 [4] $40$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1538 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1536: { $39$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1535 [0] $39$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1535 [1] $39$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1535 [2] $39$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1535 [3] $39$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1535 [4] $39$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1535 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1533: { $38$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1532 [0] $38$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1532 [1] $38$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1532 [2] $38$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1532 [3] $38$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1532 [4] $38$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1532 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1530: { $37$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1529 [0] $37$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1529 [1] $37$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1529 [2] $37$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1529 [3] $37$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1529 [4] $37$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1529 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1527: { $36$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1526 [0] $36$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1526 [1] $36$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1526 [2] $36$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1526 [3] $36$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1526 [4] $36$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1526 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1524: { $35$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1523 [0] $35$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1523 [1] $35$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1523 [2] $35$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1523 [3] $35$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1523 [4] $35$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1523 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1521: { $34$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1520 [0] $34$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1520 [1] $34$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1520 [2] $34$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1520 [3] $34$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1520 [4] $34$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1520 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1518: { $33$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1517 [0] $33$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1517 [1] $33$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1517 [2] $33$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1517 [3] $33$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1517 [4] $33$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1517 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1515: { $32$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1514 [0] $32$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1514 [1] $32$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1514 [2] $32$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1514 [3] $32$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1514 [4] $32$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1514 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1512: { $31$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1511 [0] $31$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1511 [1] $31$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1511 [2] $31$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1511 [3] $31$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1511 [4] $31$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1511 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1509: { $30$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1508 [0] $30$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1508 [1] $30$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1508 [2] $30$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1508 [3] $30$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1508 [4] $30$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1508 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1506: { $29$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1505 [0] $29$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1505 [1] $29$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1505 [2] $29$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1505 [3] $29$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1505 [4] $29$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1505 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1503: { $28$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1502 [0] $28$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1502 [1] $28$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1502 [2] $28$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1502 [3] $28$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1502 [4] $28$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1502 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1500: { $27$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1499 [0] $27$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1499 [1] $27$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1499 [2] $27$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1499 [3] $27$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1499 [4] $27$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1499 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1497: { $26$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1496 [0] $26$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1496 [1] $26$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1496 [2] $26$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1496 [3] $26$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1496 [4] $26$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1496 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1494: { $25$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1493 [0] $25$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1493 [1] $25$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1493 [2] $25$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1493 [3] $25$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1493 [4] $25$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1493 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1491: { $24$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1490 [0] $24$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1490 [1] $24$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1490 [2] $24$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1490 [3] $24$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1490 [4] $24$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1490 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1488: { $23$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1487 [0] $23$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1487 [1] $23$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1487 [2] $23$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1487 [3] $23$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1487 [4] $23$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1487 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1485: { $22$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1484 [0] $22$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1484 [1] $22$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1484 [2] $22$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1484 [3] $22$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1484 [4] $22$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1484 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1482: { $21$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1481 [0] $21$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1481 [1] $21$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1481 [2] $21$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1481 [3] $21$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1481 [4] $21$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1481 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1479: { $20$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1478 [0] $20$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1478 [1] $20$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1478 [2] $20$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1478 [3] $20$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1478 [4] $20$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1478 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1476: { $19$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1475 [0] $19$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1475 [1] $19$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1475 [2] $19$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1475 [3] $19$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1475 [4] $19$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1475 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1473: { $18$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1472 [0] $18$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1472 [1] $18$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1472 [2] $18$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1472 [3] $18$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1472 [4] $18$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1472 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1470: { $17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469 [0] $17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469 [1] $17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469 [2] $17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469 [3] $17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469 [4] $17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1467: { $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [0] $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [1] $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [2] $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [3] $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [4] $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1464: { $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [0] $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [1] $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [2] $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [3] $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [4] $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1461: { $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [0] $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [1] $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [2] $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [3] $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [4] $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1458: { $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [0] $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [1] $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [2] $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [3] $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [4] $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1455: { $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [0] $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [1] $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [2] $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [3] $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [4] $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1452: { $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [0] $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [1] $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [2] $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [3] $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [4] $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1449: { $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [0] $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [1] $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [2] $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [3] $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [4] $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1446: { $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [0] $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [1] $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [2] $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [3] $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [4] $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1443: { $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [0] $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [1] $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [2] $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [3] $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [4] $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1440: { $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [0] $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [1] $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [2] $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [3] $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [4] $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1437: { $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [0] $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [1] $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [2] $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [3] $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [4] $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1434: { $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [0] $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [1] $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [2] $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [3] $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [4] $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1431: { $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [0] $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [1] $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [2] $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [3] $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [4] $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [5] }
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1428: { $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427 [0] $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427 [1] $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427 [2] $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427 [3] $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427 [4] $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427 [5] }
    New ctrl vector for $pmux cell $procmux$3360: { $procmux$3286_CMP $auto$opt_reduce.cc:132:opt_mux$8641 }
    New ctrl vector for $pmux cell $procmux$2680: { $procmux$2471_CMP $auto$opt_reduce.cc:132:opt_mux$8643 }
    New ctrl vector for $pmux cell $procmux$5316: { $procmux$3742_CMP $auto$opt_reduce.cc:132:opt_mux$8645 }
    New ctrl vector for $pmux cell $procmux$7396: { $procmux$3715_CMP $auto$opt_reduce.cc:132:opt_mux$8647 }
    New ctrl vector for $pmux cell $procmux$2391: { $procmux$2191_CMP $auto$opt_reduce.cc:132:opt_mux$8649 }
    New ctrl vector for $pmux cell $procmux$3003: { $procmux$3005_CMP $auto$opt_reduce.cc:132:opt_mux$8651 }
    New ctrl vector for $pmux cell $procmux$5836: { $procmux$3697_CMP $auto$opt_reduce.cc:132:opt_mux$8653 }
    New ctrl vector for $pmux cell $procmux$6876: { $procmux$3703_CMP $auto$opt_reduce.cc:132:opt_mux$8655 }
    New ctrl vector for $pmux cell $procmux$3377: { $procmux$3288_CMP $auto$opt_reduce.cc:132:opt_mux$8657 }
    New ctrl vector for $pmux cell $procmux$6356: { $procmux$3729_CMP $auto$opt_reduce.cc:132:opt_mux$8659 }
    New ctrl vector for $pmux cell $procmux$4341: { $procmux$3712_CMP $auto$opt_reduce.cc:132:opt_mux$8661 }
    New ctrl vector for $pmux cell $procmux$3020: { $procmux$3006_CMP $auto$opt_reduce.cc:132:opt_mux$8663 }
    New ctrl vector for $pmux cell $procmux$3394: { $procmux$3290_CMP $auto$opt_reduce.cc:132:opt_mux$8665 }
    New ctrl vector for $pmux cell $procmux$2697: { $procmux$2467_CMP $auto$opt_reduce.cc:132:opt_mux$8667 }
    New ctrl vector for $pmux cell $procmux$4861: { $procmux$3728_CMP $auto$opt_reduce.cc:132:opt_mux$8669 }
    New ctrl vector for $pmux cell $procmux$3037: { $procmux$3008_CMP $auto$opt_reduce.cc:132:opt_mux$8671 }
    New ctrl vector for $pmux cell $procmux$2408: { $procmux$2199_CMP $auto$opt_reduce.cc:132:opt_mux$8673 }
    New ctrl vector for $pmux cell $procmux$3886: { $procmux$3698_CMP $auto$opt_reduce.cc:132:opt_mux$8675 }
    New ctrl vector for $pmux cell $procmux$3411: { $auto$opt_reduce.cc:132:opt_mux$8677 $procmux$3276_CMP }
    New ctrl vector for $pmux cell $procmux$2714: { $procmux$2475_CMP $auto$opt_reduce.cc:132:opt_mux$8679 }
    New ctrl vector for $pmux cell $procmux$7461: { $procmux$3731_CMP $auto$opt_reduce.cc:132:opt_mux$8681 }
    New ctrl vector for $pmux cell $procmux$5381: { $procmux$3744_CMP $auto$opt_reduce.cc:132:opt_mux$8683 }
    New ctrl vector for $pmux cell $procmux$3054: { $procmux$3010_CMP $auto$opt_reduce.cc:132:opt_mux$8685 }
    New ctrl vector for $pmux cell $procmux$3428: { $procmux$3281_CMP $auto$opt_reduce.cc:132:opt_mux$8687 }
    New ctrl vector for $pmux cell $procmux$2425: { $procmux$2195_CMP $auto$opt_reduce.cc:132:opt_mux$8689 }
    New ctrl vector for $pmux cell $procmux$6941: { $procmux$3711_CMP $auto$opt_reduce.cc:132:opt_mux$8691 }
    New ctrl vector for $pmux cell $procmux$5901: { $procmux$3701_CMP $auto$opt_reduce.cc:132:opt_mux$8693 }
    New ctrl vector for $pmux cell $procmux$2731: { $procmux$2189_CMP $auto$opt_reduce.cc:132:opt_mux$8695 }
    New ctrl vector for $pmux cell $procmux$6421: { $procmux$3733_CMP $auto$opt_reduce.cc:132:opt_mux$8697 }
    New ctrl vector for $pmux cell $procmux$4406: { $procmux$3714_CMP $auto$opt_reduce.cc:132:opt_mux$8699 }
    New ctrl vector for $pmux cell $procmux$3071: { $procmux$3012_CMP $auto$opt_reduce.cc:132:opt_mux$8701 }
    New ctrl vector for $pmux cell $procmux$3445: { $procmux$3285_CMP $auto$opt_reduce.cc:132:opt_mux$8703 }
    New ctrl vector for $pmux cell $procmux$2442: { $procmux$2203_CMP $auto$opt_reduce.cc:132:opt_mux$8705 }
    New ctrl vector for $pmux cell $procmux$2748: { $procmux$2190_CMP $auto$opt_reduce.cc:132:opt_mux$8707 }
    New ctrl vector for $pmux cell $procmux$3088: { $procmux$3014_CMP $auto$opt_reduce.cc:132:opt_mux$8709 }
    New ctrl vector for $pmux cell $procmux$3462: { $procmux$3289_CMP $auto$opt_reduce.cc:132:opt_mux$8711 }
    New ctrl vector for $pmux cell $procmux$2187: { $procmux$2189_CMP $auto$opt_reduce.cc:132:opt_mux$8713 }
    New ctrl vector for $pmux cell $procmux$4926: { $procmux$3730_CMP $auto$opt_reduce.cc:132:opt_mux$8715 }
    New ctrl vector for $pmux cell $procmux$2459: { $procmux$2461_CMP $auto$opt_reduce.cc:132:opt_mux$8717 }
    New ctrl vector for $pmux cell $procmux$3951: { $procmux$3700_CMP $auto$opt_reduce.cc:132:opt_mux$8719 }
    New ctrl vector for $pmux cell $procmux$2765: { $procmux$2192_CMP $auto$opt_reduce.cc:132:opt_mux$8721 }
    New ctrl vector for $pmux cell $procmux$3479: { $procmux$3279_CMP $auto$opt_reduce.cc:132:opt_mux$8723 }
    New ctrl vector for $pmux cell $procmux$3105: { $procmux$3016_CMP $auto$opt_reduce.cc:132:opt_mux$8725 }
    New ctrl vector for $pmux cell $procmux$7526: { $procmux$3747_CMP $auto$opt_reduce.cc:132:opt_mux$8727 }
    New ctrl vector for $pmux cell $procmux$5446: { $procmux$3746_CMP $auto$opt_reduce.cc:132:opt_mux$8729 }
    New ctrl vector for $pmux cell $procmux$2476: { $procmux$2462_CMP $auto$opt_reduce.cc:132:opt_mux$8731 }
    New ctrl vector for $pmux cell $procmux$7006: { $procmux$3719_CMP $auto$opt_reduce.cc:132:opt_mux$8733 }
    New ctrl vector for $pmux cell $procmux$2782: { $procmux$2194_CMP $auto$opt_reduce.cc:132:opt_mux$8735 }
    New ctrl vector for $pmux cell $procmux$5966: { $procmux$3705_CMP $auto$opt_reduce.cc:132:opt_mux$8737 }
    New ctrl vector for $pmux cell $procmux$3496: { $procmux$3287_CMP $auto$opt_reduce.cc:132:opt_mux$8739 }
    New ctrl vector for $pmux cell $procmux$6486: { $procmux$3737_CMP $auto$opt_reduce.cc:132:opt_mux$8741 }
    New ctrl vector for $pmux cell $procmux$3122: { $procmux$3018_CMP $auto$opt_reduce.cc:132:opt_mux$8743 }
    New ctrl vector for $pmux cell $procmux$2204: { $procmux$2190_CMP $auto$opt_reduce.cc:132:opt_mux$8745 }
    New ctrl vector for $pmux cell $procmux$4471: { $procmux$3716_CMP $auto$opt_reduce.cc:132:opt_mux$8747 }
    New ctrl vector for $pmux cell $procmux$2493: { $procmux$2464_CMP $auto$opt_reduce.cc:132:opt_mux$8749 }
    New ctrl vector for $pmux cell $procmux$3513: { $procmux$3283_CMP $auto$opt_reduce.cc:132:opt_mux$8751 }
    New ctrl vector for $pmux cell $procmux$2799: { $procmux$2196_CMP $auto$opt_reduce.cc:132:opt_mux$8753 }
    New ctrl vector for $pmux cell $procmux$3139: { $auto$opt_reduce.cc:132:opt_mux$8755 $procmux$3004_CMP }
    New ctrl vector for $pmux cell $procmux$2221: { $procmux$2192_CMP $auto$opt_reduce.cc:132:opt_mux$8757 }
    New ctrl vector for $pmux cell $procmux$2510: { $procmux$2466_CMP $auto$opt_reduce.cc:132:opt_mux$8759 }
    New ctrl vector for $pmux cell $procmux$3530: { $procmux$3291_CMP $auto$opt_reduce.cc:132:opt_mux$8761 }
    New ctrl vector for $pmux cell $procmux$4991: { $procmux$3732_CMP $auto$opt_reduce.cc:132:opt_mux$8763 }
    New ctrl vector for $pmux cell $procmux$2816: { $procmux$2198_CMP $auto$opt_reduce.cc:132:opt_mux$8765 }
    New ctrl vector for $pmux cell $procmux$3156: { $procmux$3009_CMP $auto$opt_reduce.cc:132:opt_mux$8767 }
    New ctrl vector for $pmux cell $procmux$4016: { $procmux$3702_CMP $auto$opt_reduce.cc:132:opt_mux$8769 }
    New ctrl vector for $pmux cell $procmux$7591: { $procmux$3707_CMP $auto$opt_reduce.cc:132:opt_mux$8771 }
    New ctrl vector for $pmux cell $procmux$2238: { $procmux$2194_CMP $auto$opt_reduce.cc:132:opt_mux$8773 }
    New ctrl vector for $pmux cell $procmux$5511: { $procmux$3748_CMP $auto$opt_reduce.cc:132:opt_mux$8775 }
    New ctrl vector for $pmux cell $procmux$3547: { $procmux$3549_CMP $auto$opt_reduce.cc:132:opt_mux$8777 }
    New ctrl vector for $pmux cell $procmux$7071: { $procmux$3727_CMP $auto$opt_reduce.cc:132:opt_mux$8779 }
    New ctrl vector for $pmux cell $procmux$6031: { $procmux$3709_CMP $auto$opt_reduce.cc:132:opt_mux$8781 }
    New ctrl vector for $pmux cell $procmux$3556: { $procmux$3550_CMP $auto$opt_reduce.cc:132:opt_mux$8783 }
    New ctrl vector for $pmux cell $procmux$6551: { $procmux$3741_CMP $auto$opt_reduce.cc:132:opt_mux$8785 }
    New ctrl vector for $pmux cell $procmux$2527: { $procmux$2468_CMP $auto$opt_reduce.cc:132:opt_mux$8787 }
    New ctrl vector for $pmux cell $procmux$3173: { $procmux$3013_CMP $auto$opt_reduce.cc:132:opt_mux$8789 }
    New ctrl vector for $pmux cell $procmux$2833: { $procmux$2200_CMP $auto$opt_reduce.cc:132:opt_mux$8791 }
    New ctrl vector for $pmux cell $procmux$3565: { $procmux$3552_CMP $auto$opt_reduce.cc:132:opt_mux$8793 }
    New ctrl vector for $pmux cell $procmux$4536: { $procmux$3718_CMP $auto$opt_reduce.cc:132:opt_mux$8795 }
    New ctrl vector for $pmux cell $procmux$3574: { $procmux$3554_CMP $auto$opt_reduce.cc:132:opt_mux$8797 }
    New ctrl vector for $pmux cell $procmux$2255: { $procmux$2196_CMP $auto$opt_reduce.cc:132:opt_mux$8799 }
    New ctrl vector for $pmux cell $procmux$3190: { $procmux$3017_CMP $auto$opt_reduce.cc:132:opt_mux$8801 }
    New ctrl vector for $pmux cell $procmux$2544: { $procmux$2470_CMP $auto$opt_reduce.cc:132:opt_mux$8803 }
    New ctrl vector for $pmux cell $procmux$2850: { $procmux$2202_CMP $auto$opt_reduce.cc:132:opt_mux$8805 }
    New ctrl vector for $pmux cell $procmux$3583: { $auto$opt_reduce.cc:132:opt_mux$8807 $procmux$3548_CMP }
    New ctrl vector for $pmux cell $procmux$3592: { $procmux$3553_CMP $auto$opt_reduce.cc:132:opt_mux$8809 }
    New ctrl vector for $pmux cell $procmux$5056: { $procmux$3734_CMP $auto$opt_reduce.cc:132:opt_mux$8811 }
    New ctrl vector for $pmux cell $procmux$7656: { $procmux$3739_CMP $auto$opt_reduce.cc:132:opt_mux$8813 }
    New ctrl vector for $pmux cell $procmux$3207: { $procmux$3007_CMP $auto$opt_reduce.cc:132:opt_mux$8815 }
    New ctrl vector for $pmux cell $procmux$4081: { $procmux$3704_CMP $auto$opt_reduce.cc:132:opt_mux$8817 }
    New ctrl vector for $pmux cell $procmux$3601: { $procmux$3551_CMP $auto$opt_reduce.cc:132:opt_mux$8819 }
    New ctrl vector for $pmux cell $procmux$2272: { $procmux$2198_CMP $auto$opt_reduce.cc:132:opt_mux$8821 }
    New ctrl vector for $pmux cell $procmux$2867: { $auto$opt_reduce.cc:132:opt_mux$8823 $procmux$2188_CMP }
    New ctrl vector for $pmux cell $procmux$2561: { $procmux$2472_CMP $auto$opt_reduce.cc:132:opt_mux$8825 }
    New ctrl vector for $pmux cell $procmux$5576: { $procmux$3750_CMP $auto$opt_reduce.cc:132:opt_mux$8827 }
    New ctrl vector for $pmux cell $procmux$7136: { $procmux$3735_CMP $auto$opt_reduce.cc:132:opt_mux$8829 }
    New ctrl vector for $pmux cell $procmux$3610: { $procmux$3555_CMP $auto$opt_reduce.cc:132:opt_mux$8831 }
    New ctrl vector for $pmux cell $procmux$6096: { $procmux$3713_CMP $auto$opt_reduce.cc:132:opt_mux$8833 }
    New ctrl vector for $pmux cell $procmux$6616: { $procmux$3745_CMP $auto$opt_reduce.cc:132:opt_mux$8835 }
    New ctrl vector for $pmux cell $procmux$3224: { $procmux$3015_CMP $auto$opt_reduce.cc:132:opt_mux$8837 }
    New ctrl vector for $pmux cell $procmux$3619: { $procmux$3621_CMP $auto$opt_reduce.cc:132:opt_mux$8839 }
    New ctrl vector for $pmux cell $procmux$3628: { $procmux$3622_CMP $auto$opt_reduce.cc:132:opt_mux$8841 }
    New ctrl vector for $pmux cell $procmux$4601: { $procmux$3720_CMP $auto$opt_reduce.cc:132:opt_mux$8843 }
    New ctrl vector for $pmux cell $procmux$2884: { $procmux$2193_CMP $auto$opt_reduce.cc:132:opt_mux$8845 }
    New ctrl vector for $pmux cell $procmux$2578: { $procmux$2474_CMP $auto$opt_reduce.cc:132:opt_mux$8847 }
    New ctrl vector for $pmux cell $procmux$2289: { $procmux$2200_CMP $auto$opt_reduce.cc:132:opt_mux$8849 }
    New ctrl vector for $pmux cell $procmux$3637: { $procmux$3624_CMP $auto$opt_reduce.cc:132:opt_mux$8851 }
    New ctrl vector for $pmux cell $procmux$3646: { $procmux$3626_CMP $auto$opt_reduce.cc:132:opt_mux$8853 }
    New ctrl vector for $pmux cell $procmux$3241: { $procmux$3011_CMP $auto$opt_reduce.cc:132:opt_mux$8855 }
    New ctrl vector for $pmux cell $procmux$2901: { $procmux$2197_CMP $auto$opt_reduce.cc:132:opt_mux$8857 }
    New ctrl vector for $pmux cell $procmux$7721: { $procmux$3723_CMP $auto$opt_reduce.cc:132:opt_mux$8859 }
    New ctrl vector for $pmux cell $procmux$5121: { $procmux$3736_CMP $auto$opt_reduce.cc:132:opt_mux$8861 }
    New ctrl vector for $pmux cell $procmux$3655: { $auto$opt_reduce.cc:132:opt_mux$8863 $procmux$3620_CMP }
    New ctrl vector for $pmux cell $procmux$2595: { $auto$opt_reduce.cc:132:opt_mux$8865 $procmux$2460_CMP }
    New ctrl vector for $pmux cell $procmux$2306: { $procmux$2202_CMP $auto$opt_reduce.cc:132:opt_mux$8867 }
    New ctrl vector for $pmux cell $procmux$3664: { $procmux$3625_CMP $auto$opt_reduce.cc:132:opt_mux$8869 }
    New ctrl vector for $pmux cell $procmux$4146: { $procmux$3706_CMP $auto$opt_reduce.cc:132:opt_mux$8871 }
    New ctrl vector for $pmux cell $procmux$3258: { $procmux$3019_CMP $auto$opt_reduce.cc:132:opt_mux$8873 }
    New ctrl vector for $pmux cell $procmux$7201: { $procmux$3743_CMP $auto$opt_reduce.cc:132:opt_mux$8875 }
    New ctrl vector for $pmux cell $procmux$5641: { $procmux$3752_CMP $auto$opt_reduce.cc:132:opt_mux$8877 }
    New ctrl vector for $pmux cell $procmux$2918: { $procmux$2201_CMP $auto$opt_reduce.cc:132:opt_mux$8879 }
    New ctrl vector for $pmux cell $procmux$3673: { $procmux$3623_CMP $auto$opt_reduce.cc:132:opt_mux$8881 }
    New ctrl vector for $pmux cell $procmux$6681: { $procmux$3749_CMP $auto$opt_reduce.cc:132:opt_mux$8883 }
    New ctrl vector for $pmux cell $procmux$6161: { $procmux$3717_CMP $auto$opt_reduce.cc:132:opt_mux$8885 }
    New ctrl vector for $pmux cell $procmux$2612: { $procmux$2465_CMP $auto$opt_reduce.cc:132:opt_mux$8887 }
    New ctrl vector for $pmux cell $procmux$2323: { $auto$opt_reduce.cc:132:opt_mux$8889 $procmux$2188_CMP }
    New ctrl vector for $pmux cell $procmux$3682: { $procmux$3627_CMP $auto$opt_reduce.cc:132:opt_mux$8891 }
    New ctrl vector for $pmux cell $procmux$3275: { $procmux$3277_CMP $auto$opt_reduce.cc:132:opt_mux$8893 }
    New ctrl vector for $pmux cell $procmux$3691: { $procmux$3693_CMP $auto$opt_reduce.cc:132:opt_mux$8895 }
    New ctrl vector for $pmux cell $procmux$4666: { $procmux$3722_CMP $auto$opt_reduce.cc:132:opt_mux$8897 }
    New ctrl vector for $pmux cell $procmux$7786: { $procmux$3755_CMP $auto$opt_reduce.cc:132:opt_mux$8899 }
    New ctrl vector for $pmux cell $procmux$5186: { $procmux$3738_CMP $auto$opt_reduce.cc:132:opt_mux$8901 }
    New ctrl vector for $pmux cell $procmux$7266: { $procmux$3751_CMP $auto$opt_reduce.cc:132:opt_mux$8903 }
    New ctrl vector for $pmux cell $procmux$4211: { $procmux$3708_CMP $auto$opt_reduce.cc:132:opt_mux$8905 }
    New ctrl vector for $pmux cell $procmux$5706: { $procmux$3754_CMP $auto$opt_reduce.cc:132:opt_mux$8907 }
    New ctrl vector for $pmux cell $procmux$6746: { $procmux$3753_CMP $auto$opt_reduce.cc:132:opt_mux$8909 }
    New ctrl vector for $pmux cell $procmux$6226: { $procmux$3721_CMP $auto$opt_reduce.cc:132:opt_mux$8911 }
    New ctrl vector for $pmux cell $procmux$3756: { $procmux$3694_CMP $auto$opt_reduce.cc:132:opt_mux$8913 }
    New ctrl vector for $pmux cell $procmux$4731: { $procmux$3724_CMP $auto$opt_reduce.cc:132:opt_mux$8915 }
    New ctrl vector for $pmux cell $procmux$3292: { $procmux$3278_CMP $auto$opt_reduce.cc:132:opt_mux$8917 }
    New ctrl vector for $pmux cell $procmux$7854: { $procmux$7867_CMP $procmux$7866_CMP $procmux$7865_CMP $procmux$7864_CMP $procmux$7862_CMP $eq$/home/vpai/tcl_project/source/omsp_frontend.v:856$1745_Y $procmux$7860_CMP $auto$opt_reduce.cc:132:opt_mux$8921 $eq$/home/vpai/tcl_project/source/omsp_frontend.v:923$1777_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:851$1743_Y $auto$opt_reduce.cc:132:opt_mux$8919 }
    New ctrl vector for $pmux cell $procmux$2935: { $procmux$2191_CMP $auto$opt_reduce.cc:132:opt_mux$8923 }
    New ctrl vector for $pmux cell $procmux$5771: { $auto$opt_reduce.cc:132:opt_mux$8925 $procmux$3692_CMP }
    New ctrl vector for $pmux cell $procmux$4276: { $procmux$3710_CMP $auto$opt_reduce.cc:132:opt_mux$8927 }
    New ctrl vector for $pmux cell $procmux$2952: { $procmux$2199_CMP $auto$opt_reduce.cc:132:opt_mux$8929 }
    New ctrl vector for $pmux cell $procmux$6811: { $procmux$3695_CMP $auto$opt_reduce.cc:132:opt_mux$8931 }
    New ctrl vector for $pmux cell $procmux$6291: { $procmux$3725_CMP $auto$opt_reduce.cc:132:opt_mux$8933 }
    New ctrl vector for $pmux cell $procmux$2646: { $procmux$2473_CMP $auto$opt_reduce.cc:132:opt_mux$8935 }
    New ctrl vector for $pmux cell $procmux$3326: { $procmux$3282_CMP $auto$opt_reduce.cc:132:opt_mux$8937 }
    New ctrl vector for $pmux cell $procmux$2357: { $procmux$2197_CMP $auto$opt_reduce.cc:132:opt_mux$8939 }
    New ctrl vector for $pmux cell $procmux$2969: { $procmux$2195_CMP $auto$opt_reduce.cc:132:opt_mux$8941 }
    New ctrl vector for $pmux cell $procmux$2663: { $procmux$2463_CMP $auto$opt_reduce.cc:132:opt_mux$8943 }
    New ctrl vector for $pmux cell $procmux$3343: { $procmux$3284_CMP $auto$opt_reduce.cc:132:opt_mux$8945 }
    New ctrl vector for $pmux cell $procmux$4796: { $procmux$3726_CMP $auto$opt_reduce.cc:132:opt_mux$8947 }
    New ctrl vector for $pmux cell $procmux$3821: { $procmux$3696_CMP $auto$opt_reduce.cc:132:opt_mux$8949 }
    New ctrl vector for $pmux cell $procmux$5251: { $procmux$3740_CMP $auto$opt_reduce.cc:132:opt_mux$8951 }
    New ctrl vector for $pmux cell $procmux$2629: { $procmux$2469_CMP $auto$opt_reduce.cc:132:opt_mux$8953 }
    New ctrl vector for $pmux cell $procmux$2374: { $procmux$2201_CMP $auto$opt_reduce.cc:132:opt_mux$8955 }
    New ctrl vector for $pmux cell $procmux$2986: { $procmux$2203_CMP $auto$opt_reduce.cc:132:opt_mux$8957 }
    New ctrl vector for $pmux cell $procmux$8518: { $eq$/home/vpai/tcl_project/source/omsp_frontend.v:307$1411_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:347$1614_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:281$1385_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:453$1634_Y $auto$opt_reduce.cc:132:opt_mux$8959 }
    New ctrl vector for $pmux cell $procmux$2340: { $procmux$2193_CMP $auto$opt_reduce.cc:132:opt_mux$8961 }
    New ctrl vector for $pmux cell $procmux$3309: { $procmux$3280_CMP $auto$opt_reduce.cc:132:opt_mux$8963 }
    New ctrl vector for $pmux cell $procmux$7331: { $procmux$3699_CMP $auto$opt_reduce.cc:132:opt_mux$8965 }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8640: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8642: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8644: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8646: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8650: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8652: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8654: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8656: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8658: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8660: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8662: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8664: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8666: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8668: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8670: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8672: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8674: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8676: { $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8678: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8680: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8682: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8684: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8686: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8688: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8690: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8692: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8694: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8696: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8698: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8700: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8702: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8704: { $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8706: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8708: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8710: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8712: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8714: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8716: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8718: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8720: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8722: { $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8724: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8726: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8728: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8730: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8732: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8734: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8736: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8738: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8740: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8742: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8744: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8746: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8748: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8750: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8752: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8754: { $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8756: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8758: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8760: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8762: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8764: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8766: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8768: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8770: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8772: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8774: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8776: { $procmux$3551_CMP $procmux$3548_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8778: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8780: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8782: { $procmux$3551_CMP $procmux$3548_CMP $procmux$3549_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8784: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8786: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8788: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8790: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8792: { $procmux$3551_CMP $procmux$3548_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3553_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8794: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8796: { $procmux$3551_CMP $procmux$3548_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8798: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8800: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8802: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8804: { $procmux$2203_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8806: { $procmux$3551_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8808: { $procmux$3551_CMP $procmux$3548_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8810: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8812: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8814: { $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8816: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8818: { $procmux$3548_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8820: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8822: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8824: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8826: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8828: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8830: { $procmux$3551_CMP $procmux$3548_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3554_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8832: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8834: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8836: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8838: { $procmux$3623_CMP $procmux$3620_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8840: { $procmux$3623_CMP $procmux$3620_CMP $procmux$3621_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8842: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8844: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8846: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8848: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8850: { $procmux$3623_CMP $procmux$3620_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3625_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8852: { $procmux$3623_CMP $procmux$3620_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8854: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8856: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8858: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8860: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8862: { $procmux$3623_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8864: { $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8866: { $procmux$2203_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8868: { $procmux$3623_CMP $procmux$3620_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8870: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8872: { $procmux$3007_CMP $procmux$3004_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8874: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8876: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8878: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8880: { $procmux$3620_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8882: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8884: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8886: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8888: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8890: { $procmux$3623_CMP $procmux$3620_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3626_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8892: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8894: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8896: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8898: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8900: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8902: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8904: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8906: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8908: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8910: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8912: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8914: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8916: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8920: { $eq$/home/vpai/tcl_project/source/omsp_frontend.v:850$1742_Y $procmux$7863_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8924: { $procmux$3695_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8926: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8928: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8930: { $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8932: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8934: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8936: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8938: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8940: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8942: { $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8944: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8946: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8948: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8950: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3699_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8952: { $procmux$2463_CMP $procmux$2460_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8954: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8956: { $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8960: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2188_CMP $procmux$2191_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8962: { $procmux$3279_CMP $procmux$3276_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8964: { $procmux$3695_CMP $procmux$3692_CMP $procmux$3693_CMP $procmux$3694_CMP $procmux$3696_CMP $procmux$3697_CMP $procmux$3698_CMP $procmux$3700_CMP $procmux$3701_CMP $procmux$3702_CMP $procmux$3703_CMP $procmux$3704_CMP $procmux$3705_CMP $procmux$3706_CMP $procmux$3707_CMP $procmux$3708_CMP $procmux$3709_CMP $procmux$3710_CMP $procmux$3711_CMP $procmux$3712_CMP $procmux$3713_CMP $procmux$3714_CMP $procmux$3715_CMP $procmux$3716_CMP $procmux$3717_CMP $procmux$3718_CMP $procmux$3719_CMP $procmux$3720_CMP $procmux$3721_CMP $procmux$3722_CMP $procmux$3723_CMP $procmux$3724_CMP $procmux$3725_CMP $procmux$3726_CMP $procmux$3727_CMP $procmux$3728_CMP $procmux$3729_CMP $procmux$3730_CMP $procmux$3731_CMP $procmux$3732_CMP $procmux$3733_CMP $procmux$3734_CMP $procmux$3735_CMP $procmux$3736_CMP $procmux$3737_CMP $procmux$3738_CMP $procmux$3739_CMP $procmux$3740_CMP $procmux$3741_CMP $procmux$3742_CMP $procmux$3743_CMP $procmux$3744_CMP $procmux$3745_CMP $procmux$3746_CMP $procmux$3747_CMP $procmux$3748_CMP $procmux$3749_CMP $procmux$3750_CMP $procmux$3751_CMP $procmux$3752_CMP $procmux$3753_CMP $procmux$3754_CMP $procmux$3755_CMP }
  Optimizing cells in module \omsp_frontend.
  Optimizing cells in module \omsp_mem_backbone.
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_mem_backbone.v:257$21: { \eu_mb_wr [0] \eu_mb_wr [1] }
  Optimizing cells in module \omsp_mem_backbone.
  Optimizing cells in module \omsp_multiplier.
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_multiplier.v:385$807: { \cycle [0] \cycle [1] }
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_multiplier.v:140$769: { \per_we [0] \per_we [1] }
  Optimizing cells in module \omsp_multiplier.
  Optimizing cells in module \omsp_register_file.
  Optimizing cells in module \omsp_sfr.
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_sfr.v:152$327: { \per_we [0] \per_we [1] }
  Optimizing cells in module \omsp_sfr.
  Optimizing cells in module \omsp_sync_cell.
  Optimizing cells in module \omsp_sync_reset.
  Optimizing cells in module \omsp_watchdog.
    New input vector for $reduce_or cell $reduce_or$/home/vpai/tcl_project/source/omsp_watchdog.v:145$377: { \per_we [0] \per_we [1] }
  Optimizing cells in module \omsp_watchdog.
  Optimizing cells in module \openMSP430.
Performed a total of 398 changes.

26.6.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
<suppressed ~96 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 32 cells.

26.6.6. Executing OPT_RMDFF pass (remove dff with constant values).

26.6.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 0 unused cells and 5608 unused wires.
<suppressed ~9 debug messages>

26.6.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.6.9. Rerunning OPT passes. (Maybe there is more to do..)

26.6.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \omsp_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_clock_module..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_execution_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_frontend..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_mem_backbone..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_register_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sfr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sync_cell..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_reset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~314 debug messages>

26.6.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \omsp_alu.
  Optimizing cells in module \omsp_clock_module.
  Optimizing cells in module \omsp_dbg.
  Optimizing cells in module \omsp_dbg_i2c.
  Optimizing cells in module \omsp_execution_unit.
  Optimizing cells in module \omsp_frontend.
  Optimizing cells in module \omsp_mem_backbone.
  Optimizing cells in module \omsp_multiplier.
  Optimizing cells in module \omsp_register_file.
  Optimizing cells in module \omsp_sfr.
  Optimizing cells in module \omsp_sync_cell.
  Optimizing cells in module \omsp_sync_reset.
  Optimizing cells in module \omsp_watchdog.
  Optimizing cells in module \openMSP430.
Performed a total of 0 changes.

26.6.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

26.6.13. Executing OPT_RMDFF pass (remove dff with constant values).

26.6.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..

26.6.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.6.16. Finished OPT passes. (There is nothing left to do.)

26.7. Executing WREDUCE pass (reducing word size of cells).
Removed top 1 bits (of 17) from port A of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:168$447 ($and).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:171$448 ($add).
Removed top 1 bits (of 17) from port A of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:172$449 ($and).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:172$449 ($and).
Removed top 1 bits (of 17) from port Y of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:172$449 ($and).
Removed top 1 bits (of 17) from port A of cell omsp_alu.$or$/home/vpai/tcl_project/source/omsp_alu.v:173$450 ($or).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$or$/home/vpai/tcl_project/source/omsp_alu.v:173$450 ($or).
Removed top 1 bits (of 17) from port Y of cell omsp_alu.$or$/home/vpai/tcl_project/source/omsp_alu.v:173$450 ($or).
Removed top 1 bits (of 17) from port A of cell omsp_alu.$xor$/home/vpai/tcl_project/source/omsp_alu.v:174$451 ($xor).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$xor$/home/vpai/tcl_project/source/omsp_alu.v:174$451 ($xor).
Removed top 1 bits (of 17) from port Y of cell omsp_alu.$xor$/home/vpai/tcl_project/source/omsp_alu.v:174$451 ($xor).
Removed top 16 bits (of 17) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:180$455 ($add).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:212$465 ($and).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:213$466 ($and).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:214$468 ($and).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:215$470 ($and).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:216$472 ($and).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:217$474 ($and).
Removed top 1 bits (of 17) from port B of cell omsp_alu.$and$/home/vpai/tcl_project/source/omsp_alu.v:218$476 ($and).
Removed top 2 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:102$525 ($add).
Removed top 1 bits (of 5) from port A of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$521 ($add).
Removed top 1 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$521 ($add).
Removed top 4 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$522 ($add).
Removed top 1 bits (of 5) from port B of cell omsp_alu.$lt$/home/vpai/tcl_project/source/omsp_alu.v:101$523 ($lt).
Removed top 2 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:102$537 ($add).
Removed top 1 bits (of 5) from port A of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$533 ($add).
Removed top 1 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$533 ($add).
Removed top 4 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$534 ($add).
Removed top 1 bits (of 5) from port B of cell omsp_alu.$lt$/home/vpai/tcl_project/source/omsp_alu.v:101$535 ($lt).
Removed top 2 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:102$549 ($add).
Removed top 1 bits (of 5) from port A of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$545 ($add).
Removed top 1 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$545 ($add).
Removed top 4 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$546 ($add).
Removed top 1 bits (of 5) from port B of cell omsp_alu.$lt$/home/vpai/tcl_project/source/omsp_alu.v:101$547 ($lt).
Removed top 2 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:102$561 ($add).
Removed top 1 bits (of 5) from port A of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$557 ($add).
Removed top 1 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$557 ($add).
Removed top 4 bits (of 5) from port B of cell omsp_alu.$add$/home/vpai/tcl_project/source/omsp_alu.v:100$558 ($add).
Removed top 1 bits (of 5) from port B of cell omsp_alu.$lt$/home/vpai/tcl_project/source/omsp_alu.v:101$559 ($lt).
Removed top 1 bits (of 17) from wire omsp_alu.alu_and.
Removed top 1 bits (of 17) from wire omsp_alu.alu_or.
Removed top 1 bits (of 17) from wire omsp_alu.alu_shift.
Removed top 1 bits (of 17) from wire omsp_alu.alu_swpb.
Removed top 1 bits (of 17) from wire omsp_alu.alu_sxt.
Removed top 1 bits (of 17) from wire omsp_alu.alu_xor.
Removed top 1 bits (of 17) from wire omsp_alu.op_dst_in.
Removed top 1 bits (of 17) from wire omsp_alu.op_src_in.
Removed top 8 bits (of 11) from port B of cell omsp_clock_module.$eq$/home/vpai/tcl_project/source/omsp_clock_module.v:172$1852 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_clock_module.$eq$/home/vpai/tcl_project/source/omsp_clock_module.v:178$1854 ($eq).
Removed top 8 bits (of 16) from port A of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:178$1855 ($and).
Removed top 7 bits (of 16) from port A of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:179$1857 ($and).
Removed top 8 bits (of 16) from port Y of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:187$1864 ($and).
Removed top 8 bits (of 16) from port A of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:187$1864 ($and).
Removed top 8 bits (of 16) from port B of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:187$1864 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:188$1865 ($and).
Removed top 7 bits (of 16) from port A of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:188$1865 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:188$1865 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:189$1866 ($and).
Removed top 7 bits (of 16) from port A of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:189$1866 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:189$1866 ($and).
Removed top 2 bits (of 8) from port B of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:252$1874 ($and).
Removed top 4 bits (of 8) from port B of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:290$1881 ($and).
Removed top 8 bits (of 16) from port B of cell omsp_clock_module.$or$/home/vpai/tcl_project/source/omsp_clock_module.v:302$1886 ($or).
Removed top 1 bits (of 2) from port B of cell omsp_clock_module.$eq$/home/vpai/tcl_project/source/omsp_clock_module.v:946$1895 ($eq).
Removed top 2 bits (of 3) from port B of cell omsp_clock_module.$add$/home/vpai/tcl_project/source/omsp_clock_module.v:952$1906 ($add).
Removed top 1 bits (of 2) from port B of cell omsp_clock_module.$eq$/home/vpai/tcl_project/source/omsp_clock_module.v:1134$1915 ($eq).
Removed top 2 bits (of 3) from port B of cell omsp_clock_module.$add$/home/vpai/tcl_project/source/omsp_clock_module.v:1144$1928 ($add).
Removed top 7 bits (of 16) from port Y of cell omsp_clock_module.$or$/home/vpai/tcl_project/source/omsp_clock_module.v:179$1858 ($or).
Removed top 7 bits (of 16) from port A of cell omsp_clock_module.$or$/home/vpai/tcl_project/source/omsp_clock_module.v:179$1858 ($or).
Removed top 7 bits (of 16) from port B of cell omsp_clock_module.$or$/home/vpai/tcl_project/source/omsp_clock_module.v:179$1858 ($or).
Removed top 7 bits (of 16) from port Y of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:178$1855 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:178$1855 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:179$1857 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:179$1857 ($and).
Removed top 7 bits (of 16) from wire omsp_clock_module.$and$/home/vpai/tcl_project/source/omsp_clock_module.v:178$1855_Y.
Removed top 8 bits (of 16) from wire omsp_clock_module.bcsctl2_rd.
Removed top 1 bits (of 4) from wire omsp_clock_module.reg_addr.
Removed top 7 bits (of 16) from wire omsp_clock_module.reg_dec.
Removed top 8 bits (of 16) from wire omsp_clock_module.reg_hi_wr.
Removed top 7 bits (of 16) from wire omsp_clock_module.reg_rd.
Removed top 17 bits (of 25) from port Y of cell omsp_dbg.$and$/home/vpai/tcl_project/source/omsp_dbg.v:285$167 ($and).
Removed top 17 bits (of 25) from port A of cell omsp_dbg.$and$/home/vpai/tcl_project/source/omsp_dbg.v:285$167 ($and).
Removed top 17 bits (of 25) from port B of cell omsp_dbg.$and$/home/vpai/tcl_project/source/omsp_dbg.v:285$167 ($and).
Removed top 8 bits (of 16) from mux cell omsp_dbg.$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:412$186 ($mux).
Removed top 15 bits (of 16) from mux cell omsp_dbg.$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:431$201 ($mux).
Removed top 14 bits (of 16) from mux cell omsp_dbg.$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:431$202 ($mux).
Removed top 14 bits (of 16) from mux cell omsp_dbg.$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:431$203 ($mux).
Removed top 14 bits (of 16) from port B of cell omsp_dbg.$add$/home/vpai/tcl_project/source/omsp_dbg.v:436$205 ($add).
Removed top 9 bits (of 16) from port A of cell omsp_dbg.$and$/home/vpai/tcl_project/source/omsp_dbg.v:623$215 ($and).
Removed top 12 bits (of 16) from port A of cell omsp_dbg.$and$/home/vpai/tcl_project/source/omsp_dbg.v:624$216 ($and).
Removed top 12 bits (of 16) from port A of cell omsp_dbg.$and$/home/vpai/tcl_project/source/omsp_dbg.v:625$217 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_dbg.$eq$/home/vpai/tcl_project/source/omsp_dbg.v:673$242 ($eq).
Removed top 1 bits (of 2) from port B of cell omsp_dbg.$eq$/home/vpai/tcl_project/source/omsp_dbg.v:764$283 ($eq).
Removed top 1 bits (of 2) from port B of cell omsp_dbg.$procmux$2137_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_dbg.$procmux$2178_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell omsp_dbg.$procmux$2179_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell omsp_dbg.$procmux$2182_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell omsp_dbg.$procmux$2180_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell omsp_dbg.$procmux$2181_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell omsp_dbg.$procmux$2185_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell omsp_dbg.$procmux$2184_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell omsp_dbg.$procmux$2183_CMP0 ($eq).
Removed top 8 bits (of 16) from wire omsp_dbg.$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:412$186_Y.
Removed top 15 bits (of 16) from wire omsp_dbg.$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:431$201_Y.
Removed top 14 bits (of 16) from wire omsp_dbg.$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:431$202_Y.
Removed top 1 bits (of 8) from wire omsp_dbg.cpu_ctl_full.
Removed top 4 bits (of 8) from wire omsp_dbg.cpu_stat_full.
Removed top 14 bits (of 16) from wire omsp_dbg.mem_addr_inc.
Removed top 4 bits (of 8) from wire omsp_dbg.mem_ctl_full.
Removed top 17 bits (of 25) from wire omsp_dbg.reg_wr.
Removed top 2 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:244$606 ($mux).
Removed top 2 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:244$607 ($mux).
Removed top 2 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:244$608 ($mux).
Removed top 2 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:257$617 ($mux).
Removed top 2 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:253$614 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:253$615 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:257$618 ($mux).
Removed top 2 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:261$620 ($mux).
Removed top 1 bits (of 3) from port B of cell omsp_dbg_i2c.$eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$629 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_dbg_i2c.$eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$631 ($eq).
Removed top 2 bits (of 3) from port B of cell omsp_dbg_i2c.$eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:289$644 ($eq).
Removed top 2 bits (of 3) from port B of cell omsp_dbg_i2c.$eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:333$674 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_dbg_i2c.$eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:334$675 ($eq).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:364$683 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:364$684 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:364$685 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:364$686 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:370$691 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:372$692 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:372$693 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:372$694 ($mux).
Removed top 2 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:376$699 ($mux).
Removed top 1 bits (of 3) from mux cell omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:386$711 ($mux).
Removed top 2 bits (of 3) from port B of cell omsp_dbg_i2c.$eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:400$716 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_dbg_i2c.$eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:401$718 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_dbg_i2c.$eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:458$732 ($eq).
Removed top 2 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:244$606_Y.
Removed top 2 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:244$607_Y.
Removed top 2 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:253$614_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:253$615_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:257$618_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:364$683_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:364$684_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:364$685_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:364$686_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:370$691_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:372$692_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:372$694_Y.
Removed top 2 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:376$699_Y.
Removed top 1 bits (of 3) from wire omsp_dbg_i2c.$ternary$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:386$711_Y.
Removed top 3 bits (of 4) from port B of cell omsp_execution_unit.$eq$/home/vpai/tcl_project/source/omsp_execution_unit.v:160$831 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_execution_unit.$eq$/home/vpai/tcl_project/source/omsp_execution_unit.v:160$832 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_execution_unit.$eq$/home/vpai/tcl_project/source/omsp_execution_unit.v:162$846 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_execution_unit.$eq$/home/vpai/tcl_project/source/omsp_execution_unit.v:163$851 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_execution_unit.$eq$/home/vpai/tcl_project/source/omsp_execution_unit.v:226$873 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_execution_unit.$eq$/home/vpai/tcl_project/source/omsp_execution_unit.v:229$880 ($eq).
Removed top 8 bits (of 16) from mux cell omsp_execution_unit.$ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:383$1040 ($mux).
Removed top 8 bits (of 16) from mux cell omsp_execution_unit.$ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:383$1041 ($mux).
Removed top 3 bits (of 4) from port B of cell omsp_frontend.$procmux$2202_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$2201_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$2200_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$2199_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$2198_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$2197_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$2196_CMP0 ($eq).
Removed top 2 bits (of 3) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:266$1375 ($mux).
Removed top 2 bits (of 3) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:266$1376 ($mux).
Removed top 2 bits (of 3) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:266$1377 ($mux).
Removed top 1 bits (of 2) from port B of cell omsp_frontend.$ne$/home/vpai/tcl_project/source/omsp_frontend.v:268$1381 ($ne).
Removed top 1 bits (of 3) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:281$1385 ($eq).
Removed top 4 bits (of 63) from port B of cell omsp_frontend.$or$/home/vpai/tcl_project/source/omsp_frontend.v:330$1414 ($or).
Removed top 1 bits (of 64) from port Y of cell omsp_frontend.$and$/home/vpai/tcl_project/source/omsp_frontend.v:347$1615 ($and).
Removed top 1 bits (of 64) from port A of cell omsp_frontend.$and$/home/vpai/tcl_project/source/omsp_frontend.v:347$1615 ($and).
Removed top 1 bits (of 64) from port B of cell omsp_frontend.$and$/home/vpai/tcl_project/source/omsp_frontend.v:347$1615 ($and).
Removed top 14 bits (of 16) from port B of cell omsp_frontend.$add$/home/vpai/tcl_project/source/omsp_frontend.v:409$1616 ($add).
Removed top 2 bits (of 3) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:412$1618 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:453$1634 ($eq).
Removed top 2 bits (of 3) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:537$1667 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:695$1692 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:702$1693 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:772$1700 ($eq).
Removed top 1 bits (of 2) from port A of cell omsp_frontend.$add$/home/vpai/tcl_project/source/omsp_frontend.v:811$1717 ($add).
Removed top 1 bits (of 2) from port B of cell omsp_frontend.$add$/home/vpai/tcl_project/source/omsp_frontend.v:811$1717 ($add).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:857$1747 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$eq$/home/vpai/tcl_project/source/omsp_frontend.v:856$1745 ($eq).
Removed top 2 bits (of 4) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:872$1756 ($mux).
Removed top 2 bits (of 4) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:872$1757 ($mux).
Removed top 2 bits (of 4) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:890$1764 ($mux).
Removed top 2 bits (of 4) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:893$1765 ($mux).
Removed top 2 bits (of 4) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:893$1766 ($mux).
Removed top 3 bits (of 4) from mux cell omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:896$1768 ($mux).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$2468_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$2469_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$2470_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$2471_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$2472_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$2473_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell omsp_frontend.$procmux$2474_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$3012_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$3013_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$3014_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$3015_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$3016_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$3017_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell omsp_frontend.$procmux$3018_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$3284_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$3285_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$3286_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$3287_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$3288_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$3289_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell omsp_frontend.$procmux$3290_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_frontend.$procmux$3552_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_frontend.$procmux$3553_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell omsp_frontend.$procmux$3554_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_frontend.$procmux$3624_CMP0 ($eq).
Removed top 1 bits (of 3) from port B of cell omsp_frontend.$procmux$3625_CMP0 ($eq).
Removed top 2 bits (of 3) from port B of cell omsp_frontend.$procmux$3626_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3724_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3725_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3726_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3727_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3728_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3729_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3730_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3731_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3732_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3733_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3734_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3735_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3736_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3737_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3738_CMP0 ($eq).
Removed top 1 bits (of 6) from port B of cell omsp_frontend.$procmux$3739_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell omsp_frontend.$procmux$3740_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell omsp_frontend.$procmux$3741_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell omsp_frontend.$procmux$3742_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell omsp_frontend.$procmux$3743_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell omsp_frontend.$procmux$3744_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell omsp_frontend.$procmux$3745_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell omsp_frontend.$procmux$3746_CMP0 ($eq).
Removed top 2 bits (of 6) from port B of cell omsp_frontend.$procmux$3747_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell omsp_frontend.$procmux$3748_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell omsp_frontend.$procmux$3749_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell omsp_frontend.$procmux$3750_CMP0 ($eq).
Removed top 3 bits (of 6) from port B of cell omsp_frontend.$procmux$3751_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell omsp_frontend.$procmux$3752_CMP0 ($eq).
Removed top 4 bits (of 6) from port B of cell omsp_frontend.$procmux$3753_CMP0 ($eq).
Removed top 5 bits (of 6) from port B of cell omsp_frontend.$procmux$3754_CMP0 ($eq).
Removed cell omsp_frontend.$procmux$5771 ($pmux).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$7862_CMP0 ($eq).
Removed top 1 bits (of 4) from port B of cell omsp_frontend.$procmux$7863_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$7864_CMP0 ($eq).
Removed top 3 bits (of 4) from port B of cell omsp_frontend.$procmux$7866_CMP0 ($eq).
Removed top 2 bits (of 4) from port B of cell omsp_frontend.$procmux$7867_CMP0 ($eq).
Removed top 6 bits (of 8) from mux cell omsp_frontend.$procmux$7896 ($mux).
Removed top 3 bits (of 8) from mux cell omsp_frontend.$procmux$7909 ($mux).
Removed top 3 bits (of 8) from mux cell omsp_frontend.$procmux$7920 ($mux).
Removed top 1 bits (of 8) from mux cell omsp_frontend.$procmux$7930 ($mux).
Removed top 1 bits (of 8) from mux cell omsp_frontend.$procmux$7938 ($mux).
Removed top 1 bits (of 2) from port B of cell omsp_frontend.$procmux$8013_CMP0 ($eq).
Removed top 9 bits (of 13) from mux cell omsp_frontend.$procmux$8012 ($pmux).
Removed top 7 bits (of 13) from mux cell omsp_frontend.$procmux$8030 ($pmux).
Removed top 7 bits (of 13) from mux cell omsp_frontend.$procmux$8046 ($mux).
Removed top 4 bits (of 13) from mux cell omsp_frontend.$procmux$8059 ($pmux).
Removed top 4 bits (of 13) from mux cell omsp_frontend.$procmux$8072 ($mux).
Removed cell omsp_frontend.$procmux$8135 ($mux).
Removed cell omsp_frontend.$procmux$8141 ($mux).
Removed cell omsp_frontend.$procmux$8147 ($mux).
Removed cell omsp_frontend.$procmux$8153 ($mux).
Removed cell omsp_frontend.$procmux$8159 ($mux).
Removed cell omsp_frontend.$procmux$8165 ($mux).
Removed cell omsp_frontend.$procmux$8171 ($mux).
Removed cell omsp_frontend.$procmux$8177 ($mux).
Removed cell omsp_frontend.$procmux$8183 ($mux).
Removed cell omsp_frontend.$procmux$8189 ($mux).
Removed cell omsp_frontend.$procmux$8195 ($mux).
Removed cell omsp_frontend.$procmux$8201 ($mux).
Removed cell omsp_frontend.$procmux$8207 ($mux).
Removed cell omsp_frontend.$procmux$8213 ($mux).
Removed cell omsp_frontend.$procmux$8219 ($mux).
Removed cell omsp_frontend.$procmux$8225 ($mux).
Removed cell omsp_frontend.$procmux$8231 ($mux).
Removed cell omsp_frontend.$procmux$8237 ($mux).
Removed cell omsp_frontend.$procmux$8243 ($mux).
Removed cell omsp_frontend.$procmux$8249 ($mux).
Removed cell omsp_frontend.$procmux$8255 ($mux).
Removed cell omsp_frontend.$procmux$8261 ($mux).
Removed cell omsp_frontend.$procmux$8267 ($mux).
Removed cell omsp_frontend.$procmux$8273 ($mux).
Removed cell omsp_frontend.$procmux$8279 ($mux).
Removed cell omsp_frontend.$procmux$8285 ($mux).
Removed cell omsp_frontend.$procmux$8291 ($mux).
Removed cell omsp_frontend.$procmux$8297 ($mux).
Removed cell omsp_frontend.$procmux$8303 ($mux).
Removed cell omsp_frontend.$procmux$8309 ($mux).
Removed cell omsp_frontend.$procmux$8315 ($mux).
Removed cell omsp_frontend.$procmux$8321 ($mux).
Removed cell omsp_frontend.$procmux$8327 ($mux).
Removed cell omsp_frontend.$procmux$8333 ($mux).
Removed cell omsp_frontend.$procmux$8339 ($mux).
Removed cell omsp_frontend.$procmux$8345 ($mux).
Removed cell omsp_frontend.$procmux$8351 ($mux).
Removed cell omsp_frontend.$procmux$8357 ($mux).
Removed cell omsp_frontend.$procmux$8363 ($mux).
Removed cell omsp_frontend.$procmux$8369 ($mux).
Removed cell omsp_frontend.$procmux$8375 ($mux).
Removed cell omsp_frontend.$procmux$8381 ($mux).
Removed cell omsp_frontend.$procmux$8387 ($mux).
Removed cell omsp_frontend.$procmux$8393 ($mux).
Removed cell omsp_frontend.$procmux$8399 ($mux).
Removed cell omsp_frontend.$procmux$8405 ($mux).
Removed cell omsp_frontend.$procmux$8411 ($mux).
Removed cell omsp_frontend.$procmux$8417 ($mux).
Removed cell omsp_frontend.$procmux$8423 ($mux).
Removed cell omsp_frontend.$procmux$8429 ($mux).
Removed cell omsp_frontend.$procmux$8435 ($mux).
Removed cell omsp_frontend.$procmux$8441 ($mux).
Removed cell omsp_frontend.$procmux$8447 ($mux).
Removed cell omsp_frontend.$procmux$8453 ($mux).
Removed cell omsp_frontend.$procmux$8459 ($mux).
Removed cell omsp_frontend.$procmux$8465 ($mux).
Removed cell omsp_frontend.$procmux$8471 ($mux).
Removed cell omsp_frontend.$procmux$8477 ($mux).
Removed cell omsp_frontend.$procmux$8483 ($mux).
Removed cell omsp_frontend.$procmux$8489 ($mux).
Removed cell omsp_frontend.$procmux$8495 ($mux).
Removed top 5 bits (of 6) from mux cell omsp_frontend.$procmux$8499 ($mux).
Removed cell omsp_frontend.$procmux$8501 ($mux).
Removed top 1 bits (of 64) from wire omsp_frontend.$0$func$\one_hot64$/home/vpai/tcl_project/source/omsp_frontend.v:347$1340$\one_hot64[63:0]$1812.
Removed top 5 bits (of 8) from wire omsp_frontend.$0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:563$1341$\one_hot8[7:0]$1817.
Removed top 1 bits (of 12) from wire omsp_frontend.$0\inst_alu[11:0].
Removed top 1 bits (of 8) from wire omsp_frontend.$2\inst_ad_nxt[7:0].
Removed top 5 bits (of 6) from wire omsp_frontend.$3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427.
Removed top 1 bits (of 8) from wire omsp_frontend.$3\inst_ad_nxt[7:0].
Removed top 3 bits (of 8) from wire omsp_frontend.$4\inst_ad_nxt[7:0].
Removed top 4 bits (of 13) from wire omsp_frontend.$4\inst_as_nxt[12:0].
Removed top 3 bits (of 8) from wire omsp_frontend.$5\inst_ad_nxt[7:0].
Removed top 4 bits (of 13) from wire omsp_frontend.$5\inst_as_nxt[12:0].
Removed top 6 bits (of 8) from wire omsp_frontend.$6\inst_ad_nxt[7:0].
Removed top 7 bits (of 13) from wire omsp_frontend.$6\inst_as_nxt[12:0].
Removed top 9 bits (of 13) from wire omsp_frontend.$8\inst_as_nxt[12:0].
Removed top 5 bits (of 6) from wire omsp_frontend.$procmux$8499_Y.
Removed top 2 bits (of 3) from wire omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:266$1375_Y.
Removed top 2 bits (of 3) from wire omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:266$1377_Y.
Removed top 2 bits (of 4) from wire omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:872$1756_Y.
Removed top 2 bits (of 4) from wire omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:872$1757_Y.
Removed top 2 bits (of 4) from wire omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:890$1764_Y.
Removed top 2 bits (of 4) from wire omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:893$1765_Y.
Removed top 3 bits (of 4) from wire omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:893$1766_Y.
Removed top 3 bits (of 4) from wire omsp_frontend.$ternary$/home/vpai/tcl_project/source/omsp_frontend.v:896$1768_Y.
Removed top 1 bits (of 64) from wire omsp_frontend.irq_acc_all.
Removed top 9 bits (of 16) from wire omsp_frontend.irq_addr.
Removed top 18 bits (of 32) from port B of cell omsp_mem_backbone.$ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:227$1 ($ge).
Removed top 17 bits (of 32) from port B of cell omsp_mem_backbone.$lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:228$2 ($lt).
Removed top 17 bits (of 32) from port A of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5 ($sub).
Removed top 18 bits (of 32) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5 ($sub).
Removed top 19 bits (of 32) from port Y of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5 ($sub).
Removed top 2 bits (of 15) from port A of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5 ($sub).
Removed top 13 bits (of 14) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5 ($sub).
Removed top 18 bits (of 32) from port B of cell omsp_mem_backbone.$ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:236$6 ($ge).
Removed top 17 bits (of 32) from port B of cell omsp_mem_backbone.$lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:237$7 ($lt).
Removed top 17 bits (of 32) from port A of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12 ($sub).
Removed top 18 bits (of 32) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12 ($sub).
Removed top 19 bits (of 32) from port Y of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12 ($sub).
Removed top 2 bits (of 15) from port A of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12 ($sub).
Removed top 13 bits (of 14) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12 ($sub).
Removed top 17 bits (of 32) from port B of cell omsp_mem_backbone.$ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:256$20 ($ge).
Removed top 17 bits (of 32) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:258$25 ($sub).
Removed top 18 bits (of 32) from port Y of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:258$25 ($sub).
Removed top 1 bits (of 15) from port A of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:258$25 ($sub).
Removed top 14 bits (of 15) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:258$25 ($sub).
Removed top 17 bits (of 32) from port B of cell omsp_mem_backbone.$ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:261$26 ($ge).
Removed top 17 bits (of 32) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:263$28 ($sub).
Removed top 18 bits (of 32) from port Y of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:263$28 ($sub).
Removed top 1 bits (of 15) from port A of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:263$28 ($sub).
Removed top 14 bits (of 15) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:263$28 ($sub).
Removed top 17 bits (of 32) from port B of cell omsp_mem_backbone.$ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:266$29 ($ge).
Removed top 17 bits (of 32) from port A of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35 ($sub).
Removed top 17 bits (of 32) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35 ($sub).
Removed top 18 bits (of 32) from port Y of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35 ($sub).
Removed top 1 bits (of 15) from port A of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35 ($sub).
Removed top 14 bits (of 15) from port B of cell omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35 ($sub).
Removed top 18 bits (of 32) from port B of cell omsp_mem_backbone.$lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:286$44 ($lt).
Removed top 18 bits (of 32) from port B of cell omsp_mem_backbone.$lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:293$46 ($lt).
Removed top 19 bits (of 32) from wire omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5_Y.
Removed top 19 bits (of 32) from wire omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12_Y.
Removed top 18 bits (of 32) from wire omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:258$25_Y.
Removed top 18 bits (of 32) from wire omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:263$28_Y.
Removed top 18 bits (of 32) from wire omsp_mem_backbone.$sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35_Y.
Removed top 3 bits (of 16) from wire omsp_mem_backbone.eu_dmem_addr.
Removed top 11 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:132$752 ($and).
Removed top 6 bits (of 11) from port B of cell omsp_multiplier.$eq$/home/vpai/tcl_project/source/omsp_multiplier.v:124$744 ($eq).
Removed top 15 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:130$747 ($and).
Removed top 2 bits (of 3) from port B of cell omsp_multiplier.$eq$/home/vpai/tcl_project/source/omsp_multiplier.v:131$748 ($eq).
Removed top 13 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:131$749 ($and).
Removed top 1 bits (of 3) from port B of cell omsp_multiplier.$eq$/home/vpai/tcl_project/source/omsp_multiplier.v:132$751 ($eq).
Removed top 7 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:134$758 ($and).
Removed top 1 bits (of 3) from port B of cell omsp_multiplier.$eq$/home/vpai/tcl_project/source/omsp_multiplier.v:133$754 ($eq).
Removed top 9 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:133$755 ($and).
Removed top 3 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:136$764 ($and).
Removed top 5 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:135$761 ($and).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:137$767 ($and).
Removed top 3 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:144$774 ($and).
Removed top 3 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:144$774 ($and).
Removed top 3 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:144$774 ($and).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:145$775 ($and).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:145$775 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:145$775 ($and).
Removed top 2 bits (of 26) from port Y of cell omsp_multiplier.$mul$/home/vpai/tcl_project/source/omsp_multiplier.v:396$811 ($mul).
Removed top 1 bits (of 33) from port A of cell omsp_multiplier.$add$/home/vpai/tcl_project/source/omsp_multiplier.v:402$814 ($add).
Removed top 1 bits (of 33) from port B of cell omsp_multiplier.$add$/home/vpai/tcl_project/source/omsp_multiplier.v:402$814 ($add).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:137$768 ($or).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:137$768 ($or).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:137$768 ($or).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:136$765 ($or).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:136$765 ($or).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:136$765 ($or).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:137$767 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:137$767 ($and).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:136$764 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:136$764 ($and).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:135$762 ($or).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:135$762 ($or).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:135$762 ($or).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:134$759 ($or).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:134$759 ($or).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:134$759 ($or).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:135$761 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:135$761 ($and).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:134$758 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:134$758 ($and).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:133$756 ($or).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:133$756 ($or).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:133$756 ($or).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:132$753 ($or).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:132$753 ($or).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:132$753 ($or).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:133$755 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:133$755 ($and).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:132$752 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:132$752 ($and).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:131$750 ($or).
Removed top 1 bits (of 16) from port A of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:131$750 ($or).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$or$/home/vpai/tcl_project/source/omsp_multiplier.v:131$750 ($or).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:130$747 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:130$747 ($and).
Removed top 1 bits (of 16) from port Y of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:131$749 ($and).
Removed top 1 bits (of 16) from port B of cell omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:131$749 ($and).
Removed top 1 bits (of 16) from wire omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:130$747_Y.
Removed top 1 bits (of 16) from wire omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:132$752_Y.
Removed top 1 bits (of 16) from wire omsp_multiplier.$and$/home/vpai/tcl_project/source/omsp_multiplier.v:136$764_Y.
Removed top 1 bits (of 9) from wire omsp_multiplier.op2_lo_xp.
Removed top 2 bits (of 26) from wire omsp_multiplier.product.
Removed top 1 bits (of 16) from wire omsp_multiplier.reg_dec.
Removed top 1 bits (of 16) from wire omsp_multiplier.reg_rd.
Removed top 3 bits (of 16) from wire omsp_multiplier.reg_wr.
Removed top 14 bits (of 16) from mux cell omsp_register_file.$ternary$/home/vpai/tcl_project/source/omsp_register_file.v:121$1144 ($mux).
Removed top 14 bits (of 16) from port B of cell omsp_register_file.$add$/home/vpai/tcl_project/source/omsp_register_file.v:122$1145 ($add).
Removed top 7 bits (of 16) from port A of cell omsp_register_file.$and$/home/vpai/tcl_project/source/omsp_register_file.v:248$1172 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_register_file.$and$/home/vpai/tcl_project/source/omsp_register_file.v:248$1172 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_register_file.$and$/home/vpai/tcl_project/source/omsp_register_file.v:248$1172 ($and).
Removed top 7 bits (of 16) from wire omsp_register_file.$and$/home/vpai/tcl_project/source/omsp_register_file.v:248$1172_Y.
Removed top 14 bits (of 16) from wire omsp_register_file.incr_op.
Removed top 11 bits (of 16) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:145$317 ($and).
Removed top 15 bits (of 16) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:143$312 ($and).
Removed top 2 bits (of 3) from port B of cell omsp_sfr.$eq$/home/vpai/tcl_project/source/omsp_sfr.v:144$313 ($eq).
Removed top 13 bits (of 16) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:144$314 ($and).
Removed top 1 bits (of 3) from port B of cell omsp_sfr.$eq$/home/vpai/tcl_project/source/omsp_sfr.v:145$316 ($eq).
Removed top 7 bits (of 16) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:147$323 ($and).
Removed top 1 bits (of 3) from port B of cell omsp_sfr.$eq$/home/vpai/tcl_project/source/omsp_sfr.v:146$319 ($eq).
Removed top 9 bits (of 16) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:146$320 ($and).
Removed top 13 bits (of 16) from port Y of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:156$331 ($and).
Removed top 13 bits (of 16) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:156$331 ($and).
Removed top 13 bits (of 16) from port B of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:156$331 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:157$332 ($and).
Removed top 7 bits (of 16) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:157$332 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:157$332 ($and).
Removed top 7 bits (of 8) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:274$341 ($and).
Removed top 7 bits (of 8) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:275$343 ($and).
Removed top 1 bits (of 16) from port A of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:276$345 ($and).
Removed top 8 bits (of 16) from port A of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:281$348 ($or).
Removed top 8 bits (of 16) from port B of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:281$348 ($or).
Removed top 8 bits (of 16) from port Y of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:281$348 ($or).
Removed top 8 bits (of 16) from port A of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:282$349 ($or).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:147$324 ($or).
Removed top 7 bits (of 16) from port A of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:147$324 ($or).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:147$324 ($or).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:147$323 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:147$323 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:146$321 ($or).
Removed top 7 bits (of 16) from port A of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:146$321 ($or).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:146$321 ($or).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:145$318 ($or).
Removed top 7 bits (of 16) from port A of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:145$318 ($or).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:145$318 ($or).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:146$320 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:146$320 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:145$317 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:145$317 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:144$315 ($or).
Removed top 7 bits (of 16) from port A of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:144$315 ($or).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:144$315 ($or).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:143$312 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:143$312 ($and).
Removed top 7 bits (of 16) from port Y of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:144$314 ($and).
Removed top 7 bits (of 16) from port B of cell omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:144$314 ($and).
Removed top 7 bits (of 16) from wire omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:143$312_Y.
Removed top 7 bits (of 16) from wire omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:146$320_Y.
Removed top 7 bits (of 16) from wire omsp_sfr.$and$/home/vpai/tcl_project/source/omsp_sfr.v:147$323_Y.
Removed top 7 bits (of 16) from wire omsp_sfr.$or$/home/vpai/tcl_project/source/omsp_sfr.v:145$318_Y.
Removed top 8 bits (of 16) from wire omsp_sfr.ie1_rd.
Removed top 8 bits (of 16) from wire omsp_sfr.ifg1_rd.
Removed top 1 bits (of 4) from wire omsp_sfr.reg_addr.
Removed top 7 bits (of 16) from wire omsp_sfr.reg_dec.
Removed top 13 bits (of 16) from wire omsp_sfr.reg_lo_wr.
Removed top 7 bits (of 16) from wire omsp_sfr.reg_rd.
Removed top 1 bits (of 2) from port B of cell omsp_watchdog.$procmux$2115_CMP0 ($eq).
Removed top 6 bits (of 13) from port B of cell omsp_watchdog.$eq$/home/vpai/tcl_project/source/omsp_watchdog.v:136$373 ($eq).
Removed top 3 bits (of 4) from port A of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:142$376 ($and).
Removed top 3 bits (of 4) from port Y of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:149$382 ($and).
Removed top 3 bits (of 4) from port A of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:149$382 ($and).
Removed top 3 bits (of 4) from port B of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:149$382 ($and).
Removed top 3 bits (of 4) from port Y of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:150$383 ($and).
Removed top 3 bits (of 4) from port A of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:150$383 ($and).
Removed top 3 bits (of 4) from port B of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:150$383 ($and).
Removed top 1 bits (of 8) from port B of cell omsp_watchdog.$ne$/home/vpai/tcl_project/source/omsp_watchdog.v:200$386 ($ne).
Removed top 1 bits (of 16) from port A of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:226$389 ($and).
Removed top 15 bits (of 16) from port B of cell omsp_watchdog.$add$/home/vpai/tcl_project/source/omsp_watchdog.v:500$397 ($add).
Removed top 3 bits (of 4) from port Y of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:142$376 ($and).
Removed top 3 bits (of 4) from port B of cell omsp_watchdog.$and$/home/vpai/tcl_project/source/omsp_watchdog.v:142$376 ($and).
Removed top 3 bits (of 4) from wire omsp_watchdog.reg_dec.

26.8. Executing PEEPOPT pass (run peephole optimizers).

26.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 1 unused cells and 153 unused wires.
<suppressed ~11 debug messages>

26.10. Executing TECHMAP pass (map to technology primitives).

26.10.1. Executing Verilog-2005 frontend: /usr/bin/../share/yosys/cmp2lut.v
Parsing Verilog input from `/usr/bin/../share/yosys/cmp2lut.v' to AST representation.
Generating RTLIL representation for module `\_90_lut_cmp_'.
Successfully finished Verilog frontend.

26.10.2. Continuing TECHMAP pass.
No more expansions possible.
<suppressed ~1672 debug messages>

26.11. Executing ALUMACC pass (create $alu and $macc cells).
Extracting $alu and $macc cells in module omsp_alu:
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$521 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$522 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$533 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$534 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$545 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$546 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$557 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$558 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:102$525 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:102$537 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:102$549 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:102$561 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:171$448 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:180$455 ($add).
  merging $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$557 into $add$/home/vpai/tcl_project/source/omsp_alu.v:100$558.
  merging $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$545 into $add$/home/vpai/tcl_project/source/omsp_alu.v:100$546.
  merging $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$533 into $add$/home/vpai/tcl_project/source/omsp_alu.v:100$534.
  merging $macc model for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$521 into $add$/home/vpai/tcl_project/source/omsp_alu.v:100$522.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:102$537.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:102$525.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:100$558.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:102$549.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:100$546.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:102$561.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:100$534.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:171$448.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:100$522.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_alu.v:180$455.
  creating $alu model for $lt$/home/vpai/tcl_project/source/omsp_alu.v:101$523 ($lt): new $alu
  creating $alu model for $lt$/home/vpai/tcl_project/source/omsp_alu.v:101$535 ($lt): new $alu
  creating $alu model for $lt$/home/vpai/tcl_project/source/omsp_alu.v:101$547 ($lt): new $alu
  creating $alu model for $lt$/home/vpai/tcl_project/source/omsp_alu.v:101$559 ($lt): new $alu
  creating $alu cell for $lt$/home/vpai/tcl_project/source/omsp_alu.v:101$559: $auto$alumacc.cc:474:replace_alu$9057
  creating $alu cell for $lt$/home/vpai/tcl_project/source/omsp_alu.v:101$547: $auto$alumacc.cc:474:replace_alu$9068
  creating $alu cell for $lt$/home/vpai/tcl_project/source/omsp_alu.v:101$535: $auto$alumacc.cc:474:replace_alu$9079
  creating $alu cell for $lt$/home/vpai/tcl_project/source/omsp_alu.v:101$523: $auto$alumacc.cc:474:replace_alu$9090
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:180$455: $auto$alumacc.cc:474:replace_alu$9101
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$522: $auto$alumacc.cc:474:replace_alu$9104
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:171$448: $auto$alumacc.cc:474:replace_alu$9107
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$534: $auto$alumacc.cc:474:replace_alu$9110
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:102$561: $auto$alumacc.cc:474:replace_alu$9113
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$546: $auto$alumacc.cc:474:replace_alu$9116
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:102$549: $auto$alumacc.cc:474:replace_alu$9119
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:100$558: $auto$alumacc.cc:474:replace_alu$9122
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:102$525: $auto$alumacc.cc:474:replace_alu$9125
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_alu.v:102$537: $auto$alumacc.cc:474:replace_alu$9128
  created 14 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_clock_module:
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_clock_module.v:1144$1928 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_clock_module.v:952$1906 ($add).
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_clock_module.v:952$1906.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_clock_module.v:1144$1928.
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_clock_module.v:1144$1928: $auto$alumacc.cc:474:replace_alu$9131
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_clock_module.v:952$1906: $auto$alumacc.cc:474:replace_alu$9134
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_dbg:
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_dbg.v:436$205 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_dbg.v:449$212 ($add).
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_dbg.v:449$212.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_dbg.v:436$205.
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_dbg.v:436$205: $auto$alumacc.cc:474:replace_alu$9137
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_dbg.v:449$212: $auto$alumacc.cc:474:replace_alu$9140
  created 2 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_dbg_i2c:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_execution_unit:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_frontend:
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_frontend.v:409$1616 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_frontend.v:458$1648 ($add).
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_frontend.v:811$1717 ($add).
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_frontend.v:811$1717.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_frontend.v:458$1648.
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_frontend.v:409$1616.
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_frontend.v:409$1616: $auto$alumacc.cc:474:replace_alu$9143
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_frontend.v:458$1648: $auto$alumacc.cc:474:replace_alu$9146
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_frontend.v:811$1717: $auto$alumacc.cc:474:replace_alu$9149
  created 3 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_mem_backbone:
  creating $macc model for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5 ($sub).
  creating $macc model for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12 ($sub).
  creating $macc model for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:258$25 ($sub).
  creating $macc model for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:263$28 ($sub).
  creating $macc model for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35 ($sub).
  creating $alu model for $macc $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35.
  creating $alu model for $macc $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:263$28.
  creating $alu model for $macc $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:258$25.
  creating $alu model for $macc $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12.
  creating $alu model for $macc $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5.
  creating $alu model for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:227$1 ($ge): new $alu
  creating $alu model for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:236$6 ($ge): new $alu
  creating $alu model for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:256$20 ($ge): new $alu
  creating $alu model for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:261$26 ($ge): new $alu
  creating $alu model for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:266$29 ($ge): new $alu
  creating $alu model for $lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:228$2 ($lt): merged with $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:256$20.
  creating $alu model for $lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:237$7 ($lt): merged with $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:266$29.
  creating $alu model for $lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:286$44 ($lt): merged with $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:227$1.
  creating $alu model for $lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:293$46 ($lt): merged with $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:236$6.
  creating $alu cell for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:266$29, $lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:237$7: $auto$alumacc.cc:474:replace_alu$9157
  creating $alu cell for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:261$26: $auto$alumacc.cc:474:replace_alu$9170
  creating $alu cell for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:256$20, $lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:228$2: $auto$alumacc.cc:474:replace_alu$9183
  creating $alu cell for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:236$6, $lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:293$46: $auto$alumacc.cc:474:replace_alu$9196
  creating $alu cell for $ge$/home/vpai/tcl_project/source/omsp_mem_backbone.v:227$1, $lt$/home/vpai/tcl_project/source/omsp_mem_backbone.v:286$44: $auto$alumacc.cc:474:replace_alu$9209
  creating $alu cell for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:230$5: $auto$alumacc.cc:474:replace_alu$9222
  creating $alu cell for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:239$12: $auto$alumacc.cc:474:replace_alu$9225
  creating $alu cell for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:258$25: $auto$alumacc.cc:474:replace_alu$9228
  creating $alu cell for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:263$28: $auto$alumacc.cc:474:replace_alu$9231
  creating $alu cell for $sub$/home/vpai/tcl_project/source/omsp_mem_backbone.v:268$35: $auto$alumacc.cc:474:replace_alu$9234
  created 10 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_multiplier:
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_multiplier.v:402$814 ($add).
  creating $macc model for $mul$/home/vpai/tcl_project/source/omsp_multiplier.v:396$811 ($mul).
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_multiplier.v:402$814.
  creating $macc cell for $mul$/home/vpai/tcl_project/source/omsp_multiplier.v:396$811: $auto$alumacc.cc:354:replace_macc$9237
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_multiplier.v:402$814: $auto$alumacc.cc:474:replace_alu$9238
  created 1 $alu and 1 $macc cells.
Extracting $alu and $macc cells in module omsp_register_file:
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_register_file.v:122$1145 ($add).
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_register_file.v:122$1145.
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_register_file.v:122$1145: $auto$alumacc.cc:474:replace_alu$9241
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_sfr:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_sync_cell:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_sync_reset:
  created 0 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module omsp_watchdog:
  creating $macc model for $add$/home/vpai/tcl_project/source/omsp_watchdog.v:500$397 ($add).
  creating $alu model for $macc $add$/home/vpai/tcl_project/source/omsp_watchdog.v:500$397.
  creating $alu cell for $add$/home/vpai/tcl_project/source/omsp_watchdog.v:500$397: $auto$alumacc.cc:474:replace_alu$9244
  created 1 $alu and 0 $macc cells.
Extracting $alu and $macc cells in module openMSP430:
  created 0 $alu and 0 $macc cells.

26.12. Executing SHARE pass (SAT-based resource sharing).

26.13. Executing OPT pass (performing simple optimizations).

26.13.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
<suppressed ~4 debug messages>
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
<suppressed ~1 debug messages>
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
<suppressed ~1 debug messages>
Optimizing module openMSP430.

26.13.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

26.13.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \omsp_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_clock_module..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_execution_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_frontend..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_mem_backbone..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_register_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sfr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sync_cell..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_reset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~313 debug messages>

26.13.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \omsp_alu.
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9060: { $auto$alumacc.cc:490:replace_alu$9058 [0] $auto$alumacc.cc:490:replace_alu$9058 [1] $auto$alumacc.cc:490:replace_alu$9058 [2] $auto$alumacc.cc:490:replace_alu$9058 [3] $auto$alumacc.cc:490:replace_alu$9058 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9071: { $auto$alumacc.cc:490:replace_alu$9069 [0] $auto$alumacc.cc:490:replace_alu$9069 [1] $auto$alumacc.cc:490:replace_alu$9069 [2] $auto$alumacc.cc:490:replace_alu$9069 [3] $auto$alumacc.cc:490:replace_alu$9069 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9082: { $auto$alumacc.cc:490:replace_alu$9080 [0] $auto$alumacc.cc:490:replace_alu$9080 [1] $auto$alumacc.cc:490:replace_alu$9080 [2] $auto$alumacc.cc:490:replace_alu$9080 [3] $auto$alumacc.cc:490:replace_alu$9080 [4] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9093: { $auto$alumacc.cc:490:replace_alu$9091 [0] $auto$alumacc.cc:490:replace_alu$9091 [1] $auto$alumacc.cc:490:replace_alu$9091 [2] $auto$alumacc.cc:490:replace_alu$9091 [3] $auto$alumacc.cc:490:replace_alu$9091 [4] }
  Optimizing cells in module \omsp_alu.
  Optimizing cells in module \omsp_clock_module.
  Optimizing cells in module \omsp_dbg.
  Optimizing cells in module \omsp_dbg_i2c.
  Optimizing cells in module \omsp_execution_unit.
  Optimizing cells in module \omsp_frontend.
  Optimizing cells in module \omsp_mem_backbone.
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$9168: { $auto$rtlil.cc:1832:Not$9167 $auto$rtlil.cc:1835:ReduceAnd$9161 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$9203: { $auto$rtlil.cc:1832:Not$9200 $auto$rtlil.cc:1835:ReduceAnd$9202 }
    New input vector for $reduce_or cell $auto$alumacc.cc:509:replace_alu$9216: { $auto$rtlil.cc:1832:Not$9213 $auto$rtlil.cc:1835:ReduceAnd$9215 }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9160: { $auto$alumacc.cc:490:replace_alu$9158 [0] $auto$alumacc.cc:490:replace_alu$9158 [1] $auto$alumacc.cc:490:replace_alu$9158 [2] $auto$alumacc.cc:490:replace_alu$9158 [3] $auto$alumacc.cc:490:replace_alu$9158 [4] $auto$alumacc.cc:490:replace_alu$9158 [5] $auto$alumacc.cc:490:replace_alu$9158 [6] $auto$alumacc.cc:490:replace_alu$9158 [7] $auto$alumacc.cc:490:replace_alu$9158 [8] $auto$alumacc.cc:490:replace_alu$9158 [9] $auto$alumacc.cc:490:replace_alu$9158 [10] $auto$alumacc.cc:490:replace_alu$9158 [11] $auto$alumacc.cc:490:replace_alu$9158 [12] $auto$alumacc.cc:490:replace_alu$9158 [13] $auto$alumacc.cc:490:replace_alu$9158 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9173: { $auto$alumacc.cc:490:replace_alu$9171 [0] $auto$alumacc.cc:490:replace_alu$9171 [1] $auto$alumacc.cc:490:replace_alu$9171 [2] $auto$alumacc.cc:490:replace_alu$9171 [3] $auto$alumacc.cc:490:replace_alu$9171 [4] $auto$alumacc.cc:490:replace_alu$9171 [5] $auto$alumacc.cc:490:replace_alu$9171 [6] $auto$alumacc.cc:490:replace_alu$9171 [7] $auto$alumacc.cc:490:replace_alu$9171 [8] $auto$alumacc.cc:490:replace_alu$9171 [9] $auto$alumacc.cc:490:replace_alu$9171 [10] $auto$alumacc.cc:490:replace_alu$9171 [11] $auto$alumacc.cc:490:replace_alu$9171 [12] $auto$alumacc.cc:490:replace_alu$9171 [13] $auto$alumacc.cc:490:replace_alu$9171 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9186: { $auto$alumacc.cc:490:replace_alu$9184 [0] $auto$alumacc.cc:490:replace_alu$9184 [1] $auto$alumacc.cc:490:replace_alu$9184 [2] $auto$alumacc.cc:490:replace_alu$9184 [3] $auto$alumacc.cc:490:replace_alu$9184 [4] $auto$alumacc.cc:490:replace_alu$9184 [5] $auto$alumacc.cc:490:replace_alu$9184 [6] $auto$alumacc.cc:490:replace_alu$9184 [7] $auto$alumacc.cc:490:replace_alu$9184 [8] $auto$alumacc.cc:490:replace_alu$9184 [9] $auto$alumacc.cc:490:replace_alu$9184 [10] $auto$alumacc.cc:490:replace_alu$9184 [11] $auto$alumacc.cc:490:replace_alu$9184 [12] $auto$alumacc.cc:490:replace_alu$9184 [13] $auto$alumacc.cc:490:replace_alu$9184 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9201: { $auto$alumacc.cc:490:replace_alu$9197 [0] $auto$alumacc.cc:490:replace_alu$9197 [1] $auto$alumacc.cc:490:replace_alu$9197 [2] $auto$alumacc.cc:490:replace_alu$9197 [3] $auto$alumacc.cc:490:replace_alu$9197 [4] $auto$alumacc.cc:490:replace_alu$9197 [5] $auto$alumacc.cc:490:replace_alu$9197 [6] $auto$alumacc.cc:490:replace_alu$9197 [7] $auto$alumacc.cc:490:replace_alu$9197 [8] $auto$alumacc.cc:490:replace_alu$9197 [9] $auto$alumacc.cc:490:replace_alu$9197 [10] $auto$alumacc.cc:490:replace_alu$9197 [11] $auto$alumacc.cc:490:replace_alu$9197 [12] $auto$alumacc.cc:490:replace_alu$9197 [13] $auto$alumacc.cc:490:replace_alu$9197 [14] }
    New input vector for $reduce_and cell $auto$alumacc.cc:64:get_eq$9214: { $auto$alumacc.cc:490:replace_alu$9210 [0] $auto$alumacc.cc:490:replace_alu$9210 [1] $auto$alumacc.cc:490:replace_alu$9210 [2] $auto$alumacc.cc:490:replace_alu$9210 [3] $auto$alumacc.cc:490:replace_alu$9210 [4] $auto$alumacc.cc:490:replace_alu$9210 [5] $auto$alumacc.cc:490:replace_alu$9210 [6] $auto$alumacc.cc:490:replace_alu$9210 [7] $auto$alumacc.cc:490:replace_alu$9210 [8] $auto$alumacc.cc:490:replace_alu$9210 [9] $auto$alumacc.cc:490:replace_alu$9210 [10] $auto$alumacc.cc:490:replace_alu$9210 [11] $auto$alumacc.cc:490:replace_alu$9210 [12] $auto$alumacc.cc:490:replace_alu$9210 [13] $auto$alumacc.cc:490:replace_alu$9210 [14] }
  Optimizing cells in module \omsp_mem_backbone.
  Optimizing cells in module \omsp_multiplier.
  Optimizing cells in module \omsp_register_file.
  Optimizing cells in module \omsp_sfr.
  Optimizing cells in module \omsp_sync_cell.
  Optimizing cells in module \omsp_sync_reset.
  Optimizing cells in module \omsp_watchdog.
  Optimizing cells in module \openMSP430.
Performed a total of 12 changes.

26.13.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

26.13.6. Executing OPT_RMDFF pass (remove dff with constant values).

26.13.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 8 unused cells and 23 unused wires.
<suppressed ~12 debug messages>

26.13.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.13.9. Rerunning OPT passes. (Maybe there is more to do..)

26.13.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \omsp_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_clock_module..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_execution_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_frontend..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_mem_backbone..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_register_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sfr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sync_cell..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_reset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~313 debug messages>

26.13.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \omsp_alu.
  Optimizing cells in module \omsp_clock_module.
  Optimizing cells in module \omsp_dbg.
  Optimizing cells in module \omsp_dbg_i2c.
  Optimizing cells in module \omsp_execution_unit.
  Optimizing cells in module \omsp_frontend.
  Optimizing cells in module \omsp_mem_backbone.
  Optimizing cells in module \omsp_multiplier.
  Optimizing cells in module \omsp_register_file.
  Optimizing cells in module \omsp_sfr.
  Optimizing cells in module \omsp_sync_cell.
  Optimizing cells in module \omsp_sync_reset.
  Optimizing cells in module \omsp_watchdog.
  Optimizing cells in module \openMSP430.
Performed a total of 0 changes.

26.13.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

26.13.13. Executing OPT_RMDFF pass (remove dff with constant values).

26.13.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..

26.13.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.13.16. Finished OPT passes. (There is nothing left to do.)

26.14. Executing FSM pass (extract and optimize FSM).

26.14.1. Executing FSM_DETECT pass (finding FSMs in design).
Found FSM state register omsp_dbg.mem_state.
Found FSM state register omsp_dbg_i2c.dbg_state.
Found FSM state register omsp_dbg_i2c.i2c_state.
Not marking omsp_frontend.e_state as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Found FSM state register omsp_frontend.i_state.
Not marking omsp_frontend.inst_ad as FSM state register:
    Register is connected to module port.
    Users of register don't seem to benefit from recoding.
Not marking omsp_frontend.irq_num as FSM state register:
    Users of register don't seem to benefit from recoding.

26.14.2. Executing FSM_EXTRACT pass (extracting FSM from design).
Extracting FSM `\mem_state' from module `\omsp_dbg'.
  found $adff cell for state register: $procdff$8592
  root of input selection tree: \mem_state_nxt
  found reset state: 2'00 (from async reset)
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$8639
  found ctrl input: $procmux$2137_CMP
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg.v:764$282_Y
  found ctrl input: \dbg_halt_st
  found state code: 2'01
  found state code: 2'10
  found ctrl input: \mem_seq_start
  found state code: 2'11
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg.v:765$285_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg.v:764$282_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg.v:766$288_Y
  found ctrl output: $procmux$2137_CMP
  ctrl inputs: { $auto$opt_reduce.cc:132:opt_mux$8639 \mem_seq_start \dbg_halt_st }
  ctrl outputs: { $procmux$2137_CMP $eq$/home/vpai/tcl_project/source/omsp_dbg.v:766$288_Y $eq$/home/vpai/tcl_project/source/omsp_dbg.v:764$282_Y $eq$/home/vpai/tcl_project/source/omsp_dbg.v:765$285_Y \mem_state_nxt }
  transition:       2'00 3'-0- ->       2'00 6'001000
  transition:       2'00 3'-10 ->       2'01 6'001001
  transition:       2'00 3'-11 ->       2'11 6'001011
  transition:       2'10 3'--- ->       2'00 6'000100
  transition:       2'01 3'--0 ->       2'01 6'100001
  transition:       2'01 3'--1 ->       2'10 6'100010
  transition:       2'11 3'--- ->       2'00 6'010000
Extracting FSM `\dbg_state' from module `\omsp_dbg_i2c'.
  found $adff cell for state register: $procdff$8553
  root of input selection tree: \dbg_state_nxt
  found reset state: 3'000 (from async reset)
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:459$736_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:458$732_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:401$718_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:400$716_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:399$714_Y
  found ctrl input: \shift_tx_data_done
  found state code: 3'100
  found ctrl input: \mem_burst
  found state code: 3'011
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:379$702_Y
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:380$704_Y
  found ctrl input: \dbg_bw
  found ctrl input: \shift_rx_data_done
  found state code: 3'010
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:368$690_Y
  found state code: 3'001
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:366$687_Y
  found ctrl input: \mem_bw
  found ctrl input: \mem_burst_wr
  found ctrl input: \mem_burst_rd
  found ctrl input: \shift_buf [7]
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:400$716_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:399$714_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:401$718_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:458$732_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:459$736_Y
  ctrl inputs: { $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:380$704_Y $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:379$702_Y $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:368$690_Y $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:366$687_Y \shift_tx_data_done \shift_rx_data_done \shift_buf [7] \dbg_bw \mem_bw \mem_burst_wr \mem_burst_rd \mem_burst }
  ctrl outputs: { $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:459$736_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:458$732_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:401$718_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:400$716_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:399$714_Y \dbg_state_nxt }
  transition:      3'000 12'-----0---00- ->      3'000 8'00001000
  transition:      3'000 12'-----10--00- ->      3'011 8'00001011
  transition:      3'000 12'-----11--00- ->      3'001 8'00001001
  transition:      3'000 12'---------01- ->      3'011 8'00001011
  transition:      3'000 12'---------1-- ->      3'001 8'00001001
  transition:      3'100 12'----0------- ->      3'100 8'10000100
  transition:      3'100 12'----1------0 ->      3'000 8'10000000
  transition:      3'100 12'----1------1 ->      3'011 8'10000011
  transition:      3'010 12'-----0------ ->      3'010 8'00100010
  transition:      3'010 12'--0--1------ ->      3'000 8'00100000
  transition:      3'010 12'--1--1------ ->      3'001 8'00100001
  transition:      3'001 12'---0-0------ ->      3'001 8'00010001
  transition:      3'001 12'--00-1-0---- ->      3'010 8'00010010
  transition:      3'001 12'--00-1-1---- ->      3'000 8'00010000
  transition:      3'001 12'--10-1--0--- ->      3'010 8'00010010
  transition:      3'001 12'--10-1--1--- ->      3'001 8'00010001
  transition:      3'001 12'---1-------- ->      3'000 8'00010000
  transition:      3'011 12'----0------- ->      3'011 8'01000011
  transition:      3'011 12'00--1--0---- ->      3'100 8'01000100
  transition:      3'011 12'00--1--1---- ->      3'000 8'01000000
  transition:      3'011 12'10--1------- ->      3'100 8'01000100
  transition:      3'011 12'-1--1------- ->      3'011 8'01000011
Extracting FSM `\i2c_state' from module `\omsp_dbg_i2c'.
  found $adff cell for state register: $procdff$8556
  root of input selection tree: \i2c_state_nxt
  found reset state: 3'000 (from async reset)
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:283$634_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:283$633_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$631_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$629_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:289$644_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$628_Y
  found ctrl input: \i2c_init
  found ctrl input: \scl_fe
  found state code: 3'101
  found ctrl input: \sda_in
  found state code: 3'100
  found ctrl input: \shift_tx_data_done
  found state code: 3'011
  found state code: 3'010
  found ctrl input: \shift_rx_done
  found state code: 3'001
  found ctrl input: \shift_buf [0]
  found ctrl input: \i2c_addr_not_valid
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$628_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$629_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$631_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:283$633_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:283$634_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:289$644_Y
  ctrl inputs: { \shift_tx_data_done \shift_rx_done \shift_buf [0] \i2c_init \i2c_addr_not_valid \scl_fe \sda_in }
  ctrl outputs: { $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:289$644_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:283$634_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:283$633_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$629_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$628_Y $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$631_Y \i2c_state_nxt }
  transition:      3'000 7'-0-0--- ->      3'000 9'000010000
  transition:      3'000 7'-1-00-- ->      3'001 9'000010001
  transition:      3'000 7'-1-01-- ->      3'000 9'000010000
  transition:      3'000 7'---1--- ->      3'000 9'000010000
  transition:      3'100 7'0--0--- ->      3'100 9'001000100
  transition:      3'100 7'1--0--- ->      3'101 9'001000101
  transition:      3'100 7'---1--- ->      3'000 9'001000000
  transition:      3'010 7'-0-0--- ->      3'010 9'000100010
  transition:      3'010 7'-1-0--- ->      3'011 9'000100011
  transition:      3'010 7'---1--- ->      3'000 9'000100000
  transition:      3'001 7'---0-0- ->      3'001 9'100000001
  transition:      3'001 7'--00-1- ->      3'010 9'100000010
  transition:      3'001 7'--10-1- ->      3'100 9'100000100
  transition:      3'001 7'---1--- ->      3'000 9'100000000
  transition:      3'101 7'---0-0- ->      3'101 9'010000101
  transition:      3'101 7'---0-10 ->      3'100 9'010000100
  transition:      3'101 7'---0-11 ->      3'000 9'010000000
  transition:      3'101 7'---1--- ->      3'000 9'010000000
  transition:      3'011 7'---0-0- ->      3'011 9'000001011
  transition:      3'011 7'---0-1- ->      3'010 9'000001010
  transition:      3'011 7'---1--- ->      3'000 9'000001000
Extracting FSM `\i_state' from module `\omsp_frontend'.
  found $adff cell for state register: $procdff$8631
  root of input selection tree: \i_state_nxt
  found reset state: 3'000 (from async reset)
  found ctrl input: $auto$opt_reduce.cc:132:opt_mux$8959
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:453$1634_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:281$1385_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:347$1614_Y
  found ctrl input: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:307$1411_Y
  found state code: 3'010
  found ctrl input: \pc_sw_wr
  found ctrl input: $ne$/home/vpai/tcl_project/source/omsp_frontend.v:268$1381_Y
  found state code: 3'100
  found ctrl input: \irq_detect
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_frontend.v:262$1367_Y
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_frontend.v:263$1369_Y
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_frontend.v:265$1373_Y
  found ctrl input: $ne$/home/vpai/tcl_project/source/omsp_frontend.v:266$1374_Y
  found state code: 3'011
  found state code: 3'101
  found state code: 3'001
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_frontend.v:257$1360_Y
  found ctrl input: $and$/home/vpai/tcl_project/source/omsp_frontend.v:258$1363_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:281$1385_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:307$1411_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:347$1614_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:412$1618_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:453$1634_Y
  found ctrl output: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:454$1636_Y
  ctrl inputs: { $auto$opt_reduce.cc:132:opt_mux$8959 $ne$/home/vpai/tcl_project/source/omsp_frontend.v:268$1381_Y $ne$/home/vpai/tcl_project/source/omsp_frontend.v:266$1374_Y $and$/home/vpai/tcl_project/source/omsp_frontend.v:265$1373_Y $and$/home/vpai/tcl_project/source/omsp_frontend.v:263$1369_Y $and$/home/vpai/tcl_project/source/omsp_frontend.v:262$1367_Y $and$/home/vpai/tcl_project/source/omsp_frontend.v:258$1363_Y $and$/home/vpai/tcl_project/source/omsp_frontend.v:257$1360_Y \irq_detect \pc_sw_wr }
  ctrl outputs: { $eq$/home/vpai/tcl_project/source/omsp_frontend.v:454$1636_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:453$1634_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:412$1618_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:347$1614_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:307$1411_Y $eq$/home/vpai/tcl_project/source/omsp_frontend.v:281$1385_Y \i_state_nxt }
  transition:      3'000 10'---------- ->      3'001 9'000100001
  transition:      3'100 10'---------- ->      3'010 9'100000010
  transition:      3'010 10'--0000--00 ->      3'010 9'000001010
  transition:      3'010 10'--1000--00 ->      3'011 9'000001011
  transition:      3'010 10'---100--00 ->      3'010 9'000001010
  transition:      3'010 10'----00--01 ->      3'010 9'000001010
  transition:      3'010 10'----10--0- ->      3'101 9'000001101
  transition:      3'010 10'-----1--0- ->      3'101 9'000001101
  transition:      3'010 10'--------1- ->      3'000 9'000001000
  transition:      3'001 10'---------- ->      3'010 9'001000010
  transition:      3'101 10'------00-- ->      3'101 9'000010101
  transition:      3'101 10'------10-- ->      3'010 9'000010010
  transition:      3'101 10'-------1-- ->      3'000 9'000010000
  transition:      3'011 10'-0-------0 ->      3'010 9'010000010
  transition:      3'011 10'-1-------0 ->      3'100 9'010000100
  transition:      3'011 10'---------1 ->      3'010 9'010000010

26.14.3. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mem_state$9247' from module `\omsp_dbg'.
  Removing unused input signal $auto$opt_reduce.cc:132:opt_mux$8639.
Optimizing FSM `$fsm$\i2c_state$9260' from module `\omsp_dbg_i2c'.
Optimizing FSM `$fsm$\dbg_state$9253' from module `\omsp_dbg_i2c'.
Optimizing FSM `$fsm$\i_state$9268' from module `\omsp_frontend'.
  Removing unused input signal $auto$opt_reduce.cc:132:opt_mux$8959.

26.14.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 76 unused cells and 76 unused wires.
<suppressed ~79 debug messages>

26.14.5. Executing FSM_OPT pass (simple optimizations of FSMs).
Optimizing FSM `$fsm$\mem_state$9247' from module `\omsp_dbg'.
  Removing unused output signal $procmux$2137_CMP.
Optimizing FSM `$fsm$\dbg_state$9253' from module `\omsp_dbg_i2c'.
  Removing unused output signal \dbg_state_nxt [0].
  Removing unused output signal \dbg_state_nxt [1].
  Removing unused output signal \dbg_state_nxt [2].
Optimizing FSM `$fsm$\i2c_state$9260' from module `\omsp_dbg_i2c'.
Optimizing FSM `$fsm$\i_state$9268' from module `\omsp_frontend'.

26.14.6. Executing FSM_RECODE pass (re-assigning FSM state encoding).
Recoding FSM `$fsm$\mem_state$9247' from module `\omsp_dbg' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  00 -> ---1
  10 -> --1-
  01 -> -1--
  11 -> 1---
Recoding FSM `$fsm$\dbg_state$9253' from module `\omsp_dbg_i2c' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> ----1
  100 -> ---1-
  010 -> --1--
  001 -> -1---
  011 -> 1----
Recoding FSM `$fsm$\i2c_state$9260' from module `\omsp_dbg_i2c' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----
Recoding FSM `$fsm$\i_state$9268' from module `\omsp_frontend' using `auto' encoding:
  mapping auto encoding to `one-hot` for this FSM.
  000 -> -----1
  100 -> ----1-
  010 -> ---1--
  001 -> --1---
  101 -> -1----
  011 -> 1-----

26.14.7. Executing FSM_INFO pass (dumping all available information on FSM cells).

FSM `$fsm$\mem_state$9247' from module `\omsp_dbg':
-------------------------------------

  Information on FSM $fsm$\mem_state$9247 (\mem_state):

  Number of input signals:    2
  Number of output signals:   5
  Number of state bits:       4

  Input signals:
    0: \dbg_halt_st
    1: \mem_seq_start

  Output signals:
    0: \mem_state_nxt [0]
    1: \mem_state_nxt [1]
    2: $eq$/home/vpai/tcl_project/source/omsp_dbg.v:765$285_Y
    3: $eq$/home/vpai/tcl_project/source/omsp_dbg.v:764$282_Y
    4: $eq$/home/vpai/tcl_project/source/omsp_dbg.v:766$288_Y

  State encoding:
    0:     4'---1  <RESET STATE>
    1:     4'--1-
    2:     4'-1--
    3:     4'1---

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 2'0-   ->     0 5'01000
      1:     0 2'10   ->     2 5'01001
      2:     0 2'11   ->     3 5'01011
      3:     1 2'--   ->     0 5'00100
      4:     2 2'-1   ->     1 5'00010
      5:     2 2'-0   ->     2 5'00001
      6:     3 2'--   ->     0 5'10000

-------------------------------------

FSM `$fsm$\dbg_state$9253' from module `\omsp_dbg_i2c':
-------------------------------------

  Information on FSM $fsm$\dbg_state$9253 (\dbg_state):

  Number of input signals:   12
  Number of output signals:   5
  Number of state bits:       5

  Input signals:
    0: \mem_burst
    1: \mem_burst_rd
    2: \mem_burst_wr
    3: \mem_bw
    4: \dbg_bw
    5: \shift_buf [7]
    6: \shift_rx_data_done
    7: \shift_tx_data_done
    8: $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:366$687_Y
    9: $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:368$690_Y
   10: $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:379$702_Y
   11: $and$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:380$704_Y

  Output signals:
    0: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:399$714_Y
    1: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:400$716_Y
    2: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:401$718_Y
    3: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:458$732_Y
    4: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:459$736_Y

  State encoding:
    0:    5'----1  <RESET STATE>
    1:    5'---1-
    2:    5'--1--
    3:    5'-1---
    4:    5'1----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 12'-----0---00-   ->     0 5'00001
      1:     0 12'-----11--00-   ->     3 5'00001
      2:     0 12'---------1--   ->     3 5'00001
      3:     0 12'-----10--00-   ->     4 5'00001
      4:     0 12'---------01-   ->     4 5'00001
      5:     1 12'----1------0   ->     0 5'10000
      6:     1 12'----0-------   ->     1 5'10000
      7:     1 12'----1------1   ->     4 5'10000
      8:     2 12'--0--1------   ->     0 5'00100
      9:     2 12'-----0------   ->     2 5'00100
     10:     2 12'--1--1------   ->     3 5'00100
     11:     3 12'--00-1-1----   ->     0 5'00010
     12:     3 12'---1--------   ->     0 5'00010
     13:     3 12'--10-1--0---   ->     2 5'00010
     14:     3 12'--00-1-0----   ->     2 5'00010
     15:     3 12'--10-1--1---   ->     3 5'00010
     16:     3 12'---0-0------   ->     3 5'00010
     17:     4 12'00--1--1----   ->     0 5'01000
     18:     4 12'00--1--0----   ->     1 5'01000
     19:     4 12'10--1-------   ->     1 5'01000
     20:     4 12'----0-------   ->     4 5'01000
     21:     4 12'-1--1-------   ->     4 5'01000

-------------------------------------

FSM `$fsm$\i2c_state$9260' from module `\omsp_dbg_i2c':
-------------------------------------

  Information on FSM $fsm$\i2c_state$9260 (\i2c_state):

  Number of input signals:    7
  Number of output signals:   9
  Number of state bits:       6

  Input signals:
    0: \sda_in
    1: \scl_fe
    2: \i2c_addr_not_valid
    3: \i2c_init
    4: \shift_buf [0]
    5: \shift_rx_done
    6: \shift_tx_data_done

  Output signals:
    0: \i2c_state_nxt [0]
    1: \i2c_state_nxt [1]
    2: \i2c_state_nxt [2]
    3: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$631_Y
    4: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$628_Y
    5: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:282$629_Y
    6: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:283$633_Y
    7: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:283$634_Y
    8: $eq$/home/vpai/tcl_project/source/omsp_dbg_i2c.v:289$644_Y

  State encoding:
    0:   6'-----1  <RESET STATE>
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 7'-1-01--   ->     0 9'000010000
      1:     0 7'-0-0---   ->     0 9'000010000
      2:     0 7'---1---   ->     0 9'000010000
      3:     0 7'-1-00--   ->     3 9'000010001
      4:     1 7'---1---   ->     0 9'001000000
      5:     1 7'0--0---   ->     1 9'001000100
      6:     1 7'1--0---   ->     4 9'001000101
      7:     2 7'---1---   ->     0 9'000100000
      8:     2 7'-0-0---   ->     2 9'000100010
      9:     2 7'-1-0---   ->     5 9'000100011
     10:     3 7'---1---   ->     0 9'100000000
     11:     3 7'--10-1-   ->     1 9'100000100
     12:     3 7'--00-1-   ->     2 9'100000010
     13:     3 7'---0-0-   ->     3 9'100000001
     14:     4 7'---0-11   ->     0 9'010000000
     15:     4 7'---1---   ->     0 9'010000000
     16:     4 7'---0-10   ->     1 9'010000100
     17:     4 7'---0-0-   ->     4 9'010000101
     18:     5 7'---1---   ->     0 9'000001000
     19:     5 7'---0-1-   ->     2 9'000001010
     20:     5 7'---0-0-   ->     5 9'000001011

-------------------------------------

FSM `$fsm$\i_state$9268' from module `\omsp_frontend':
-------------------------------------

  Information on FSM $fsm$\i_state$9268 (\i_state):

  Number of input signals:    9
  Number of output signals:   9
  Number of state bits:       6

  Input signals:
    0: \pc_sw_wr
    1: \irq_detect
    2: $and$/home/vpai/tcl_project/source/omsp_frontend.v:257$1360_Y
    3: $and$/home/vpai/tcl_project/source/omsp_frontend.v:258$1363_Y
    4: $and$/home/vpai/tcl_project/source/omsp_frontend.v:262$1367_Y
    5: $and$/home/vpai/tcl_project/source/omsp_frontend.v:263$1369_Y
    6: $and$/home/vpai/tcl_project/source/omsp_frontend.v:265$1373_Y
    7: $ne$/home/vpai/tcl_project/source/omsp_frontend.v:266$1374_Y
    8: $ne$/home/vpai/tcl_project/source/omsp_frontend.v:268$1381_Y

  Output signals:
    0: \i_state_nxt [0]
    1: \i_state_nxt [1]
    2: \i_state_nxt [2]
    3: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:281$1385_Y
    4: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:307$1411_Y
    5: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:347$1614_Y
    6: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:412$1618_Y
    7: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:453$1634_Y
    8: $eq$/home/vpai/tcl_project/source/omsp_frontend.v:454$1636_Y

  State encoding:
    0:   6'-----1  <RESET STATE>
    1:   6'----1-
    2:   6'---1--
    3:   6'--1---
    4:   6'-1----
    5:   6'1-----

  Transition Table (state_in, ctrl_in, state_out, ctrl_out):
      0:     0 9'---------   ->     3 9'000100001
      1:     1 9'---------   ->     2 9'100000010
      2:     2 9'-------1-   ->     0 9'000001000
      3:     2 9'-0000--00   ->     2 9'000001010
      4:     2 9'--100--00   ->     2 9'000001010
      5:     2 9'---00--01   ->     2 9'000001010
      6:     2 9'---10--0-   ->     4 9'000001101
      7:     2 9'----1--0-   ->     4 9'000001101
      8:     2 9'-1000--00   ->     5 9'000001011
      9:     3 9'---------   ->     2 9'001000010
     10:     4 9'------1--   ->     0 9'000010000
     11:     4 9'-----10--   ->     2 9'000010010
     12:     4 9'-----00--   ->     4 9'000010101
     13:     5 9'1-------0   ->     1 9'010000100
     14:     5 9'0-------0   ->     2 9'010000010
     15:     5 9'--------1   ->     2 9'010000010

-------------------------------------

26.14.8. Executing FSM_MAP pass (mapping FSMs to basic logic).
Mapping FSM `$fsm$\mem_state$9247' from module `\omsp_dbg'.
Mapping FSM `$fsm$\dbg_state$9253' from module `\omsp_dbg_i2c'.
Mapping FSM `$fsm$\i2c_state$9260' from module `\omsp_dbg_i2c'.
Mapping FSM `$fsm$\i_state$9268' from module `\omsp_frontend'.

26.15. Executing OPT pass (performing simple optimizations).

26.15.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
<suppressed ~5 debug messages>
Optimizing module omsp_dbg_i2c.
<suppressed ~19 debug messages>
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
<suppressed ~11 debug messages>
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.15.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
<suppressed ~27 debug messages>
Finding identical cells in module `\omsp_dbg_i2c'.
<suppressed ~93 debug messages>
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
<suppressed ~87 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 69 cells.

26.15.3. Executing OPT_RMDFF pass (remove dff with constant values).

26.15.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 0 unused cells and 108 unused wires.
<suppressed ~4 debug messages>

26.15.5. Finished fast OPT passes.

26.16. Executing MEMORY pass.

26.16.1. Executing MEMORY_DFF pass (merging $dff cells to $memrd and $memwr).

26.16.2. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..

26.16.3. Executing MEMORY_SHARE pass (consolidating $memrd/$memwr cells).

26.16.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..

26.16.5. Executing MEMORY_COLLECT pass (generating $mem cells).

26.17. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..

26.18. Executing OPT pass (performing simple optimizations).

26.18.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
<suppressed ~98 debug messages>
Optimizing module omsp_clock_module.
<suppressed ~76 debug messages>
Optimizing module omsp_dbg.
<suppressed ~42 debug messages>
Optimizing module omsp_dbg_i2c.
<suppressed ~2 debug messages>
Optimizing module omsp_execution_unit.
<suppressed ~1 debug messages>
Optimizing module omsp_frontend.
<suppressed ~392 debug messages>
Optimizing module omsp_mem_backbone.
<suppressed ~9 debug messages>
Optimizing module omsp_multiplier.
<suppressed ~121 debug messages>
Optimizing module omsp_register_file.
<suppressed ~24 debug messages>
Optimizing module omsp_sfr.
<suppressed ~143 debug messages>
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
<suppressed ~21 debug messages>
Optimizing module openMSP430.

26.18.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
<suppressed ~3 debug messages>
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
<suppressed ~141 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 48 cells.

26.18.3. Executing OPT_RMDFF pass (remove dff with constant values).

26.18.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 7 unused cells and 361 unused wires.
<suppressed ~15 debug messages>

26.18.5. Finished fast OPT passes.

26.19. Executing MEMORY_MAP pass (converting $mem cells to logic and flip-flops).

26.20. Executing OPT pass (performing simple optimizations).

26.20.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.20.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
<suppressed ~3 debug messages>
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
<suppressed ~3 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 2 cells.

26.20.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \omsp_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_clock_module..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_execution_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_frontend..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_mem_backbone..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_register_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sfr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sync_cell..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_reset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~145 debug messages>

26.20.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \omsp_alu.
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$509:
      Old ports: A={ \V \N \Z \C }, B={ \V_xor \N \Z $not$/home/vpai/tcl_project/source/omsp_alu.v:247$507_Y }, Y=$ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$509_Y
      New ports: A={ \V \C }, B={ \V_xor $not$/home/vpai/tcl_project/source/omsp_alu.v:247$507_Y }, Y={ $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$509_Y [3] $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$509_Y [0] }
      New connections: $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$509_Y [2:1] = { \N \Z }
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_alu.v:250$513:
      Old ports: A=4'0000, B=4'1111, Y=\alu_stat_wr
      New ports: A=1'0, B=1'1, Y=\alu_stat_wr [0]
      New connections: \alu_stat_wr [3:1] = { \alu_stat_wr [0] \alu_stat_wr [0] \alu_stat_wr [0] }
  Optimizing cells in module \omsp_alu.
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$510:
      Old ports: A=$ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$509_Y, B={ 1'0 \N \Z $not$/home/vpai/tcl_project/source/omsp_alu.v:247$507_Y }, Y=$ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$510_Y
      New ports: A={ $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$509_Y [3] $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$509_Y [0] }, B={ 1'0 $not$/home/vpai/tcl_project/source/omsp_alu.v:247$507_Y }, Y={ $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$510_Y [3] $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$510_Y [0] }
      New connections: $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$510_Y [2:1] = { \N \Z }
  Optimizing cells in module \omsp_alu.
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$511:
      Old ports: A=$ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$510_Y, B={ 1'0 \N \Z \op_src_inv [0] }, Y=\alu_stat
      New ports: A={ $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$510_Y [3] $ternary$/home/vpai/tcl_project/source/omsp_alu.v:248$510_Y [0] }, B={ 1'0 \op_src_inv [0] }, Y={ \alu_stat [3] \alu_stat [0] }
      New connections: \alu_stat [2:1] = { \N \Z }
  Optimizing cells in module \omsp_alu.
  Optimizing cells in module \omsp_clock_module.
  Optimizing cells in module \omsp_dbg.
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9314: { $auto$fsm_map.cc:118:implement_pattern_cache$9295 $auto$fsm_map.cc:118:implement_pattern_cache$9291 $auto$fsm_map.cc:118:implement_pattern_cache$9300 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9284: { $auto$fsm_map.cc:118:implement_pattern_cache$9282 \mem_state [1] \mem_state [3] }
    Consolidated identical input bits for $pmux cell $procmux$2177:
      Old ports: A=25'0000000000000000000000000, B=225'000000000000000000000000100000000000000000000000100000000000000000000000100000000000000000000000100000000000000000000000100000000000000000000000100000000000000000000000100000000000000000000000100000001000000000000000000000000, Y=\reg_dec
      New ports: A=9'000000000, B=81'000000001000000010000000100000001000000010000000100000001000000010000000100000000, Y={ \reg_dec [24] \reg_dec [7:0] }
      New connections: \reg_dec [23:8] = 16'0000000000000000
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y
      New ports: A=1'0, B=1'1, Y=$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0]
      New connections: $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [15:1] = { $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0] }
  Optimizing cells in module \omsp_dbg.
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$210:
      Old ports: A=$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y, B=16'0000000000000000, Y=\mem_cnt_dec
      New ports: A=$ternary$/home/vpai/tcl_project/source/omsp_dbg.v:444$209_Y [0], B=1'0, Y=\mem_cnt_dec [0]
      New connections: \mem_cnt_dec [15:1] = { \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] \mem_cnt_dec [0] }
  Optimizing cells in module \omsp_dbg.
  Optimizing cells in module \omsp_dbg_i2c.
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9553: { $auto$fsm_map.cc:118:implement_pattern_cache$9481 $auto$fsm_map.cc:118:implement_pattern_cache$9446 $auto$fsm_map.cc:118:implement_pattern_cache$9450 $auto$fsm_map.cc:118:implement_pattern_cache$9442 $auto$fsm_map.cc:118:implement_pattern_cache$9477 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9532: { $auto$fsm_map.cc:118:implement_pattern_cache$9455 $auto$fsm_map.cc:118:implement_pattern_cache$9490 $auto$fsm_map.cc:118:implement_pattern_cache$9486 $auto$fsm_map.cc:118:implement_pattern_cache$9463 $auto$fsm_map.cc:118:implement_pattern_cache$9459 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9511: { $auto$fsm_map.cc:118:implement_pattern_cache$9481 $auto$fsm_map.cc:118:implement_pattern_cache$9490 $auto$fsm_map.cc:118:implement_pattern_cache$9497 $auto$fsm_map.cc:118:implement_pattern_cache$9472 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9465: { $auto$fsm_map.cc:118:implement_pattern_cache$9455 $auto$fsm_map.cc:118:implement_pattern_cache$9463 $auto$fsm_map.cc:118:implement_pattern_cache$9459 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9452: { $auto$fsm_map.cc:118:implement_pattern_cache$9446 $auto$fsm_map.cc:118:implement_pattern_cache$9450 $auto$fsm_map.cc:118:implement_pattern_cache$9442 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9439: { $auto$fsm_map.cc:118:implement_pattern_cache$9435 $auto$fsm_map.cc:118:implement_pattern_cache$9431 $auto$fsm_map.cc:118:implement_pattern_cache$9427 \i2c_init }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9420: { $auto$fsm_map.cc:118:implement_pattern_cache$9418 $auto$fsm_map.cc:118:implement_pattern_cache$9410 $auto$fsm_map.cc:118:implement_pattern_cache$9406 $auto$fsm_map.cc:118:implement_pattern_cache$9402 $auto$fsm_map.cc:118:implement_pattern_cache$9414 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9365: { $auto$fsm_map.cc:118:implement_pattern_cache$9355 $auto$fsm_map.cc:118:implement_pattern_cache$9359 $auto$fsm_map.cc:118:implement_pattern_cache$9363 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9352: { $auto$fsm_map.cc:118:implement_pattern_cache$9330 $auto$fsm_map.cc:118:implement_pattern_cache$9350 $auto$fsm_map.cc:118:implement_pattern_cache$9338 $auto$fsm_map.cc:118:implement_pattern_cache$9342 $auto$fsm_map.cc:118:implement_pattern_cache$9334 $auto$fsm_map.cc:118:implement_pattern_cache$9346 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:105:implement_pattern_cache$9496: { \i2c_state [3] \i2c_state [4] \i2c_state [5] }
  Optimizing cells in module \omsp_dbg_i2c.
  Optimizing cells in module \omsp_execution_unit.
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989:
      Old ports: A=16'0000000000000000, B=16'1111111111111110, Y=$ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y
      New ports: A=1'0, B=1'1, Y=$ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1]
      New connections: { $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [15:2] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [0] } = { $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:292$989_Y [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_execution_unit.v:374$1037:
      Old ports: A=\mdb_out_nxt, B={ \mdb_out_nxt [7:0] \mdb_out_nxt [7:0] }, Y=\mdb_out
      New ports: A=\mdb_out_nxt [15:8], B=\mdb_out_nxt [7:0], Y=\mdb_out [15:8]
      New connections: \mdb_out [7:0] = \mdb_out_nxt [7:0]
  Optimizing cells in module \omsp_execution_unit.
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8962: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8960: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8956: { $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8954: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8952: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8944: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8940: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8938: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8936: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8934: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8928: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8916: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8892: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8890: { $auto$wreduce.cc:455:run$9003 [7] $procmux$3623_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3626_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8886: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8872: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8868: { $auto$wreduce.cc:455:run$9003 [7] $procmux$3623_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8866: { $procmux$2203_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8854: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8852: { $auto$wreduce.cc:455:run$9003 [7] $procmux$3623_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8850: { $auto$wreduce.cc:455:run$9003 [7] $procmux$3623_CMP $procmux$3621_CMP $procmux$3622_CMP $procmux$3625_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8848: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8846: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8840: { $auto$wreduce.cc:455:run$9003 [7] $procmux$3623_CMP $procmux$3621_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8838: { $auto$wreduce.cc:455:run$9003 [7] $procmux$3623_CMP $procmux$3622_CMP $procmux$3624_CMP $procmux$3625_CMP $procmux$3626_CMP $procmux$3627_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8836: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8830: { $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1342$\one_hot8[7:0]$1822 [7] $procmux$3551_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3554_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8824: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8820: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8808: { $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1342$\one_hot8[7:0]$1822 [7] $procmux$3551_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8802: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8800: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8798: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8796: { $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1342$\one_hot8[7:0]$1822 [7] $procmux$3551_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8792: { $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1342$\one_hot8[7:0]$1822 [7] $procmux$3551_CMP $procmux$3549_CMP $procmux$3550_CMP $procmux$3553_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8788: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8786: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8782: { $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1342$\one_hot8[7:0]$1822 [7] $procmux$3551_CMP $procmux$3549_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8776: { $0$func$\one_hot8$/home/vpai/tcl_project/source/omsp_frontend.v:596$1342$\one_hot8[7:0]$1822 [7] $procmux$3551_CMP $procmux$3550_CMP $procmux$3552_CMP $procmux$3553_CMP $procmux$3554_CMP $procmux$3555_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8772: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8766: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8760: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8758: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8756: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2190_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8750: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8748: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8744: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2189_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8742: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8738: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8730: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8724: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8716: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8712: { $procmux$2203_CMP $procmux$2202_CMP $procmux$2201_CMP $procmux$2200_CMP $procmux$2199_CMP $procmux$2198_CMP $procmux$2197_CMP $procmux$2196_CMP $procmux$2195_CMP $procmux$2194_CMP $procmux$2193_CMP $procmux$2192_CMP $procmux$2190_CMP $procmux$2191_CMP $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:649$1345$\one_hot16[15:0]$1837 [15] }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8710: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8708: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8702: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8700: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8686: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8684: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8678: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8670: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3006_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8666: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2471_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8664: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8662: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3005_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8656: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3286_CMP $procmux$3287_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8650: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:644$1344$\one_hot16[15:0]$1832 [15] $procmux$3007_CMP $procmux$3006_CMP $procmux$3008_CMP $procmux$3009_CMP $procmux$3010_CMP $procmux$3011_CMP $procmux$3012_CMP $procmux$3013_CMP $procmux$3014_CMP $procmux$3015_CMP $procmux$3016_CMP $procmux$3017_CMP $procmux$3018_CMP $procmux$3019_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8642: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:662$1346$\one_hot16[15:0]$1842 [15] $procmux$2463_CMP $procmux$2461_CMP $procmux$2462_CMP $procmux$2464_CMP $procmux$2465_CMP $procmux$2466_CMP $procmux$2467_CMP $procmux$2468_CMP $procmux$2469_CMP $procmux$2470_CMP $procmux$2472_CMP $procmux$2473_CMP $procmux$2474_CMP $procmux$2475_CMP }
    New input vector for $reduce_or cell $auto$opt_reduce.cc:126:opt_mux$8640: { $0$func$\one_hot16$/home/vpai/tcl_project/source/omsp_frontend.v:617$1343$\one_hot16[15:0]$1827 [15] $procmux$3279_CMP $procmux$3277_CMP $procmux$3278_CMP $procmux$3280_CMP $procmux$3281_CMP $procmux$3282_CMP $procmux$3283_CMP $procmux$3284_CMP $procmux$3285_CMP $procmux$3287_CMP $procmux$3288_CMP $procmux$3289_CMP $procmux$3290_CMP $procmux$3291_CMP }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9675: { $auto$fsm_map.cc:118:implement_pattern_cache$9569 $auto$fsm_map.cc:118:implement_pattern_cache$9598 $auto$fsm_map.cc:118:implement_pattern_cache$9602 $auto$fsm_map.cc:118:implement_pattern_cache$9606 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9658: { \i_state [1] \i_state [3] $auto$fsm_map.cc:118:implement_pattern_cache$9573 $auto$fsm_map.cc:118:implement_pattern_cache$9577 $auto$fsm_map.cc:118:implement_pattern_cache$9581 $auto$fsm_map.cc:118:implement_pattern_cache$9585 $auto$fsm_map.cc:118:implement_pattern_cache$9589 $auto$fsm_map.cc:118:implement_pattern_cache$9593 $auto$fsm_map.cc:118:implement_pattern_cache$9611 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9629: { \i_state [0] $auto$fsm_map.cc:118:implement_pattern_cache$9598 $auto$fsm_map.cc:118:implement_pattern_cache$9602 $auto$fsm_map.cc:118:implement_pattern_cache$9606 $auto$fsm_map.cc:118:implement_pattern_cache$9611 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9608: { $auto$fsm_map.cc:118:implement_pattern_cache$9598 $auto$fsm_map.cc:118:implement_pattern_cache$9602 $auto$fsm_map.cc:118:implement_pattern_cache$9606 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9595: { \i_state [1] \i_state [3] $auto$fsm_map.cc:118:implement_pattern_cache$9573 $auto$fsm_map.cc:118:implement_pattern_cache$9577 $auto$fsm_map.cc:118:implement_pattern_cache$9581 $auto$fsm_map.cc:118:implement_pattern_cache$9585 $auto$fsm_map.cc:118:implement_pattern_cache$9589 $auto$fsm_map.cc:118:implement_pattern_cache$9593 }
    New input vector for $reduce_or cell $auto$fsm_map.cc:144:implement_pattern_cache$9566: { $auto$fsm_map.cc:118:implement_pattern_cache$9560 $auto$fsm_map.cc:118:implement_pattern_cache$9564 }
    Consolidated identical input bits for $mux cell $procmux$7909:
      Old ports: A=5'00001, B=5'10000, Y=$5\inst_ad_nxt[7:0]
      New ports: A=2'01, B=2'10, Y={ $5\inst_ad_nxt[7:0] [4] $5\inst_ad_nxt[7:0] [0] }
      New connections: $5\inst_ad_nxt[7:0] [3:1] = 3'000
    Consolidated identical input bits for $mux cell $procmux$7930:
      Old ports: A=7'0000001, B=7'1000000, Y=$3\inst_ad_nxt[7:0]
      New ports: A=2'01, B=2'10, Y={ $3\inst_ad_nxt[7:0] [6] $3\inst_ad_nxt[7:0] [0] }
      New connections: $3\inst_ad_nxt[7:0] [5:1] = 5'00000
    Consolidated identical input bits for $mux cell $procmux$7944:
      Old ports: A=8'00000000, B={ 1'0 $2\inst_ad_nxt[7:0] }, Y=\inst_ad_nxt
      New ports: A=7'0000000, B=$2\inst_ad_nxt[7:0], Y=\inst_ad_nxt [6:0]
      New connections: \inst_ad_nxt [7] = 1'0
    Consolidated identical input bits for $mux cell $procmux$7947:
      Old ports: A=16'0000000000000000, B=16'1111111111111111, Y=$6\sconst_nxt[15:0]
      New ports: A=1'0, B=1'1, Y=$6\sconst_nxt[15:0] [0]
      New connections: $6\sconst_nxt[15:0] [15:1] = { $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] }
    Consolidated identical input bits for $pmux cell $procmux$8030:
      Old ports: A=6'000001, B=18'100000000100010000, Y=$7\inst_as_nxt[12:0] [5:0]
      New ports: A=4'0001, B=12'100000100100, Y={ $7\inst_as_nxt[12:0] [5:4] $7\inst_as_nxt[12:0] [2] $7\inst_as_nxt[12:0] [0] }
      New connections: { $7\inst_as_nxt[12:0] [3] $7\inst_as_nxt[12:0] [1] } = 2'00
    Consolidated identical input bits for $pmux cell $procmux$8059:
      Old ports: A=9'000000001, B=27'100000000010000000001000000, Y=$5\inst_as_nxt[12:0]
      New ports: A=4'0001, B=12'100001000010, Y={ $5\inst_as_nxt[12:0] [8:6] $5\inst_as_nxt[12:0] [0] }
      New connections: $5\inst_as_nxt[12:0] [5:1] = 5'00000
    Consolidated identical input bits for $pmux cell $procmux$8082:
      Old ports: A=13'0001000000000, B=39'100000000000001000000000000010000000000, Y=$3\inst_as_nxt[12:0]
      New ports: A=4'0001, B=12'100001000010, Y=$3\inst_as_nxt[12:0] [12:9]
      New connections: $3\inst_as_nxt[12:0] [8:0] = 9'000000000
    Consolidated identical input bits for $mux cell $procmux$8493:
      Old ports: A={ 5'11111 $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427 }, B=6'111101, Y=$4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430
      New ports: A={ 1'1 $3$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1427 }, B=2'01, Y=$4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [1:0]
      New connections: $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [5:2] = 4'1111
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_frontend.v:456$1647:
      Old ports: A=16'0000000000000000, B=16'1111111111111110, Y=\ext_incr
      New ports: A=1'0, B=1'1, Y=\ext_incr [1]
      New connections: { \ext_incr [15:2] \ext_incr [0] } = { \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] \ext_incr [1] 1'0 }
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_frontend.v:872$1756:
      Old ports: A=2'11, B=2'01, Y=$auto$wreduce.cc:455:run$9018 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$9018 [1]
      New connections: $auto$wreduce.cc:455:run$9018 [0] = 1'1
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_frontend.v:893$1765:
      Old ports: A=2'11, B=2'01, Y=$auto$wreduce.cc:455:run$9021 [1:0]
      New ports: A=1'1, B=1'0, Y=$auto$wreduce.cc:455:run$9021 [1]
      New connections: $auto$wreduce.cc:455:run$9021 [0] = 1'1
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1431: { $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [0] $4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [1] }
    Consolidated identical input bits for $mux cell $procmux$7920:
      Old ports: A={ 3'000 $6\inst_ad_nxt[7:0] }, B=$5\inst_ad_nxt[7:0], Y=$4\inst_ad_nxt[7:0]
      New ports: A={ 1'0 $6\inst_ad_nxt[7:0] }, B={ $5\inst_ad_nxt[7:0] [4] 1'0 $5\inst_ad_nxt[7:0] [0] }, Y={ $4\inst_ad_nxt[7:0] [4] $4\inst_ad_nxt[7:0] [1:0] }
      New connections: $4\inst_ad_nxt[7:0] [3:2] = 2'00
    Consolidated identical input bits for $mux cell $procmux$7938:
      Old ports: A={ 2'00 $4\inst_ad_nxt[7:0] }, B=$3\inst_ad_nxt[7:0], Y=$2\inst_ad_nxt[7:0]
      New ports: A={ 1'0 $4\inst_ad_nxt[7:0] }, B={ $3\inst_ad_nxt[7:0] [6] 4'0000 $3\inst_ad_nxt[7:0] [0] }, Y={ $2\inst_ad_nxt[7:0] [6] $2\inst_ad_nxt[7:0] [4:0] }
      New connections: $2\inst_ad_nxt[7:0] [5] = 1'0
    Consolidated identical input bits for $mux cell $procmux$7965:
      Old ports: A=$6\sconst_nxt[15:0], B=16'0000000000000010, Y=$5\sconst_nxt[15:0]
      New ports: A={ $6\sconst_nxt[15:0] [0] $6\sconst_nxt[15:0] [0] }, B=2'10, Y=$5\sconst_nxt[15:0] [1:0]
      New connections: $5\sconst_nxt[15:0] [15:2] = { $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [0] }
    Consolidated identical input bits for $mux cell $procmux$8487:
      Old ports: A=$4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430, B=6'111100, Y=$5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433
      New ports: A=$4$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1430 [1:0], B=2'00, Y=$5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [1:0]
      New connections: $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [5:2] = 4'1111
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1434: { $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [0] $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [1] }
    Consolidated identical input bits for $mux cell $procmux$7938:
      Old ports: A={ 1'0 $4\inst_ad_nxt[7:0] }, B={ $3\inst_ad_nxt[7:0] [6] 4'0000 $3\inst_ad_nxt[7:0] [0] }, Y={ $2\inst_ad_nxt[7:0] [6] $2\inst_ad_nxt[7:0] [4:0] }
      New ports: A={ 1'0 $4\inst_ad_nxt[7:0] [4] $4\inst_ad_nxt[7:0] [1:0] }, B={ $3\inst_ad_nxt[7:0] [6] 2'00 $3\inst_ad_nxt[7:0] [0] }, Y={ $2\inst_ad_nxt[7:0] [6] $2\inst_ad_nxt[7:0] [4] $2\inst_ad_nxt[7:0] [1:0] }
      New connections: $2\inst_ad_nxt[7:0] [3:2] = 2'00
    Consolidated identical input bits for $mux cell $procmux$7944:
      Old ports: A=7'0000000, B=$2\inst_ad_nxt[7:0], Y=\inst_ad_nxt [6:0]
      New ports: A=6'000000, B={ $2\inst_ad_nxt[7:0] [6] $2\inst_ad_nxt[7:0] [4:0] }, Y={ \inst_ad_nxt [6] \inst_ad_nxt [4:0] }
      New connections: \inst_ad_nxt [5] = 1'0
    Consolidated identical input bits for $mux cell $procmux$7980:
      Old ports: A=$5\sconst_nxt[15:0], B=16'0000000000000001, Y=$4\sconst_nxt[15:0]
      New ports: A={ $5\sconst_nxt[15:0] [0] $5\sconst_nxt[15:0] [1:0] }, B=3'001, Y=$4\sconst_nxt[15:0] [2:0]
      New connections: $4\sconst_nxt[15:0] [15:3] = { $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] $4\sconst_nxt[15:0] [2] }
    Consolidated identical input bits for $mux cell $procmux$8481:
      Old ports: A=$5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433, B=6'111011, Y=$6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436
      New ports: A={ 1'1 $5$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1433 [1:0] }, B=3'011, Y=$6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [2:0]
      New connections: $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [5:3] = 3'111
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1437: { $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [0] $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [1] $6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [2] }
    Consolidated identical input bits for $mux cell $procmux$7944:
      Old ports: A=6'000000, B={ $2\inst_ad_nxt[7:0] [6] $2\inst_ad_nxt[7:0] [4:0] }, Y={ \inst_ad_nxt [6] \inst_ad_nxt [4:0] }
      New ports: A=4'0000, B={ $2\inst_ad_nxt[7:0] [6] $2\inst_ad_nxt[7:0] [4] $2\inst_ad_nxt[7:0] [1:0] }, Y={ \inst_ad_nxt [6] \inst_ad_nxt [4] \inst_ad_nxt [1:0] }
      New connections: \inst_ad_nxt [3:2] = 2'00
    Consolidated identical input bits for $mux cell $procmux$7992:
      Old ports: A=$4\sconst_nxt[15:0], B=16'0000000000000000, Y=$3\sconst_nxt[15:0]
      New ports: A=$4\sconst_nxt[15:0] [2:0], B=3'000, Y=$3\sconst_nxt[15:0] [2:0]
      New connections: $3\sconst_nxt[15:0] [15:3] = { $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2] }
    Consolidated identical input bits for $mux cell $procmux$8475:
      Old ports: A=$6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436, B=6'111010, Y=$7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439
      New ports: A=$6$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1436 [2:0], B=3'010, Y=$7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [2:0]
      New connections: $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [5:3] = 3'111
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1440: { $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [0] $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [1] $7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [2] }
    Consolidated identical input bits for $mux cell $procmux$8001:
      Old ports: A=$3\sconst_nxt[15:0], B=16'0000000000001000, Y=$2\sconst_nxt[15:0]
      New ports: A={ $3\sconst_nxt[15:0] [2] $3\sconst_nxt[15:0] [2:0] }, B=4'1000, Y=$2\sconst_nxt[15:0] [3:0]
      New connections: $2\sconst_nxt[15:0] [15:4] = { $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [2] }
    Consolidated identical input bits for $mux cell $procmux$8469:
      Old ports: A=$7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439, B=6'111001, Y=$8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442
      New ports: A=$7$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1439 [2:0], B=3'001, Y=$8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [2:0]
      New connections: $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [5:3] = 3'111
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1443: { $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [0] $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [1] $8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [2] }
    Consolidated identical input bits for $mux cell $procmux$8007:
      Old ports: A=$2\sconst_nxt[15:0], B=16'0000000000000100, Y=\sconst_nxt
      New ports: A={ $2\sconst_nxt[15:0] [2] $2\sconst_nxt[15:0] [3:0] }, B=5'00100, Y=\sconst_nxt [4:0]
      New connections: \sconst_nxt [15:5] = { \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] \sconst_nxt [4] }
    Consolidated identical input bits for $mux cell $procmux$8463:
      Old ports: A=$8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442, B=6'111000, Y=$9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445
      New ports: A=$8$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1442 [2:0], B=3'000, Y=$9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [2:0]
      New connections: $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [5:3] = 3'111
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1446: { $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [0] $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [1] $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [2] }
    Consolidated identical input bits for $mux cell $procmux$8457:
      Old ports: A=$9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445, B=6'110111, Y=$10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448
      New ports: A={ 1'1 $9$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1445 [2:0] }, B=4'0111, Y=$10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [3:0]
      New connections: $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [5:4] = 2'11
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1449: { $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [0] $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [1] $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [2] $10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [3] }
    Consolidated identical input bits for $mux cell $procmux$8451:
      Old ports: A=$10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448, B=6'110110, Y=$11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451
      New ports: A=$10$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1448 [3:0], B=4'0110, Y=$11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [3:0]
      New connections: $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [5:4] = 2'11
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1452: { $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [0] $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [1] $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [2] $11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [3] }
    Consolidated identical input bits for $mux cell $procmux$8445:
      Old ports: A=$11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451, B=6'110101, Y=$12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454
      New ports: A=$11$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1451 [3:0], B=4'0101, Y=$12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [3:0]
      New connections: $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [5:4] = 2'11
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1455: { $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [0] $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [1] $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [2] $12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [3] }
    Consolidated identical input bits for $mux cell $procmux$8439:
      Old ports: A=$12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454, B=6'110100, Y=$13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457
      New ports: A=$12$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1454 [3:0], B=4'0100, Y=$13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [3:0]
      New connections: $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [5:4] = 2'11
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1458: { $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [0] $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [1] $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [2] $13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [3] }
    Consolidated identical input bits for $mux cell $procmux$8433:
      Old ports: A=$13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457, B=6'110011, Y=$14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460
      New ports: A=$13$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1457 [3:0], B=4'0011, Y=$14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [3:0]
      New connections: $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [5:4] = 2'11
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1461: { $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [0] $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [1] $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [2] $14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [3] }
    Consolidated identical input bits for $mux cell $procmux$8427:
      Old ports: A=$14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460, B=6'110010, Y=$15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463
      New ports: A=$14$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1460 [3:0], B=4'0010, Y=$15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [3:0]
      New connections: $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [5:4] = 2'11
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1464: { $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [0] $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [1] $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [2] $15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [3] }
    Consolidated identical input bits for $mux cell $procmux$8421:
      Old ports: A=$15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463, B=6'110001, Y=$16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466
      New ports: A=$15$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1463 [3:0], B=4'0001, Y=$16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [3:0]
      New connections: $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [5:4] = 2'11
  Optimizing cells in module \omsp_frontend.
    New input vector for $reduce_and cell $reduce_and$/home/vpai/tcl_project/source/omsp_frontend.v:194$1467: { $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [0] $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [1] $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [2] $16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [3] }
    Consolidated identical input bits for $mux cell $procmux$8415:
      Old ports: A=$16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466, B=6'110000, Y=$17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469
      New ports: A=$16$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1466 [3:0], B=4'0000, Y=$17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469 [3:0]
      New connections: $17$func$\get_irq_num$/home/vpai/tcl_project/source/omsp_frontend.v:341$1276$\get_irq_num[5:0]$1469 [5:4] = 2'11
  Optimizing cells in module \omsp_frontend.
  Optimizing cells in module \omsp_mem_backbone.
  Optimizing cells in module \omsp_multiplier.
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_multiplier.v:279$787:
      Old ports: A={ \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s [1] \sumext_s }, B={ \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt [1] \sumext_s_nxt }, Y=\sumext_rd
      New ports: A=\sumext_s, B=\sumext_s_nxt, Y=\sumext_rd [1:0]
      New connections: \sumext_rd [15:2] = { \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] \sumext_rd [1] }
  Optimizing cells in module \omsp_multiplier.
  Optimizing cells in module \omsp_register_file.
    Consolidated identical input bits for $mux cell $procmux$2085:
      Old ports: A={ 7'0000000 \r2_v \r2_nxt [4] 1'0 \r2_nxt [2:0] \r2_n \r2_z \r2_c }, B=16'0000000000000000, Y=$0\r2[15:0]
      New ports: A={ \r2_v \r2_nxt [4] \r2_nxt [2:0] \r2_n \r2_z \r2_c }, B=8'00000000, Y={ $0\r2[15:0] [8:7] $0\r2[15:0] [5:0] }
      New connections: { $0\r2[15:0] [15:9] $0\r2[15:0] [6] } = 8'00000000
    Consolidated identical input bits for $mux cell $ternary$/home/vpai/tcl_project/source/omsp_register_file.v:124$1146:
      Old ports: A=\reg_dest_val, B={ 8'00000000 \reg_dest_val [7:0] }, Y=\reg_dest_val_in
      New ports: A=\reg_dest_val [15:8], B=8'00000000, Y=\reg_dest_val_in [15:8]
      New connections: \reg_dest_val_in [7:0] = \reg_dest_val [7:0]
  Optimizing cells in module \omsp_register_file.
  Optimizing cells in module \omsp_sfr.
  Optimizing cells in module \omsp_sync_cell.
  Optimizing cells in module \omsp_sync_reset.
  Optimizing cells in module \omsp_watchdog.
  Optimizing cells in module \openMSP430.
Performed a total of 145 changes.

26.20.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
<suppressed ~12 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 4 cells.

26.20.6. Executing OPT_RMDFF pass (remove dff with constant values).

26.20.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 0 unused cells and 6 unused wires.
<suppressed ~2 debug messages>

26.20.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
<suppressed ~1 debug messages>
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
<suppressed ~7 debug messages>
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
<suppressed ~1 debug messages>
Optimizing module omsp_frontend.
<suppressed ~4 debug messages>
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
<suppressed ~4 debug messages>
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.20.9. Rerunning OPT passes. (Maybe there is more to do..)

26.20.10. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \omsp_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_clock_module..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_execution_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_frontend..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_mem_backbone..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_register_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sfr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sync_cell..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_reset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~145 debug messages>

26.20.11. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \omsp_alu.
  Optimizing cells in module \omsp_clock_module.
  Optimizing cells in module \omsp_dbg.
  Optimizing cells in module \omsp_dbg_i2c.
  Optimizing cells in module \omsp_execution_unit.
  Optimizing cells in module \omsp_frontend.
    Consolidated identical input bits for $mux cell $procmux$7920:
      Old ports: A={ 1'0 $3\inst_ad_nxt[7:0] [6] $3\inst_ad_nxt[7:0] [0] }, B={ $3\inst_ad_nxt[7:0] [6] 1'0 $3\inst_ad_nxt[7:0] [0] }, Y={ $4\inst_ad_nxt[7:0] [4] $4\inst_ad_nxt[7:0] [1:0] }
      New ports: A={ 1'0 $3\inst_ad_nxt[7:0] [6] }, B={ $3\inst_ad_nxt[7:0] [6] 1'0 }, Y={ $4\inst_ad_nxt[7:0] [4] $4\inst_ad_nxt[7:0] [1] }
      New connections: $4\inst_ad_nxt[7:0] [0] = $3\inst_ad_nxt[7:0] [0]
  Optimizing cells in module \omsp_frontend.
    Consolidated identical input bits for $mux cell $procmux$7938:
      Old ports: A={ 1'0 $4\inst_ad_nxt[7:0] [4] $4\inst_ad_nxt[7:0] [1:0] }, B={ $3\inst_ad_nxt[7:0] [6] 2'00 $3\inst_ad_nxt[7:0] [0] }, Y={ $2\inst_ad_nxt[7:0] [6] $2\inst_ad_nxt[7:0] [4] $2\inst_ad_nxt[7:0] [1:0] }
      New ports: A={ 1'0 $4\inst_ad_nxt[7:0] [4] $4\inst_ad_nxt[7:0] [1] }, B={ $3\inst_ad_nxt[7:0] [6] 2'00 }, Y={ $2\inst_ad_nxt[7:0] [6] $2\inst_ad_nxt[7:0] [4] $2\inst_ad_nxt[7:0] [1] }
      New connections: $2\inst_ad_nxt[7:0] [0] = $3\inst_ad_nxt[7:0] [0]
  Optimizing cells in module \omsp_frontend.
  Optimizing cells in module \omsp_mem_backbone.
  Optimizing cells in module \omsp_multiplier.
  Optimizing cells in module \omsp_register_file.
  Optimizing cells in module \omsp_sfr.
  Optimizing cells in module \omsp_sync_cell.
  Optimizing cells in module \omsp_sync_reset.
  Optimizing cells in module \omsp_watchdog.
  Optimizing cells in module \openMSP430.
Performed a total of 2 changes.

26.20.12. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

26.20.13. Executing OPT_RMDFF pass (remove dff with constant values).

26.20.14. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 0 unused cells and 8 unused wires.
<suppressed ~5 debug messages>

26.20.15. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.20.16. Rerunning OPT passes. (Maybe there is more to do..)

26.20.17. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \omsp_alu..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_clock_module..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_dbg_i2c..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_execution_unit..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_frontend..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_mem_backbone..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_multiplier..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_register_file..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sfr..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \omsp_sync_cell..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_reset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_watchdog..
  Creating internal representation of mux trees.
  Evaluating internal representation of mux trees.
  Analyzing evaluation results.
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.
<suppressed ~145 debug messages>

26.20.18. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \omsp_alu.
  Optimizing cells in module \omsp_clock_module.
  Optimizing cells in module \omsp_dbg.
  Optimizing cells in module \omsp_dbg_i2c.
  Optimizing cells in module \omsp_execution_unit.
  Optimizing cells in module \omsp_frontend.
  Optimizing cells in module \omsp_mem_backbone.
  Optimizing cells in module \omsp_multiplier.
  Optimizing cells in module \omsp_register_file.
  Optimizing cells in module \omsp_sfr.
  Optimizing cells in module \omsp_sync_cell.
  Optimizing cells in module \omsp_sync_reset.
  Optimizing cells in module \omsp_watchdog.
  Optimizing cells in module \openMSP430.
Performed a total of 0 changes.

26.20.19. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

26.20.20. Executing OPT_RMDFF pass (remove dff with constant values).

26.20.21. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..

26.20.22. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.20.23. Finished OPT passes. (There is nothing left to do.)

26.21. Executing TECHMAP pass (map to technology primitives).

26.21.1. Executing Verilog-2005 frontend: <techmap.v>
Parsing Verilog input from `<techmap.v>' to AST representation.
Generating RTLIL representation for module `\_90_simplemap_bool_ops'.
Generating RTLIL representation for module `\_90_simplemap_reduce_ops'.
Generating RTLIL representation for module `\_90_simplemap_logic_ops'.
Generating RTLIL representation for module `\_90_simplemap_compare_ops'.
Generating RTLIL representation for module `\_90_simplemap_various'.
Generating RTLIL representation for module `\_90_simplemap_registers'.
Generating RTLIL representation for module `\_90_shift_ops_shr_shl_sshl_sshr'.
Generating RTLIL representation for module `\_90_shift_shiftx'.
Generating RTLIL representation for module `\_90_fa'.
Generating RTLIL representation for module `\_90_lcu'.
Generating RTLIL representation for module `\_90_alu'.
Generating RTLIL representation for module `\_90_macc'.
Generating RTLIL representation for module `\_90_alumacc'.
Generating RTLIL representation for module `\$__div_mod_u'.
Generating RTLIL representation for module `\$__div_mod'.
Generating RTLIL representation for module `\_90_div'.
Generating RTLIL representation for module `\_90_mod'.
Generating RTLIL representation for module `\_90_pow'.
Generating RTLIL representation for module `\_90_pmux'.
Generating RTLIL representation for module `\_90_lut'.
Successfully finished Verilog frontend.

26.21.2. Continuing TECHMAP pass.
Using extmapper simplemap for cells of type $not.
Using extmapper simplemap for cells of type $and.
Using extmapper simplemap for cells of type $or.
Using extmapper simplemap for cells of type $mux.
Using extmapper simplemap for cells of type $reduce_or.
Using extmapper simplemap for cells of type $logic_not.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=15\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using extmapper simplemap for cells of type $reduce_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=15\Y_WIDTH=15 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=13\B_WIDTH=1\Y_WIDTH=13 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=14\B_WIDTH=1\Y_WIDTH=14 for cells of type $alu.
Using extmapper simplemap for cells of type $adff.
Using extmapper simplemap for cells of type $pos.
Using template $paramod\_90_lcu\WIDTH=14 for cells of type $lcu.
Using extmapper simplemap for cells of type $xor.
Using template $paramod\_90_lcu\WIDTH=15 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=13 for cells of type $lcu.
Using extmapper simplemap for cells of type $eq.
Using template $paramod\_90_pmux\WIDTH=9\S_WIDTH=9 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=2\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=16 for cells of type $lcu.
Using extmapper simplemap for cells of type $logic_or.
Using extmapper simplemap for cells of type $ne.
Using extmapper simplemap for cells of type $logic_and.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=16\Y_WIDTH=16 for cells of type $alu.
Using template $paramod\_90_pmux\WIDTH=1\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=4\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=4\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=16\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=17\Y_WIDTH=17 for cells of type $alu.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=3\B_WIDTH=5\Y_WIDTH=5 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=5 for cells of type $lcu.
Using template $paramod\_90_lcu\WIDTH=17 for cells of type $lcu.
Using extmapper maccmap for cells of type $macc.
  add { \op1_xp [16] \op1 } * \op2_xp (17x9 bits, signed)
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=32\B_WIDTH=32\Y_WIDTH=33 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=33 for cells of type $lcu.
Using template $paramod\_90_fa\WIDTH=24 for cells of type $fa.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=24\B_WIDTH=24\Y_WIDTH=24 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=24 for cells of type $lcu.
Using extmapper simplemap for cells of type $reduce_bool.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=3\Y_WIDTH=3 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=3 for cells of type $lcu.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=11 for cells of type $pmux.
Using template $paramod\_90_pmux\WIDTH=4\S_WIDTH=3 for cells of type $pmux.
Using template $paramod\_90_alu\A_SIGNED=0\B_SIGNED=0\A_WIDTH=1\B_WIDTH=1\Y_WIDTH=2 for cells of type $alu.
Using template $paramod\_90_lcu\WIDTH=2 for cells of type $lcu.
No more expansions possible.
<suppressed ~5241 debug messages>

26.22. Executing OPT pass (performing simple optimizations).

26.22.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
<suppressed ~338 debug messages>
Optimizing module omsp_clock_module.
<suppressed ~64 debug messages>
Optimizing module omsp_dbg.
<suppressed ~309 debug messages>
Optimizing module omsp_dbg_i2c.
<suppressed ~56 debug messages>
Optimizing module omsp_execution_unit.
<suppressed ~36 debug messages>
Optimizing module omsp_frontend.
<suppressed ~629 debug messages>
Optimizing module omsp_mem_backbone.
<suppressed ~513 debug messages>
Optimizing module omsp_multiplier.
<suppressed ~406 debug messages>
Optimizing module omsp_register_file.
<suppressed ~85 debug messages>
Optimizing module omsp_sfr.
<suppressed ~7 debug messages>
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
<suppressed ~105 debug messages>
Optimizing module openMSP430.

26.22.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
<suppressed ~189 debug messages>
Finding identical cells in module `\omsp_clock_module'.
<suppressed ~12 debug messages>
Finding identical cells in module `\omsp_dbg'.
<suppressed ~183 debug messages>
Finding identical cells in module `\omsp_dbg_i2c'.
<suppressed ~132 debug messages>
Finding identical cells in module `\omsp_execution_unit'.
<suppressed ~81 debug messages>
Finding identical cells in module `\omsp_frontend'.
<suppressed ~14352 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
<suppressed ~1149 debug messages>
Finding identical cells in module `\omsp_multiplier'.
<suppressed ~243 debug messages>
Finding identical cells in module `\omsp_register_file'.
<suppressed ~63 debug messages>
Finding identical cells in module `\omsp_sfr'.
<suppressed ~9 debug messages>
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 5471 cells.

26.22.3. Executing OPT_RMDFF pass (remove dff with constant values).
Removing $auto$simplemap.cc:496:simplemap_adff$21114 ($_DFF_PP0_) from module omsp_register_file.
Replaced 1 DFF cells.

26.22.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 754 unused cells and 2874 unused wires.
<suppressed ~765 debug messages>

26.22.5. Rerunning OPT passes. (Removed registers in this run.)

26.22.6. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
<suppressed ~3 debug messages>
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
<suppressed ~18 debug messages>
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.22.7. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

26.22.8. Executing OPT_RMDFF pass (remove dff with constant values).

26.22.9. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..

26.22.10. Finished fast OPT passes.

26.23. Executing ABC pass (technology mapping using ABC).

26.23.1. Extracting gate netlist of module `\omsp_alu' to `<abc-temp-dir>/input.blif'..
Extracted 761 gates and 824 wires to a netlist network with 61 inputs and 37 outputs.

26.23.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.1.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       10
ABC RESULTS:            ANDNOT cells:       99
ABC RESULTS:              AOI3 cells:       81
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:       59
ABC RESULTS:              NAND cells:       13
ABC RESULTS:               NOR cells:       40
ABC RESULTS:               NOT cells:      102
ABC RESULTS:              OAI3 cells:       61
ABC RESULTS:                OR cells:       54
ABC RESULTS:             ORNOT cells:        2
ABC RESULTS:              XNOR cells:       16
ABC RESULTS:               XOR cells:      104
ABC RESULTS:        internal signals:      726
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       37
Removing temp directory.

26.23.2. Extracting gate netlist of module `\omsp_clock_module' to `<abc-temp-dir>/input.blif'..
Extracted 125 gates and 184 wires to a netlist network with 57 inputs and 45 outputs.

26.23.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.2.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       17
ABC RESULTS:            ANDNOT cells:       29
ABC RESULTS:              AOI3 cells:        1
ABC RESULTS:               MUX cells:       13
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:        4
ABC RESULTS:              OAI3 cells:        2
ABC RESULTS:                OR cells:       13
ABC RESULTS:             ORNOT cells:        7
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:        4
ABC RESULTS:        internal signals:       82
ABC RESULTS:           input signals:       57
ABC RESULTS:          output signals:       45
Removing temp directory.

26.23.3. Extracting gate netlist of module `\omsp_dbg' to `<abc-temp-dir>/input.blif'..
Extracted 689 gates and 885 wires to a netlist network with 194 inputs and 110 outputs.

26.23.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.3.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       19
ABC RESULTS:            ANDNOT cells:      106
ABC RESULTS:              AOI3 cells:       48
ABC RESULTS:              AOI4 cells:       16
ABC RESULTS:               MUX cells:      114
ABC RESULTS:              NAND cells:       17
ABC RESULTS:               NOR cells:       24
ABC RESULTS:               NOT cells:       41
ABC RESULTS:              OAI3 cells:       24
ABC RESULTS:              OAI4 cells:        4
ABC RESULTS:                OR cells:       74
ABC RESULTS:             ORNOT cells:       46
ABC RESULTS:              XNOR cells:        4
ABC RESULTS:               XOR cells:       44
ABC RESULTS:        internal signals:      581
ABC RESULTS:           input signals:      194
ABC RESULTS:          output signals:      110
Removing temp directory.

26.23.4. Extracting gate netlist of module `\omsp_dbg_i2c' to `<abc-temp-dir>/input.blif'..
Extracted 366 gates and 452 wires to a netlist network with 84 inputs and 54 outputs.

26.23.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.4.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        5
ABC RESULTS:            ANDNOT cells:       54
ABC RESULTS:              AOI3 cells:       10
ABC RESULTS:              AOI4 cells:        3
ABC RESULTS:               MUX cells:       63
ABC RESULTS:              NAND cells:       18
ABC RESULTS:               NOR cells:        8
ABC RESULTS:               NOT cells:       47
ABC RESULTS:              OAI3 cells:       18
ABC RESULTS:              OAI4 cells:        4
ABC RESULTS:                OR cells:       42
ABC RESULTS:             ORNOT cells:       17
ABC RESULTS:              XNOR cells:        1
ABC RESULTS:               XOR cells:        6
ABC RESULTS:        internal signals:      314
ABC RESULTS:           input signals:       84
ABC RESULTS:          output signals:       54
Removing temp directory.

26.23.5. Extracting gate netlist of module `\omsp_execution_unit' to `<abc-temp-dir>/input.blif'..
Extracted 390 gates and 584 wires to a netlist network with 192 inputs and 85 outputs.

26.23.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.5.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        6
ABC RESULTS:            ANDNOT cells:       54
ABC RESULTS:              AOI3 cells:        6
ABC RESULTS:              AOI4 cells:        2
ABC RESULTS:               MUX cells:      202
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:       13
ABC RESULTS:               NOT cells:       14
ABC RESULTS:              OAI3 cells:       11
ABC RESULTS:              OAI4 cells:        5
ABC RESULTS:                OR cells:       19
ABC RESULTS:             ORNOT cells:       23
ABC RESULTS:        internal signals:      307
ABC RESULTS:           input signals:      192
ABC RESULTS:          output signals:       85
Removing temp directory.

26.23.6. Extracting gate netlist of module `\omsp_frontend' to `<abc-temp-dir>/input.blif'..
Extracted 1973 gates and 2157 wires to a netlist network with 182 inputs and 181 outputs.

26.23.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.6.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       21
ABC RESULTS:            ANDNOT cells:      238
ABC RESULTS:              AOI3 cells:      138
ABC RESULTS:              AOI4 cells:        5
ABC RESULTS:               MUX cells:      216
ABC RESULTS:              NAND cells:       45
ABC RESULTS:               NOR cells:       75
ABC RESULTS:               NOT cells:      114
ABC RESULTS:              OAI3 cells:       57
ABC RESULTS:              OAI4 cells:       15
ABC RESULTS:                OR cells:      487
ABC RESULTS:             ORNOT cells:       62
ABC RESULTS:              XNOR cells:       11
ABC RESULTS:               XOR cells:       34
ABC RESULTS:        internal signals:     1794
ABC RESULTS:           input signals:      182
ABC RESULTS:          output signals:      181
Removing temp directory.

26.23.7. Extracting gate netlist of module `\omsp_mem_backbone' to `<abc-temp-dir>/input.blif'..
Extracted 617 gates and 774 wires to a netlist network with 155 inputs and 152 outputs.

26.23.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.7.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        2
ABC RESULTS:            ANDNOT cells:       34
ABC RESULTS:              AOI3 cells:       10
ABC RESULTS:              AOI4 cells:        1
ABC RESULTS:               MUX cells:      186
ABC RESULTS:              NAND cells:        5
ABC RESULTS:               NOR cells:       27
ABC RESULTS:               NOT cells:       21
ABC RESULTS:              OAI3 cells:       13
ABC RESULTS:                OR cells:       76
ABC RESULTS:             ORNOT cells:       13
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       28
ABC RESULTS:        internal signals:      467
ABC RESULTS:           input signals:      155
ABC RESULTS:          output signals:      152
Removing temp directory.

26.23.8. Extracting gate netlist of module `\omsp_multiplier' to `<abc-temp-dir>/input.blif'..
Extracted 1610 gates and 1715 wires to a netlist network with 103 inputs and 85 outputs.

26.23.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.8.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       83
ABC RESULTS:            ANDNOT cells:      345
ABC RESULTS:              AOI3 cells:      127
ABC RESULTS:              AOI4 cells:       16
ABC RESULTS:               MUX cells:      166
ABC RESULTS:              NAND cells:       26
ABC RESULTS:               NOR cells:       58
ABC RESULTS:               NOT cells:       78
ABC RESULTS:              OAI3 cells:       69
ABC RESULTS:                OR cells:       78
ABC RESULTS:             ORNOT cells:       34
ABC RESULTS:              XNOR cells:      110
ABC RESULTS:               XOR cells:      271
ABC RESULTS:        internal signals:     1527
ABC RESULTS:           input signals:      103
ABC RESULTS:          output signals:       85
Removing temp directory.

26.23.9. Extracting gate netlist of module `\omsp_register_file' to `<abc-temp-dir>/input.blif'..
Extracted 1530 gates and 1858 wires to a netlist network with 326 inputs and 274 outputs.

26.23.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.9.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:       31
ABC RESULTS:            ANDNOT cells:       71
ABC RESULTS:              AOI3 cells:      181
ABC RESULTS:              AOI4 cells:       25
ABC RESULTS:               MUX cells:      457
ABC RESULTS:              NAND cells:      199
ABC RESULTS:               NOR cells:       20
ABC RESULTS:               NOT cells:      117
ABC RESULTS:              OAI3 cells:      120
ABC RESULTS:              OAI4 cells:        7
ABC RESULTS:                OR cells:       23
ABC RESULTS:             ORNOT cells:       13
ABC RESULTS:              XNOR cells:        3
ABC RESULTS:               XOR cells:       14
ABC RESULTS:        internal signals:     1258
ABC RESULTS:           input signals:      326
ABC RESULTS:          output signals:      274
Removing temp directory.

26.23.10. Extracting gate netlist of module `\omsp_sfr' to `<abc-temp-dir>/input.blif'..
Extracted 70 gates and 107 wires to a netlist network with 36 inputs and 19 outputs.

26.23.10.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.10.2. Re-integrating ABC results.
ABC RESULTS:            ANDNOT cells:       13
ABC RESULTS:               MUX cells:        1
ABC RESULTS:              NAND cells:        2
ABC RESULTS:               NOR cells:        2
ABC RESULTS:               NOT cells:        6
ABC RESULTS:              OAI3 cells:        4
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:       24
ABC RESULTS:             ORNOT cells:        6
ABC RESULTS:        internal signals:       52
ABC RESULTS:           input signals:       36
ABC RESULTS:          output signals:       19
Removing temp directory.

26.23.11. Extracting gate netlist of module `\omsp_sync_cell' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

26.23.12. Extracting gate netlist of module `\omsp_sync_reset' to `<abc-temp-dir>/input.blif'..
Extracted 0 gates and 0 wires to a netlist network with 0 inputs and 0 outputs.
Don't call ABC as there is nothing to map.
Removing temp directory.

26.23.13. Extracting gate netlist of module `\omsp_watchdog' to `<abc-temp-dir>/input.blif'..
Extracted 156 gates and 221 wires to a netlist network with 63 inputs and 36 outputs.

26.23.13.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.13.2. Re-integrating ABC results.
ABC RESULTS:               AND cells:        4
ABC RESULTS:            ANDNOT cells:       38
ABC RESULTS:              AOI3 cells:        2
ABC RESULTS:               MUX cells:       22
ABC RESULTS:              NAND cells:        9
ABC RESULTS:               NOR cells:        5
ABC RESULTS:               NOT cells:       15
ABC RESULTS:              OAI3 cells:        3
ABC RESULTS:              OAI4 cells:        1
ABC RESULTS:                OR cells:       21
ABC RESULTS:             ORNOT cells:       10
ABC RESULTS:              XNOR cells:        2
ABC RESULTS:               XOR cells:       14
ABC RESULTS:        internal signals:      122
ABC RESULTS:           input signals:       63
ABC RESULTS:          output signals:       36
Removing temp directory.

26.23.14. Extracting gate netlist of module `\openMSP430' to `<abc-temp-dir>/input.blif'..
Extracted 64 gates and 144 wires to a netlist network with 80 inputs and 16 outputs.

26.23.14.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_library <abc-temp-dir>/stdcells.genlib 
ABC: Entered genlib library with 17 gates from file "<abc-temp-dir>/stdcells.genlib".
ABC: + strash 
ABC: + dretime 
ABC: + retime 
ABC: + map 
ABC: + write_blif <abc-temp-dir>/output.blif 

26.23.14.2. Re-integrating ABC results.
ABC RESULTS:                OR cells:       64
ABC RESULTS:        internal signals:       48
ABC RESULTS:           input signals:       80
ABC RESULTS:          output signals:       16
Removing temp directory.

26.24. Executing OPT pass (performing simple optimizations).

26.24.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
<suppressed ~19 debug messages>
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
<suppressed ~32 debug messages>
Optimizing module omsp_dbg_i2c.
<suppressed ~9 debug messages>
Optimizing module omsp_execution_unit.
<suppressed ~32 debug messages>
Optimizing module omsp_frontend.
<suppressed ~63 debug messages>
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
<suppressed ~33 debug messages>
Optimizing module omsp_register_file.
<suppressed ~15 debug messages>
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

26.24.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
<suppressed ~3 debug messages>
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
<suppressed ~9 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
<suppressed ~18 debug messages>
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 10 cells.

26.24.3. Executing OPT_RMDFF pass (remove dff with constant values).

26.24.4. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 8 unused cells and 5343 unused wires.
<suppressed ~240 debug messages>

26.24.5. Finished fast OPT passes.

26.25. Executing HIERARCHY pass (managing design hierarchy).

26.25.1. Analyzing design hierarchy..
Top module:  \openMSP430
Used module:     \omsp_clock_module
Used module:         \omsp_sync_cell
Used module:         \omsp_sync_reset
Used module:     \omsp_dbg
Used module:         \omsp_dbg_i2c
Used module:     \omsp_execution_unit
Used module:         \omsp_alu
Used module:         \omsp_register_file
Used module:     \omsp_frontend
Used module:     \omsp_mem_backbone
Used module:     \omsp_multiplier
Used module:     \omsp_sfr
Used module:     \omsp_watchdog

26.25.2. Analyzing design hierarchy..
Top module:  \openMSP430
Used module:     \omsp_clock_module
Used module:         \omsp_sync_cell
Used module:         \omsp_sync_reset
Used module:     \omsp_dbg
Used module:         \omsp_dbg_i2c
Used module:     \omsp_execution_unit
Used module:         \omsp_alu
Used module:         \omsp_register_file
Used module:     \omsp_frontend
Used module:     \omsp_mem_backbone
Used module:     \omsp_multiplier
Used module:     \omsp_sfr
Used module:     \omsp_watchdog
Removed 0 unused modules.

26.26. Printing statistics.

=== omsp_alu ===

   Number of wires:                635
   Number of wire bits:            853
   Number of public wires:          31
   Number of public wire bits:     249
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                641
     $_ANDNOT_                      99
     $_AND_                         10
     $_AOI3_                        81
     $_AOI4_                         2
     $_MUX_                         59
     $_NAND_                        13
     $_NOR_                         40
     $_NOT_                        100
     $_OAI3_                        61
     $_ORNOT_                        2
     $_OR_                          54
     $_XNOR_                        16
     $_XOR_                        104

=== omsp_clock_module ===

   Number of wires:                152
   Number of wire bits:            371
   Number of public wires:          88
   Number of public wire bits:     289
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                131
     $_ANDNOT_                      29
     $_AND_                         17
     $_AOI3_                         1
     $_DFF_PP0_                     25
     $_DFF_PP1_                      1
     $_MUX_                         13
     $_NAND_                         5
     $_NOR_                          5
     $_NOT_                          4
     $_OAI3_                         2
     $_ORNOT_                        7
     $_OR_                          13
     $_XNOR_                         2
     $_XOR_                          4
     omsp_sync_cell                  2
     omsp_sync_reset                 1

=== omsp_dbg ===

   Number of wires:                574
   Number of wire bits:           1107
   Number of public wires:          88
   Number of public wire bits:     569
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                650
     $_ANDNOT_                     106
     $_AND_                         19
     $_AOI3_                        48
     $_AOI4_                        16
     $_DFF_PP0_                     67
     $_DFF_PP1_                      2
     $_MUX_                        114
     $_NAND_                        17
     $_NOR_                         24
     $_NOT_                         40
     $_OAI3_                        24
     $_OAI4_                         4
     $_ORNOT_                       46
     $_OR_                          74
     $_XNOR_                         4
     $_XOR_                         44
     omsp_dbg_i2c                    1

=== omsp_dbg_i2c ===

   Number of wires:                301
   Number of wire bits:            415
   Number of public wires:          39
   Number of public wire bits:     134
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                352
     $_ANDNOT_                      53
     $_AND_                          5
     $_AOI3_                        10
     $_AOI4_                         3
     $_DFF_PP0_                     45
     $_DFF_PP1_                     10
     $_MUX_                         63
     $_NAND_                        18
     $_NOR_                          8
     $_NOT_                         47
     $_OAI3_                        18
     $_OAI4_                         4
     $_ORNOT_                       17
     $_OR_                          42
     $_XNOR_                         1
     $_XOR_                          6
     omsp_sync_cell                  2

=== omsp_execution_unit ===

   Number of wires:                341
   Number of wire bits:            740
   Number of public wires:          66
   Number of public wire bits:     435
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                392
     $_ANDNOT_                      54
     $_AND_                          6
     $_AOI3_                         6
     $_AOI4_                         2
     $_DFF_PP0_                     35
     $_MUX_                        202
     $_NAND_                         2
     $_NOR_                         13
     $_NOT_                         12
     $_OAI3_                        11
     $_OAI4_                         5
     $_ORNOT_                       23
     $_OR_                          19
     omsp_alu                        1
     omsp_register_file              1

=== omsp_frontend ===

   Number of wires:               1438
   Number of wire bits:           1960
   Number of public wires:          80
   Number of public wire bits:     525
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1638
     $_ANDNOT_                     238
     $_AND_                         21
     $_AOI3_                       138
     $_AOI4_                         5
     $_DFF_PP0_                    116
     $_DFF_PP1_                      9
     $_MUX_                        216
     $_NAND_                        45
     $_NOR_                         72
     $_NOT_                        112
     $_OAI3_                        57
     $_OAI4_                        15
     $_ORNOT_                       62
     $_OR_                         487
     $_XNOR_                        11
     $_XOR_                         34

=== omsp_mem_backbone ===

   Number of wires:                333
   Number of wire bits:            836
   Number of public wires:          71
   Number of public wire bits:     559
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                450
     $_ANDNOT_                      34
     $_AND_                          2
     $_AOI3_                        10
     $_AOI4_                         1
     $_DFF_PP0_                     38
     $_MUX_                        186
     $_NAND_                         5
     $_NOR_                         26
     $_NOT_                         21
     $_OAI3_                        13
     $_ORNOT_                       13
     $_OR_                          71
     $_XNOR_                         2
     $_XOR_                         28

=== omsp_multiplier ===

   Number of wires:               1424
   Number of wire bits:           1802
   Number of public wires:          41
   Number of public wire bits:     358
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1531
     $_ANDNOT_                     345
     $_AND_                         83
     $_AOI3_                       127
     $_AOI4_                        16
     $_DFF_PP0_                     70
     $_MUX_                        166
     $_NAND_                        26
     $_NOR_                         58
     $_NOT_                         78
     $_OAI3_                        69
     $_ORNOT_                       34
     $_OR_                          78
     $_XNOR_                       110
     $_XOR_                        271

=== omsp_register_file ===

   Number of wires:               1087
   Number of wire bits:           1771
   Number of public wires:          66
   Number of public wire bits:     525
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               1512
     $_ANDNOT_                      71
     $_AND_                         31
     $_AOI3_                       181
     $_AOI4_                        25
     $_DFF_PP0_                    232
     $_MUX_                        457
     $_NAND_                       199
     $_NOR_                         20
     $_NOT_                        116
     $_OAI3_                       120
     $_OAI4_                         7
     $_ORNOT_                       13
     $_OR_                          23
     $_XNOR_                         3
     $_XOR_                         14

=== omsp_sfr ===

   Number of wires:                 89
   Number of wire bits:            332
   Number of public wires:          48
   Number of public wire bits:     291
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 60
     $_ANDNOT_                      13
     $_DFF_PP0_                      1
     $_MUX_                          1
     $_NAND_                         2
     $_NOR_                          2
     $_NOT_                          6
     $_OAI3_                         4
     $_OAI4_                         1
     $_ORNOT_                        6
     $_OR_                          24

=== omsp_sync_cell ===

   Number of wires:                  5
   Number of wire bits:              6
   Number of public wires:           5
   Number of public wire bits:       6
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_DFF_PP0_                      2

=== omsp_sync_reset ===

   Number of wires:                  4
   Number of wire bits:              5
   Number of public wires:           4
   Number of public wire bits:       5
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                  2
     $_DFF_PP1_                      2

=== omsp_watchdog ===

   Number of wires:                152
   Number of wire bits:            277
   Number of public wires:          38
   Number of public wire bits:     141
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                172
     $_ANDNOT_                      38
     $_AND_                          4
     $_AOI3_                         2
     $_DFF_PP0_                     26
     $_MUX_                         22
     $_NAND_                         9
     $_NOR_                          5
     $_NOT_                         15
     $_OAI3_                         3
     $_OAI4_                         1
     $_ORNOT_                       10
     $_OR_                          21
     $_XNOR_                         2
     $_XOR_                         14

=== openMSP430 ===

   Number of wires:                178
   Number of wire bits:            798
   Number of public wires:         130
   Number of public wire bits:     750
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:                 72
     $_OR_                          64
     omsp_clock_module               1
     omsp_dbg                        1
     omsp_execution_unit             1
     omsp_frontend                   1
     omsp_mem_backbone               1
     omsp_multiplier                 1
     omsp_sfr                        1
     omsp_watchdog                   1

=== design hierarchy ===

   openMSP430                        1
     omsp_clock_module               1
       omsp_sync_cell                2
       omsp_sync_reset               1
     omsp_dbg                        1
       omsp_dbg_i2c                  1
         omsp_sync_cell              2
     omsp_execution_unit             1
       omsp_alu                      1
       omsp_register_file            1
     omsp_frontend                   1
     omsp_mem_backbone               1
     omsp_multiplier                 1
     omsp_sfr                        1
     omsp_watchdog                   1

   Number of wires:               6728
   Number of wire bits:          11291
   Number of public wires:         810
   Number of public wire bits:    4854
   Number of memories:               0
   Number of memory bits:            0
   Number of processes:              0
   Number of cells:               7595
     $_ANDNOT_                    1080
     $_AND_                        198
     $_AOI3_                       604
     $_AOI4_                        70
     $_DFF_PP0_                    663
     $_DFF_PP1_                     24
     $_MUX_                       1499
     $_NAND_                       341
     $_NOR_                        273
     $_NOT_                        551
     $_OAI3_                       382
     $_OAI4_                        37
     $_ORNOT_                      233
     $_OR_                         970
     $_XNOR_                       151
     $_XOR_                        519

26.27. Executing CHECK pass (checking for obvious problems).
checking module omsp_alu..
checking module omsp_clock_module..
checking module omsp_dbg..
checking module omsp_dbg_i2c..
checking module omsp_execution_unit..
checking module omsp_frontend..
checking module omsp_mem_backbone..
checking module omsp_multiplier..
checking module omsp_register_file..
checking module omsp_sfr..
checking module omsp_sync_cell..
checking module omsp_sync_reset..
checking module omsp_watchdog..
checking module openMSP430..
found and reported 0 problems.

27. Executing SPLITNETS pass (splitting up multi-bit signals).

28. Executing DFFLIBMAP pass (mapping DFF cells to sequential cells from liberty file).
  cell DFFNEGX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_N_.
  cell DFFPOSX1 (noninv, pins=3, area=96.00) is a direct match for cell type $_DFF_P_.
  cell DFFSR (noninv, pins=5, area=176.00) is a direct match for cell type $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PNP_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_PPP_ from mapping for $_DFFSR_PNP_.
  create mapping for $_DFFSR_NNN_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFFSR_NPN_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NNP_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFFSR_NPP_ from mapping for $_DFFSR_NNP_.
  create mapping for $_DFF_NN0_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NN1_ from mapping for $_DFFSR_NNN_.
  create mapping for $_DFF_NP0_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_NP1_ from mapping for $_DFFSR_NPP_.
  create mapping for $_DFF_PN0_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PN1_ from mapping for $_DFFSR_PNN_.
  create mapping for $_DFF_PP0_ from mapping for $_DFFSR_PPP_.
  create mapping for $_DFF_PP1_ from mapping for $_DFFSR_PPP_.
  final dff cell mappings:
    DFFNEGX1 _DFF_N_ (.CLK( C), .D( D), .Q( Q));
    DFFPOSX1 _DFF_P_ (.CLK( C), .D( D), .Q( Q));
    DFFSR _DFF_NN0_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_NN1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_NP0_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_NP1_ (.CLK(~C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFF_PN0_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( 1));
    DFFSR _DFF_PN1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S( R));
    DFFSR _DFF_PP0_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( 1));
    DFFSR _DFF_PP1_ (.CLK( C), .D( D), .Q( Q), .R( 1), .S(~R));
    DFFSR _DFFSR_NNN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_NNP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_NPN_ (.CLK(~C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_NPP_ (.CLK(~C), .D( D), .Q( Q), .R(~R), .S(~S));
    DFFSR _DFFSR_PNN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S( S));
    DFFSR _DFFSR_PNP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S( S));
    DFFSR _DFFSR_PPN_ (.CLK( C), .D( D), .Q( Q), .R( R), .S(~S));
    DFFSR _DFFSR_PPP_ (.CLK( C), .D( D), .Q( Q), .R(~R), .S(~S));
Mapping DFF cells in module `\omsp_alu':
Mapping DFF cells in module `\omsp_clock_module':
  mapped 25 $_DFF_PP0_ cells to \DFFSR cells.
  mapped 1 $_DFF_PP1_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_dbg':
  mapped 67 $_DFF_PP0_ cells to \DFFSR cells.
  mapped 2 $_DFF_PP1_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_dbg_i2c':
  mapped 45 $_DFF_PP0_ cells to \DFFSR cells.
  mapped 10 $_DFF_PP1_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_execution_unit':
  mapped 35 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_frontend':
  mapped 116 $_DFF_PP0_ cells to \DFFSR cells.
  mapped 9 $_DFF_PP1_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_mem_backbone':
  mapped 38 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_multiplier':
  mapped 70 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_register_file':
  mapped 232 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_sfr':
  mapped 1 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_sync_cell':
  mapped 2 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_sync_reset':
  mapped 2 $_DFF_PP1_ cells to \DFFSR cells.
Mapping DFF cells in module `\omsp_watchdog':
  mapped 26 $_DFF_PP0_ cells to \DFFSR cells.
Mapping DFF cells in module `\openMSP430':

29. Executing OPT pass (performing simple optimizations).

29.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
<suppressed ~24 debug messages>
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

29.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
<suppressed ~3 debug messages>
Finding identical cells in module `\omsp_dbg'.
<suppressed ~204 debug messages>
Finding identical cells in module `\omsp_dbg_i2c'.
<suppressed ~162 debug messages>
Finding identical cells in module `\omsp_execution_unit'.
<suppressed ~102 debug messages>
Finding identical cells in module `\omsp_frontend'.
<suppressed ~372 debug messages>
Finding identical cells in module `\omsp_mem_backbone'.
<suppressed ~111 debug messages>
Finding identical cells in module `\omsp_multiplier'.
<suppressed ~207 debug messages>
Finding identical cells in module `\omsp_register_file'.
<suppressed ~693 debug messages>
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
<suppressed ~3 debug messages>
Finding identical cells in module `\omsp_sync_reset'.
<suppressed ~3 debug messages>
Finding identical cells in module `\omsp_watchdog'.
<suppressed ~72 debug messages>
Finding identical cells in module `\openMSP430'.
Removed a total of 644 cells.

29.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \omsp_alu..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_clock_module..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_dbg..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_dbg_i2c..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_execution_unit..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_frontend..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_mem_backbone..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_multiplier..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_register_file..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sfr..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_cell..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_sync_reset..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \omsp_watchdog..
  Creating internal representation of mux trees.
  No muxes found in this module.
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

29.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \omsp_alu.
  Optimizing cells in module \omsp_clock_module.
  Optimizing cells in module \omsp_dbg.
  Optimizing cells in module \omsp_dbg_i2c.
  Optimizing cells in module \omsp_execution_unit.
  Optimizing cells in module \omsp_frontend.
  Optimizing cells in module \omsp_mem_backbone.
  Optimizing cells in module \omsp_multiplier.
  Optimizing cells in module \omsp_register_file.
  Optimizing cells in module \omsp_sfr.
  Optimizing cells in module \omsp_sync_cell.
  Optimizing cells in module \omsp_sync_reset.
  Optimizing cells in module \omsp_watchdog.
  Optimizing cells in module \openMSP430.
Performed a total of 0 changes.

29.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\omsp_alu'.
Finding identical cells in module `\omsp_clock_module'.
Finding identical cells in module `\omsp_dbg'.
Finding identical cells in module `\omsp_dbg_i2c'.
Finding identical cells in module `\omsp_execution_unit'.
Finding identical cells in module `\omsp_frontend'.
Finding identical cells in module `\omsp_mem_backbone'.
Finding identical cells in module `\omsp_multiplier'.
Finding identical cells in module `\omsp_register_file'.
Finding identical cells in module `\omsp_sfr'.
Finding identical cells in module `\omsp_sync_cell'.
Finding identical cells in module `\omsp_sync_reset'.
Finding identical cells in module `\omsp_watchdog'.
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

29.6. Executing OPT_RMDFF pass (remove dff with constant values).

29.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \omsp_alu..
Finding unused cells or wires in module \omsp_clock_module..
Finding unused cells or wires in module \omsp_dbg..
Finding unused cells or wires in module \omsp_dbg_i2c..
Finding unused cells or wires in module \omsp_execution_unit..
Finding unused cells or wires in module \omsp_frontend..
Finding unused cells or wires in module \omsp_mem_backbone..
Finding unused cells or wires in module \omsp_multiplier..
Finding unused cells or wires in module \omsp_register_file..
Finding unused cells or wires in module \omsp_sfr..
Finding unused cells or wires in module \omsp_sync_cell..
Finding unused cells or wires in module \omsp_sync_reset..
Finding unused cells or wires in module \omsp_watchdog..
Finding unused cells or wires in module \openMSP430..
Removed 0 unused cells and 947 unused wires.
<suppressed ~281 debug messages>

29.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module omsp_alu.
Optimizing module omsp_clock_module.
Optimizing module omsp_dbg.
Optimizing module omsp_dbg_i2c.
Optimizing module omsp_execution_unit.
Optimizing module omsp_frontend.
Optimizing module omsp_mem_backbone.
Optimizing module omsp_multiplier.
Optimizing module omsp_register_file.
Optimizing module omsp_sfr.
Optimizing module omsp_sync_cell.
Optimizing module omsp_sync_reset.
Optimizing module omsp_watchdog.
Optimizing module openMSP430.

29.9. Finished OPT passes. (There is nothing left to do.)

30. Executing ABC pass (technology mapping using ABC).

30.1. Extracting gate netlist of module `\omsp_alu' to `<abc-temp-dir>/input.blif'..
Extracted 641 gates and 702 wires to a netlist network with 61 inputs and 37 outputs.

30.1.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.1.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       32
ABC RESULTS:           AOI21X1 cells:       86
ABC RESULTS:           AOI22X1 cells:       38
ABC RESULTS:             INVX1 cells:       43
ABC RESULTS:            MUX2X1 cells:        3
ABC RESULTS:           NAND2X1 cells:       82
ABC RESULTS:           NAND3X1 cells:       27
ABC RESULTS:            NOR2X1 cells:       65
ABC RESULTS:            NOR3X1 cells:        6
ABC RESULTS:           OAI21X1 cells:      118
ABC RESULTS:           OAI22X1 cells:        5
ABC RESULTS:             OR2X1 cells:       22
ABC RESULTS:           XNOR2X1 cells:       47
ABC RESULTS:            XOR2X1 cells:        9
ABC RESULTS:        internal signals:      604
ABC RESULTS:           input signals:       61
ABC RESULTS:          output signals:       37
Removing temp directory.

30.2. Extracting gate netlist of module `\omsp_clock_module' to `<abc-temp-dir>/input.blif'..
Extracted 103 gates and 160 wires to a netlist network with 57 inputs and 46 outputs.

30.2.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.2.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       30
ABC RESULTS:           AOI21X1 cells:        5
ABC RESULTS:             INVX1 cells:       18
ABC RESULTS:            MUX2X1 cells:        5
ABC RESULTS:           NAND2X1 cells:        9
ABC RESULTS:           NAND3X1 cells:        8
ABC RESULTS:            NOR2X1 cells:       17
ABC RESULTS:            NOR3X1 cells:        4
ABC RESULTS:           OAI21X1 cells:        4
ABC RESULTS:             OR2X1 cells:        2
ABC RESULTS:           XNOR2X1 cells:        3
ABC RESULTS:            XOR2X1 cells:        2
ABC RESULTS:        internal signals:       57
ABC RESULTS:           input signals:       57
ABC RESULTS:          output signals:       46
Removing temp directory.

30.3. Extracting gate netlist of module `\omsp_dbg' to `<abc-temp-dir>/input.blif'..
Extracted 581 gates and 776 wires to a netlist network with 195 inputs and 111 outputs.

30.3.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.3.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       30
ABC RESULTS:           AOI21X1 cells:       51
ABC RESULTS:           AOI22X1 cells:       41
ABC RESULTS:             INVX1 cells:       76
ABC RESULTS:            MUX2X1 cells:       23
ABC RESULTS:           NAND2X1 cells:      104
ABC RESULTS:           NAND3X1 cells:       33
ABC RESULTS:            NOR2X1 cells:       66
ABC RESULTS:            NOR3X1 cells:       10
ABC RESULTS:           OAI21X1 cells:       97
ABC RESULTS:           OAI22X1 cells:        4
ABC RESULTS:             OR2X1 cells:       14
ABC RESULTS:           XNOR2X1 cells:       18
ABC RESULTS:            XOR2X1 cells:        5
ABC RESULTS:        internal signals:      470
ABC RESULTS:           input signals:      195
ABC RESULTS:          output signals:      111
Removing temp directory.

30.4. Extracting gate netlist of module `\omsp_dbg_i2c' to `<abc-temp-dir>/input.blif'..
Extracted 296 gates and 381 wires to a netlist network with 85 inputs and 55 outputs.

30.4.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.4.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       10
ABC RESULTS:           AOI21X1 cells:       24
ABC RESULTS:           AOI22X1 cells:        2
ABC RESULTS:             INVX1 cells:       44
ABC RESULTS:            MUX2X1 cells:       17
ABC RESULTS:           NAND2X1 cells:       43
ABC RESULTS:           NAND3X1 cells:       15
ABC RESULTS:            NOR2X1 cells:       26
ABC RESULTS:            NOR3X1 cells:        4
ABC RESULTS:           OAI21X1 cells:       59
ABC RESULTS:             OR2X1 cells:        9
ABC RESULTS:           XNOR2X1 cells:        5
ABC RESULTS:            XOR2X1 cells:        2
ABC RESULTS:        internal signals:      241
ABC RESULTS:           input signals:       85
ABC RESULTS:          output signals:       55
Removing temp directory.

30.5. Extracting gate netlist of module `\omsp_execution_unit' to `<abc-temp-dir>/input.blif'..
Extracted 356 gates and 549 wires to a netlist network with 193 inputs and 86 outputs.

30.5.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.5.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:        4
ABC RESULTS:           AOI21X1 cells:       40
ABC RESULTS:           AOI22X1 cells:       18
ABC RESULTS:             INVX1 cells:       47
ABC RESULTS:            MUX2X1 cells:       65
ABC RESULTS:           NAND2X1 cells:       78
ABC RESULTS:           NAND3X1 cells:        6
ABC RESULTS:            NOR2X1 cells:       40
ABC RESULTS:            NOR3X1 cells:        2
ABC RESULTS:           OAI21X1 cells:      120
ABC RESULTS:             OR2X1 cells:       14
ABC RESULTS:        internal signals:      270
ABC RESULTS:           input signals:      193
ABC RESULTS:          output signals:       86
Removing temp directory.

30.6. Extracting gate netlist of module `\omsp_frontend' to `<abc-temp-dir>/input.blif'..
Extracted 1514 gates and 1697 wires to a netlist network with 183 inputs and 182 outputs.

30.6.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.6.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       32
ABC RESULTS:           AOI21X1 cells:       95
ABC RESULTS:           AOI22X1 cells:        5
ABC RESULTS:             INVX1 cells:      118
ABC RESULTS:            MUX2X1 cells:       11
ABC RESULTS:           NAND2X1 cells:      140
ABC RESULTS:           NAND3X1 cells:       53
ABC RESULTS:            NOR2X1 cells:      150
ABC RESULTS:            NOR3X1 cells:       11
ABC RESULTS:           OAI21X1 cells:      209
ABC RESULTS:           OAI22X1 cells:       37
ABC RESULTS:             OR2X1 cells:       43
ABC RESULTS:           XNOR2X1 cells:       13
ABC RESULTS:            XOR2X1 cells:        1
ABC RESULTS:        internal signals:     1332
ABC RESULTS:           input signals:      183
ABC RESULTS:          output signals:      182
Removing temp directory.

30.7. Extracting gate netlist of module `\omsp_mem_backbone' to `<abc-temp-dir>/input.blif'..
Extracted 413 gates and 569 wires to a netlist network with 156 inputs and 153 outputs.

30.7.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.7.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:        1
ABC RESULTS:           AOI21X1 cells:        2
ABC RESULTS:             INVX1 cells:      102
ABC RESULTS:            MUX2X1 cells:      138
ABC RESULTS:           NAND2X1 cells:       54
ABC RESULTS:           NAND3X1 cells:        3
ABC RESULTS:            NOR2X1 cells:        6
ABC RESULTS:            NOR3X1 cells:        1
ABC RESULTS:           OAI21X1 cells:       51
ABC RESULTS:             OR2X1 cells:        1
ABC RESULTS:        internal signals:      260
ABC RESULTS:           input signals:      156
ABC RESULTS:          output signals:      153
Removing temp directory.

30.8. Extracting gate netlist of module `\omsp_multiplier' to `<abc-temp-dir>/input.blif'..
Extracted 1462 gates and 1566 wires to a netlist network with 104 inputs and 86 outputs.

30.8.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.8.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       50
ABC RESULTS:           AOI21X1 cells:       99
ABC RESULTS:           AOI22X1 cells:       17
ABC RESULTS:             INVX1 cells:      131
ABC RESULTS:            MUX2X1 cells:       35
ABC RESULTS:           NAND2X1 cells:      223
ABC RESULTS:           NAND3X1 cells:       36
ABC RESULTS:            NOR2X1 cells:      233
ABC RESULTS:            NOR3X1 cells:        2
ABC RESULTS:           OAI21X1 cells:      279
ABC RESULTS:           OAI22X1 cells:       20
ABC RESULTS:             OR2X1 cells:       25
ABC RESULTS:           XNOR2X1 cells:      223
ABC RESULTS:            XOR2X1 cells:      110
ABC RESULTS:        internal signals:     1376
ABC RESULTS:           input signals:      104
ABC RESULTS:          output signals:       86
Removing temp directory.

30.9. Extracting gate netlist of module `\omsp_register_file' to `<abc-temp-dir>/input.blif'..
Extracted 1281 gates and 1608 wires to a netlist network with 327 inputs and 275 outputs.

30.9.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.9.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       55
ABC RESULTS:           AOI21X1 cells:       97
ABC RESULTS:           AOI22X1 cells:      222
ABC RESULTS:             INVX1 cells:      149
ABC RESULTS:            MUX2X1 cells:        7
ABC RESULTS:           NAND2X1 cells:      157
ABC RESULTS:           NAND3X1 cells:       70
ABC RESULTS:            NOR2X1 cells:      122
ABC RESULTS:            NOR3X1 cells:        6
ABC RESULTS:           OAI21X1 cells:      446
ABC RESULTS:           OAI22X1 cells:       72
ABC RESULTS:             OR2X1 cells:        7
ABC RESULTS:           XNOR2X1 cells:        9
ABC RESULTS:            XOR2X1 cells:        5
ABC RESULTS:        internal signals:     1006
ABC RESULTS:           input signals:      327
ABC RESULTS:          output signals:      275
Removing temp directory.

30.10. Extracting gate netlist of module `\omsp_sfr' to `<abc-temp-dir>/input.blif'..
Extracted 60 gates and 97 wires to a netlist network with 37 inputs and 20 outputs.

30.10.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.10.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       15
ABC RESULTS:           AOI21X1 cells:        2
ABC RESULTS:             INVX1 cells:       13
ABC RESULTS:            MUX2X1 cells:        1
ABC RESULTS:           NAND2X1 cells:        7
ABC RESULTS:           NAND3X1 cells:        7
ABC RESULTS:            NOR2X1 cells:       12
ABC RESULTS:            NOR3X1 cells:        3
ABC RESULTS:           OAI21X1 cells:        5
ABC RESULTS:             OR2X1 cells:        1
ABC RESULTS:        internal signals:       40
ABC RESULTS:           input signals:       37
ABC RESULTS:          output signals:       20
Removing temp directory.

30.11. Extracting gate netlist of module `\omsp_sync_cell' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

30.11.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.11.2. Re-integrating ABC results.
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

30.12. Extracting gate netlist of module `\omsp_sync_reset' to `<abc-temp-dir>/input.blif'..
Extracted 1 gates and 2 wires to a netlist network with 1 inputs and 1 outputs.

30.12.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.12.2. Re-integrating ABC results.
ABC RESULTS:             INVX1 cells:        1
ABC RESULTS:        internal signals:        0
ABC RESULTS:           input signals:        1
ABC RESULTS:          output signals:        1
Removing temp directory.

30.13. Extracting gate netlist of module `\omsp_watchdog' to `<abc-temp-dir>/input.blif'..
Extracted 148 gates and 213 wires to a netlist network with 65 inputs and 38 outputs.

30.13.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.13.2. Re-integrating ABC results.
ABC RESULTS:            AND2X1 cells:       14
ABC RESULTS:           AOI21X1 cells:        5
ABC RESULTS:           AOI22X1 cells:        1
ABC RESULTS:             INVX1 cells:       26
ABC RESULTS:            MUX2X1 cells:        7
ABC RESULTS:           NAND2X1 cells:       14
ABC RESULTS:           NAND3X1 cells:       14
ABC RESULTS:            NOR2X1 cells:       25
ABC RESULTS:            NOR3X1 cells:       18
ABC RESULTS:           OAI21X1 cells:       12
ABC RESULTS:             OR2X1 cells:        5
ABC RESULTS:           XNOR2X1 cells:       11
ABC RESULTS:            XOR2X1 cells:        6
ABC RESULTS:        internal signals:      110
ABC RESULTS:           input signals:       65
ABC RESULTS:          output signals:       38
Removing temp directory.

30.14. Extracting gate netlist of module `\openMSP430' to `<abc-temp-dir>/input.blif'..
Extracted 64 gates and 144 wires to a netlist network with 80 inputs and 16 outputs.

30.14.1. Executing ABC.
Running ABC command: berkeley-abc -s -f <abc-temp-dir>/abc.script 2>&1
ABC: ABC command line: "source <abc-temp-dir>/abc.script".
ABC: 
ABC: + read_blif <abc-temp-dir>/input.blif 
ABC: + read_lib -w /home/vpai/tcl_project/osu018_stdcells.lib 
ABC: Parsing finished successfully.  Parsing time =     0.00 sec
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFNEGX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFPOSX1".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "DFFSR".
ABC: Scl_LibertyReadGenlib() skipped sequential cell "LATCH".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX1".
ABC: Scl_LibertyReadGenlib() skipped three-state cell "TBUFX2".
ABC: Library "osu018_stdcells" from "/home/vpai/tcl_project/osu018_stdcells.lib" has 26 cells (6 skipped: 4 seq; 2 tri-state; 0 no func; 0 dont_use).  Time =     0.00 sec
ABC: Memory =    0.36 MB. Time =     0.00 sec
ABC: Warning: Detected 2 multi-output gates (for example, "FAX1").
ABC: + strash 
ABC: + ifraig 
ABC: + scorr 
ABC: Warning: The network is combinational (run "fraig" or "fraig_sweep").
ABC: + dc2 
ABC: + dretime 
ABC: + retime 
ABC: + strash 
ABC: + &get -n 
ABC: + &dch -f 
ABC: + &nf 
ABC: + &put 
ABC: + write_blif <abc-temp-dir>/output.blif 

30.14.2. Re-integrating ABC results.
ABC RESULTS:             INVX1 cells:       16
ABC RESULTS:           NAND3X1 cells:       16
ABC RESULTS:            NOR2X1 cells:       32
ABC RESULTS:        internal signals:       48
ABC RESULTS:           input signals:       80
ABC RESULTS:          output signals:       16
Removing temp directory.

31. Executing FLATTEN pass (flatten design).
Using template omsp_watchdog for cells of type omsp_watchdog.
Using template omsp_sfr for cells of type omsp_sfr.
Using template omsp_dbg for cells of type omsp_dbg.
Using template omsp_mem_backbone for cells of type omsp_mem_backbone.
Using template omsp_execution_unit for cells of type omsp_execution_unit.
Using template omsp_frontend for cells of type omsp_frontend.
Using template omsp_clock_module for cells of type omsp_clock_module.
Using template omsp_multiplier for cells of type omsp_multiplier.
Using template omsp_sync_reset for cells of type omsp_sync_reset.
Using template omsp_sync_cell for cells of type omsp_sync_cell.
Using template omsp_register_file for cells of type omsp_register_file.
Using template omsp_alu for cells of type omsp_alu.
Using template omsp_dbg_i2c for cells of type omsp_dbg_i2c.
<suppressed ~16 debug messages>
No more expansions possible.
Deleting now unused module omsp_alu.
Deleting now unused module omsp_clock_module.
Deleting now unused module omsp_dbg.
Deleting now unused module omsp_dbg_i2c.
Deleting now unused module omsp_execution_unit.
Deleting now unused module omsp_frontend.
Deleting now unused module omsp_mem_backbone.
Deleting now unused module omsp_multiplier.
Deleting now unused module omsp_register_file.
Deleting now unused module omsp_sfr.
Deleting now unused module omsp_sync_cell.
Deleting now unused module omsp_sync_reset.
Deleting now unused module omsp_watchdog.
Removed 13 unused cells and 11751 unused wires.

32. Executing IOPADMAP pass (mapping inputs/outputs to IO-PAD cells).
Mapping port openMSP430.aclk using BUFX2.
Mapping port openMSP430.aclk_en using BUFX2.
Don't map input port openMSP430.cpu_en: Missing option -inpad.
Don't map input port openMSP430.dbg_en: Missing option -inpad.
Mapping port openMSP430.dbg_freeze using BUFX2.
Don't map input port openMSP430.dbg_i2c_addr_0_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_addr_1_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_addr_2_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_addr_3_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_addr_4_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_addr_5_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_addr_6_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_broadcast_0_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_broadcast_1_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_broadcast_2_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_broadcast_3_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_broadcast_4_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_broadcast_5_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_broadcast_6_: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_scl: Missing option -inpad.
Don't map input port openMSP430.dbg_i2c_sda_in: Missing option -inpad.
Mapping port openMSP430.dbg_i2c_sda_out using BUFX2.
Don't map input port openMSP430.dbg_uart_rxd: Missing option -inpad.
Mapping port openMSP430.dbg_uart_txd using BUFX2.
Don't map input port openMSP430.dco_clk: Missing option -inpad.
Mapping port openMSP430.dco_enable using BUFX2.
Mapping port openMSP430.dco_wkup using BUFX2.
Don't map input port openMSP430.dma_addr_10_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_11_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_12_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_13_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_14_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_15_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_1_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_2_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_3_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_4_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_5_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_6_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_7_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_8_: Missing option -inpad.
Don't map input port openMSP430.dma_addr_9_: Missing option -inpad.
Don't map input port openMSP430.dma_din_0_: Missing option -inpad.
Don't map input port openMSP430.dma_din_10_: Missing option -inpad.
Don't map input port openMSP430.dma_din_11_: Missing option -inpad.
Don't map input port openMSP430.dma_din_12_: Missing option -inpad.
Don't map input port openMSP430.dma_din_13_: Missing option -inpad.
Don't map input port openMSP430.dma_din_14_: Missing option -inpad.
Don't map input port openMSP430.dma_din_15_: Missing option -inpad.
Don't map input port openMSP430.dma_din_1_: Missing option -inpad.
Don't map input port openMSP430.dma_din_2_: Missing option -inpad.
Don't map input port openMSP430.dma_din_3_: Missing option -inpad.
Don't map input port openMSP430.dma_din_4_: Missing option -inpad.
Don't map input port openMSP430.dma_din_5_: Missing option -inpad.
Don't map input port openMSP430.dma_din_6_: Missing option -inpad.
Don't map input port openMSP430.dma_din_7_: Missing option -inpad.
Don't map input port openMSP430.dma_din_8_: Missing option -inpad.
Don't map input port openMSP430.dma_din_9_: Missing option -inpad.
Mapping port openMSP430.dma_dout_0_ using BUFX2.
Mapping port openMSP430.dma_dout_10_ using BUFX2.
Mapping port openMSP430.dma_dout_11_ using BUFX2.
Mapping port openMSP430.dma_dout_12_ using BUFX2.
Mapping port openMSP430.dma_dout_13_ using BUFX2.
Mapping port openMSP430.dma_dout_14_ using BUFX2.
Mapping port openMSP430.dma_dout_15_ using BUFX2.
Mapping port openMSP430.dma_dout_1_ using BUFX2.
Mapping port openMSP430.dma_dout_2_ using BUFX2.
Mapping port openMSP430.dma_dout_3_ using BUFX2.
Mapping port openMSP430.dma_dout_4_ using BUFX2.
Mapping port openMSP430.dma_dout_5_ using BUFX2.
Mapping port openMSP430.dma_dout_6_ using BUFX2.
Mapping port openMSP430.dma_dout_7_ using BUFX2.
Mapping port openMSP430.dma_dout_8_ using BUFX2.
Mapping port openMSP430.dma_dout_9_ using BUFX2.
Don't map input port openMSP430.dma_en: Missing option -inpad.
Don't map input port openMSP430.dma_priority: Missing option -inpad.
Mapping port openMSP430.dma_ready using BUFX2.
Mapping port openMSP430.dma_resp using BUFX2.
Don't map input port openMSP430.dma_we_0_: Missing option -inpad.
Don't map input port openMSP430.dma_we_1_: Missing option -inpad.
Don't map input port openMSP430.dma_wkup: Missing option -inpad.
Mapping port openMSP430.dmem_addr_0_ using BUFX2.
Mapping port openMSP430.dmem_addr_10_ using BUFX2.
Mapping port openMSP430.dmem_addr_11_ using BUFX2.
Mapping port openMSP430.dmem_addr_12_ using BUFX2.
Mapping port openMSP430.dmem_addr_1_ using BUFX2.
Mapping port openMSP430.dmem_addr_2_ using BUFX2.
Mapping port openMSP430.dmem_addr_3_ using BUFX2.
Mapping port openMSP430.dmem_addr_4_ using BUFX2.
Mapping port openMSP430.dmem_addr_5_ using BUFX2.
Mapping port openMSP430.dmem_addr_6_ using BUFX2.
Mapping port openMSP430.dmem_addr_7_ using BUFX2.
Mapping port openMSP430.dmem_addr_8_ using BUFX2.
Mapping port openMSP430.dmem_addr_9_ using BUFX2.
Mapping port openMSP430.dmem_cen using BUFX2.
Mapping port openMSP430.dmem_din_0_ using BUFX2.
Mapping port openMSP430.dmem_din_10_ using BUFX2.
Mapping port openMSP430.dmem_din_11_ using BUFX2.
Mapping port openMSP430.dmem_din_12_ using BUFX2.
Mapping port openMSP430.dmem_din_13_ using BUFX2.
Mapping port openMSP430.dmem_din_14_ using BUFX2.
Mapping port openMSP430.dmem_din_15_ using BUFX2.
Mapping port openMSP430.dmem_din_1_ using BUFX2.
Mapping port openMSP430.dmem_din_2_ using BUFX2.
Mapping port openMSP430.dmem_din_3_ using BUFX2.
Mapping port openMSP430.dmem_din_4_ using BUFX2.
Mapping port openMSP430.dmem_din_5_ using BUFX2.
Mapping port openMSP430.dmem_din_6_ using BUFX2.
Mapping port openMSP430.dmem_din_7_ using BUFX2.
Mapping port openMSP430.dmem_din_8_ using BUFX2.
Mapping port openMSP430.dmem_din_9_ using BUFX2.
Don't map input port openMSP430.dmem_dout_0_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_10_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_11_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_12_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_13_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_14_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_15_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_1_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_2_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_3_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_4_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_5_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_6_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_7_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_8_: Missing option -inpad.
Don't map input port openMSP430.dmem_dout_9_: Missing option -inpad.
Mapping port openMSP430.dmem_wen_0_ using BUFX2.
Mapping port openMSP430.dmem_wen_1_ using BUFX2.
Don't map input port openMSP430.irq_0_: Missing option -inpad.
Don't map input port openMSP430.irq_10_: Missing option -inpad.
Don't map input port openMSP430.irq_11_: Missing option -inpad.
Don't map input port openMSP430.irq_12_: Missing option -inpad.
Don't map input port openMSP430.irq_13_: Missing option -inpad.
Don't map input port openMSP430.irq_1_: Missing option -inpad.
Don't map input port openMSP430.irq_2_: Missing option -inpad.
Don't map input port openMSP430.irq_3_: Missing option -inpad.
Don't map input port openMSP430.irq_4_: Missing option -inpad.
Don't map input port openMSP430.irq_5_: Missing option -inpad.
Don't map input port openMSP430.irq_6_: Missing option -inpad.
Don't map input port openMSP430.irq_7_: Missing option -inpad.
Don't map input port openMSP430.irq_8_: Missing option -inpad.
Don't map input port openMSP430.irq_9_: Missing option -inpad.
Mapping port openMSP430.irq_acc_0_ using BUFX2.
Mapping port openMSP430.irq_acc_10_ using BUFX2.
Mapping port openMSP430.irq_acc_11_ using BUFX2.
Mapping port openMSP430.irq_acc_12_ using BUFX2.
Mapping port openMSP430.irq_acc_13_ using BUFX2.
Mapping port openMSP430.irq_acc_1_ using BUFX2.
Mapping port openMSP430.irq_acc_2_ using BUFX2.
Mapping port openMSP430.irq_acc_3_ using BUFX2.
Mapping port openMSP430.irq_acc_4_ using BUFX2.
Mapping port openMSP430.irq_acc_5_ using BUFX2.
Mapping port openMSP430.irq_acc_6_ using BUFX2.
Mapping port openMSP430.irq_acc_7_ using BUFX2.
Mapping port openMSP430.irq_acc_8_ using BUFX2.
Mapping port openMSP430.irq_acc_9_ using BUFX2.
Don't map input port openMSP430.lfxt_clk: Missing option -inpad.
Mapping port openMSP430.lfxt_enable using BUFX2.
Mapping port openMSP430.lfxt_wkup using BUFX2.
Mapping port openMSP430.mclk using BUFX2.
Don't map input port openMSP430.nmi: Missing option -inpad.
Mapping port openMSP430.per_addr_0_ using BUFX2.
Mapping port openMSP430.per_addr_10_ using BUFX2.
Mapping port openMSP430.per_addr_11_ using BUFX2.
Mapping port openMSP430.per_addr_12_ using BUFX2.
Mapping port openMSP430.per_addr_13_ using BUFX2.
Mapping port openMSP430.per_addr_1_ using BUFX2.
Mapping port openMSP430.per_addr_2_ using BUFX2.
Mapping port openMSP430.per_addr_3_ using BUFX2.
Mapping port openMSP430.per_addr_4_ using BUFX2.
Mapping port openMSP430.per_addr_5_ using BUFX2.
Mapping port openMSP430.per_addr_6_ using BUFX2.
Mapping port openMSP430.per_addr_7_ using BUFX2.
Mapping port openMSP430.per_addr_8_ using BUFX2.
Mapping port openMSP430.per_addr_9_ using BUFX2.
Mapping port openMSP430.per_din_0_ using BUFX2.
Mapping port openMSP430.per_din_10_ using BUFX2.
Mapping port openMSP430.per_din_11_ using BUFX2.
Mapping port openMSP430.per_din_12_ using BUFX2.
Mapping port openMSP430.per_din_13_ using BUFX2.
Mapping port openMSP430.per_din_14_ using BUFX2.
Mapping port openMSP430.per_din_15_ using BUFX2.
Mapping port openMSP430.per_din_1_ using BUFX2.
Mapping port openMSP430.per_din_2_ using BUFX2.
Mapping port openMSP430.per_din_3_ using BUFX2.
Mapping port openMSP430.per_din_4_ using BUFX2.
Mapping port openMSP430.per_din_5_ using BUFX2.
Mapping port openMSP430.per_din_6_ using BUFX2.
Mapping port openMSP430.per_din_7_ using BUFX2.
Mapping port openMSP430.per_din_8_ using BUFX2.
Mapping port openMSP430.per_din_9_ using BUFX2.
Don't map input port openMSP430.per_dout_0_: Missing option -inpad.
Don't map input port openMSP430.per_dout_10_: Missing option -inpad.
Don't map input port openMSP430.per_dout_11_: Missing option -inpad.
Don't map input port openMSP430.per_dout_12_: Missing option -inpad.
Don't map input port openMSP430.per_dout_13_: Missing option -inpad.
Don't map input port openMSP430.per_dout_14_: Missing option -inpad.
Don't map input port openMSP430.per_dout_15_: Missing option -inpad.
Don't map input port openMSP430.per_dout_1_: Missing option -inpad.
Don't map input port openMSP430.per_dout_2_: Missing option -inpad.
Don't map input port openMSP430.per_dout_3_: Missing option -inpad.
Don't map input port openMSP430.per_dout_4_: Missing option -inpad.
Don't map input port openMSP430.per_dout_5_: Missing option -inpad.
Don't map input port openMSP430.per_dout_6_: Missing option -inpad.
Don't map input port openMSP430.per_dout_7_: Missing option -inpad.
Don't map input port openMSP430.per_dout_8_: Missing option -inpad.
Don't map input port openMSP430.per_dout_9_: Missing option -inpad.
Mapping port openMSP430.per_en using BUFX2.
Mapping port openMSP430.per_we_0_ using BUFX2.
Mapping port openMSP430.per_we_1_ using BUFX2.
Mapping port openMSP430.pmem_addr_0_ using BUFX2.
Mapping port openMSP430.pmem_addr_10_ using BUFX2.
Mapping port openMSP430.pmem_addr_11_ using BUFX2.
Mapping port openMSP430.pmem_addr_12_ using BUFX2.
Mapping port openMSP430.pmem_addr_13_ using BUFX2.
Mapping port openMSP430.pmem_addr_1_ using BUFX2.
Mapping port openMSP430.pmem_addr_2_ using BUFX2.
Mapping port openMSP430.pmem_addr_3_ using BUFX2.
Mapping port openMSP430.pmem_addr_4_ using BUFX2.
Mapping port openMSP430.pmem_addr_5_ using BUFX2.
Mapping port openMSP430.pmem_addr_6_ using BUFX2.
Mapping port openMSP430.pmem_addr_7_ using BUFX2.
Mapping port openMSP430.pmem_addr_8_ using BUFX2.
Mapping port openMSP430.pmem_addr_9_ using BUFX2.
Mapping port openMSP430.pmem_cen using BUFX2.
Mapping port openMSP430.pmem_din_0_ using BUFX2.
Mapping port openMSP430.pmem_din_10_ using BUFX2.
Mapping port openMSP430.pmem_din_11_ using BUFX2.
Mapping port openMSP430.pmem_din_12_ using BUFX2.
Mapping port openMSP430.pmem_din_13_ using BUFX2.
Mapping port openMSP430.pmem_din_14_ using BUFX2.
Mapping port openMSP430.pmem_din_15_ using BUFX2.
Mapping port openMSP430.pmem_din_1_ using BUFX2.
Mapping port openMSP430.pmem_din_2_ using BUFX2.
Mapping port openMSP430.pmem_din_3_ using BUFX2.
Mapping port openMSP430.pmem_din_4_ using BUFX2.
Mapping port openMSP430.pmem_din_5_ using BUFX2.
Mapping port openMSP430.pmem_din_6_ using BUFX2.
Mapping port openMSP430.pmem_din_7_ using BUFX2.
Mapping port openMSP430.pmem_din_8_ using BUFX2.
Mapping port openMSP430.pmem_din_9_ using BUFX2.
Don't map input port openMSP430.pmem_dout_0_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_10_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_11_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_12_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_13_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_14_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_15_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_1_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_2_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_3_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_4_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_5_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_6_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_7_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_8_: Missing option -inpad.
Don't map input port openMSP430.pmem_dout_9_: Missing option -inpad.
Mapping port openMSP430.pmem_wen_0_ using BUFX2.
Mapping port openMSP430.pmem_wen_1_ using BUFX2.
Mapping port openMSP430.puc_rst using BUFX2.
Don't map input port openMSP430.reset_n: Missing option -inpad.
Don't map input port openMSP430.scan_enable: Missing option -inpad.
Don't map input port openMSP430.scan_mode: Missing option -inpad.
Mapping port openMSP430.smclk using BUFX2.
Mapping port openMSP430.smclk_en using BUFX2.
Don't map input port openMSP430.wkup: Missing option -inpad.

33. Executing OPT pass (performing simple optimizations).

33.1. Executing OPT_EXPR pass (perform const folding).
Optimizing module openMSP430.

33.2. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

33.3. Executing OPT_MUXTREE pass (detect dead branches in mux trees).
Running muxtree optimizer on module \openMSP430..
  Creating internal representation of mux trees.
  No muxes found in this module.
Removed 0 multiplexer ports.

33.4. Executing OPT_REDUCE pass (consolidate $*mux and $reduce_* inputs).
  Optimizing cells in module \openMSP430.
Performed a total of 0 changes.

33.5. Executing OPT_MERGE pass (detect identical cells).
Finding identical cells in module `\openMSP430'.
Removed a total of 0 cells.

33.6. Executing OPT_RMDFF pass (remove dff with constant values).

33.7. Executing OPT_CLEAN pass (remove unused cells and wires).
Finding unused cells or wires in module \openMSP430..
Removed 0 unused cells and 27 unused wires.
<suppressed ~1 debug messages>

33.8. Executing OPT_EXPR pass (perform const folding).
Optimizing module openMSP430.

33.9. Finished OPT passes. (There is nothing left to do.)

34. Executing Verilog backend.
Dumping module `\openMSP430'.

End of script. Logfile hash: 40c426868c
CPU: user 16.17s system 0.14s, MEM: 71.20 MB total, 64.12 MB resident
Yosys 0.9 (git sha1 1979e0b)
Time spent: 18% 30x opt_clean (2 sec), 17% 29x opt_merge (2 sec), ...
